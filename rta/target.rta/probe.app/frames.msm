	$list		0
	$path		../
	$include	def/rta.def
	$include	def/vector.def
	$include	def/ii.def
	$include	language/stack.def
	$include	stream/stream.def
	$include	language/catalog.def
	$include	image.app/imports.def
	$include	teraframe/dframe.def
	$path
	$list

.	__BASE	$equ	TERAPROBE_P

dframef	$form	6, 42, 24, 24

$(1:01000/$1)
pointer	+	vpointer(21)

$(3:03000/$3)
one	0
two	0
three	0
four	0
five	0
six	0
seven	0
eight	0
nine	0
ten	0

	$lit	4
$(4:*1/$4)
$(0:*1)

frames*	$base_d	$zenith(3)-03000	1024
	c	(seg$load)	0,,xi	(dframeprobe_data:L),,long
	ql	(dframef	8, 10000, vpointer(21), 1)
	ii	DFRAME$
	sa	one
	ql	(dframef	10, 20000, vpointer(21), 1q)
	ii	DFRAME$
	sa	two
	ql	(dframef	12, 30000, vpointer(21), 1q)
	ii	DFRAME$
	sa	three
	ql	(dframef	14, 40000, vpointer(21), 1q)
	ii	DFRAME$
	sa	four
	ql	(dframef	16, 7000000, vpointer(21), 0400000++1q)
	ii	DFRAME$
	sa	five
	ql	(dframef	18, 8000000, vpointer(21), 0400000++1q)
	ii	DFRAME$
	sa	six

	dframe$bank	20:21 vpointer(1) 80 (100000),,,S
	sa	seven
	
	printf	$3("%x %x %x %x %x %x %x -> %x":10:10:0),,xi	one two three	;
								four five six	;
								seven vpointer(1)

again	.	printf	$3("[%d %x] ":0),,xi	counter	*pointer

	la	*pointer
	ii	BANK$FREE

	jna	voidr
	printf	$3("%x %x:%x":10:0),,xi	pointer	a,,long

voidr	inc	pointer
	lx	pointer
	lr	03000,,xi
	jxl	again	

	ii	YIELD$
	fret	0

.	$do	$<256,$(0:256)	. does not apply to relocatables

