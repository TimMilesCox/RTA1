	$list		0
	$path		../
	$include	def/rta.def
	$include	def/ii.def
	$include	def/vector.def
	$include	language/stack.def
	$include	stream/stream.def
	$include	image.app/imports.def
	$path
	$list

DATA	$equ	72

$(1:01000/$1)
$(3:03000/$3)
data	$res	DATA//3
nextf	0
	$lit	4
$(4:*1/$4)
$(0:*1)
lineal*	$base_d	$zenith(3)-03000	1024	1024
	c	(seg$load)	0,,xi	(lineal_data:L),,long

	call	(unpack_callstring)

	la	fp
loop1	sa	nextf
	dl	0, a
	jza	loop
	printf	$3("%d:%s":10:0),,xi	a	b
	la	nextf
	la	2, a, i
	j	loop1

loop	fgets	data,,xi	DATA,,xi	stdin
	tp	data
	j	ctrl_d
	lk	(255*/16s)
	la	('@'*/16s)
	mtane	data
	j	@
	c	(write)	stdout	data,,xi	b

	$if	0
	c	(write)	stdout	$3("":10:0),,xi	2,,xi	. CR LF received
	$endif

	c	(fsync)	stdout
	j	loop

@
ctrl_d	fret	0

