mstring8	$tree

.	catenate string2 defined starting word and number of byte
.	to string1 defined starting word and number of bytes

memcatena	$tree
	$head_far	 params(string1,	int		;
				@column,	int		;
				string2,	int		;
				bytes,		int	)	;
			scalars(save_ab67,	float,	a	;
				save_rkxy,	float,	r	)

				. catenate strings of known length
	lb	bytes		. input strings are held in whole words
	lb	2, b, i		. either string may trail slack bytes
	mf	(R3)		
	aa	string2
	lr	a		. string2 + containing words

	lb	@column		. octets string 1
	sbl	3		. bits string1
	mf	(R24)		. words rounded down
	sbr	22		. remainder offset
	sbl	3
	sb	6

	lx	string1		. 1st string
	ax	a		. point beyond last whole word

	ly	string2		. additonal string
	tz	6		. load part word if any
	lb	0, x		. of 1st string

roll	jyge	total		. additional string all transfered?
	la	0, y		. load some
	ay	1,,xi		. pointer forward
	rbl	*6		. roll in partial word bits if any
	drr	*6
	sa	0, x		. store merged or not merged word
	ax	1,,xi		. pointer forward
	j	roll

total	tz	6		. if catenate was at a bit offset
	sb	0, x		. store last part word trailing zero

	qpop	r
	qpop	a
	fret	0
		$root
		$root
