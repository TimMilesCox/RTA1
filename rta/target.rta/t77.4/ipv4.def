.       
.    Copyright Tim Cox, 2012
.    TimMilesCox@gmx.ch
.
.    This file is instruction code for the freeware processor architecture
.
.                RTA1
.
.    RTA1 is a free processor architecture specification.
.
.    The executable emulation of RTA1 is free software.
.
.    This instruction code for the target RTA1 architecture is free software
.
.    Software programs delivered with this software to connect the
.    emulated RTA1 with real network interfaces in the emulator host
.    are free software
.
.    Scripts and programs delivered with this software for running
.    on other computers and interacting with the RTA1 are free software
.
.    Scripts and utility programs for constructing RTA1 target
.    executable software are free software      
.
.    You can redistribute it and/or modify RTA1
.    under the terms of the GNU General Public License as published by
.    the Free Software Foundation, either version 3 of the License, or
.    (at your option) any later version.
.
.    RTA1 is distributed in the hope that it will be useful,
.    but WITHOUT ANY WARRANTY; without even the implied warranty of
.    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.    GNU General Public License for more details.
.
.    You should have received a copy of the GNU General Public License
.    along with RTA1.  If not, see <http://www.gnu.org/licenses/>.
.
.


IPV4_OVERHAUL	$equ	160

	$do	IPV4_OVERHAUL///8,	$flag	nonzero IPV4_OVERHAUL must be a multiple of 8
	$do	IPV4_OVERHAUL^=0,	;
	$do	IPV4_OVERHAUL<120,	$flag	nonzero IPV4_OVERHAUL may not be < 120
	$do	IPV4_OVERHAUL>160,	$flag	IPV4_OVERHAUL may not be > 160

IPV4_FRAGMENTED_DGRAMS $equ 0

ROUTES	$equ	24
RELAY_ROUTE $equ 1*/11

NET_ADDRESSES	$equ	24
RX_FRAGMENTS	$equ	0	. nonzero is maximum fragmented rx dgrams handled at once
TX_FRAGMENTS	$equ	0	. nonzero means source fragmentation

IFGW		$equ	4
ANYNET		$equ	0

	$if	0

IPPROTO_ICMP	$equ	1
IPPROTO_TCP	$equ	6
IPPROTO_UDP	$equ	17

IP_DNF	$equ	04000

	$endif			. these have moved to the
				. application-visible ip.def

IP_MORE	$equ	02000
IP_OFFSET_MASK $equ 01FFF

IP_DEFAULT_TTL $equ 03C00

p       $proc
datagram* $name
*       $tree
vers_ihl_tos +	0, p(1, 1), p(1, 2)
bytes	+	p(1, 3)
id	+	p(1, 4)
flags_fragment + p(1, 5)
ttl_protocol +	p(1, 6)
checksum +	p(1, 7)
ipsource +	p(1, 8):d
ipdest	+	p(1, 9):d
        $root
        $end

p	$proc
netv4*	$name
*	$tree
next	+	p(5, 1)
lexical	+	p(6, 1)
i_f	+	p(4, 1)
	$sterm	'.'
net	+	0, p(1, 1:1), p(1, 1:2), 0, p(1, 1:3), p(1, 1:4):d
mask	+	0, p(2, 1:1), p(2, 1:2), 0, p(2, 1:3), p(2, 1:4):d
broadcast +	0, p(3, 1:1), p(3, 1:2), 0, p(3, 1:3), p(3, 1:4):d
	$sterm	':'
	$root
	$end
