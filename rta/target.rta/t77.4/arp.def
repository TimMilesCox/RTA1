ETHERNET_SPACE	$equ	1

ARP_REQUEST	$equ	1
ARP_REPLY	$equ	2

ARP_REFRESH	$equ	20*60*1000

p	$proc
arp_dgram* $name
*	$tree
htype	$res	1
ptype	$res	1
hl_pl	$res	1
oper	$res	1
sha	$res	HLEN//2
spa	$res	PLEN//2
tha	$res	HLEN//2
tpa	$res	PLEN//2
	$root
	$end

p	$proc
arp_cache* $name
*	$tree
next	$res	1
refresh	$res	1
i_f	$res	1
tha	$res	HLEN//2
tpa	$res	PLEN//2
	$root
	$end

f	$func
arp_store* $name
f	$func
log*	$name
fulcrum	$set	f(1, 1)-1
	$do	fulcrum=0,	$return 0
?	$do	6,	;
	$do	1*/?>fulcrum,	$return	?
	$note	excessive ARP cache lines requested
	$return	?
	$end
	$return	1*/log(f(1, 1))/*2
	$end

p	$proc
wphysa*	$name
p	$proc
wlong*	$name
	dl	p(2, 1)+?*2-2, p(2, 2)
	ds	p(1, 1)+?*2-2, p(1, 2)
	$end
p	$proc
wlast*	$name
	la	p(2, 1)+?*2, p(2, 2)
	sa	p(1, 1)+?*2, p(1, 2)
	$end
?	$do	HLEN/4,		wlong	p(1)	p(2)
?	$do	HLEN///4^=0,	wlast	p(1)	p(2)
	$end

