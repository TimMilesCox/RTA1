fp_96	$tree

$(1)
socket1	+	0
fp_bound -	1
portcb_lva	$res 1
portcb		$res 1

$(0)
fp_server	$head_far	scalars(response_axw,	int	;		
					operator,	int	;
					left,		float	;
					right,		float	)

	tz	socket1
	j	fp_rx
	la	(IPPROTO_UDP*/16)
	call	(__socket)
	sa	socket1
	jna	fp_error

	c	(bind) a (FPSERVER_PORT:d),,long

.	lb, xi	FPSERVER_PORT
.	sb	7
.	z	6
.	call	(bind)

	sa	fp_bound
	jna	fp_error

	dl	10
	ds	portcb_lva

fp_rx	tp	fp_bound
	j	fp_error

	dl	portcb_lva
	sabr	BSOCKET

fp_rx1	lb	s:udp:socket_inq.head, b
	jzb	fp_no_traffic

	$if	1

	sb	fp
	la	21+7+1+2+1,,xi
	call	(udp_rtxbuffer)
	jza	fp_release
	sa	response_axw
	la	descriptor:bytes
	lb	descriptor:apdata
	call	(rstream_start_net)

	$else

	la	descriptor:bytes, b
	sa	BYTES

	z	RDATAC

	push	descriptor:apdata, b
	pop	q

	la, xi	21+7+1+2+1
	call	(udp_rtxbuffer)
	jza	fp_release

	ly	descriptor:apdata, a
	sa	response_axw
	sy	p
	z	WDATAC
	z	WDATA

	$endif

	call	(floating_scan)
	qs	left

	call	(symbol_scan)
	sa	operator

	call	(floating_scan)
	qs	right

	lr, xi	0
	la	LAST_BYTE_READ	.	LAST_BYTE_READ
	aa, xi	-','

	jnza	fp_again
	call	(iscan_skip)
	lb, xi	1		.	nothing scanned
	ab, xi	-1
	jnb	fp_again
	lr	b

fp_again
	la	operator

	anu, xi	'+'
	jzb	fp_add
	anu, xi	'-'
	jzb	fp_add_negative
	anu, xi	'*'
	jzb	fp_multiply
	anu, xi	'/'
	jzb	fp_divide
	j	fp_nop

fp_add
	ql	left
fp_add_again
	fa	right
	jdr	fp_add_again
	j	fp_edit

fp_add_negative
	ql	left
fp_add_negative_again
	fan	right
	jdr	fp_add_negative_again
	j	fp_edit

fp_multiply
	ql	left
fp_multiply_again
	fm	right
	jdr	fp_multiply_again
	j	fp_edit

fp_divide
	ql	left
fp_divide_again
	fd	right
	jdr	fp_divide_again
	j	fp_edit

fp_nop	ql	left			. no operation
					. return scanned number if any
fp_edit
	$if	1

	lx	response_axw
	lx	descriptor:apdata, x
	call	(wstream_start_net)

	$else

	z	BYTES

	$endif

	ii	FP_XPO$FLAG		. must drain cached exponent overflow event
	ql	(-0.0)			. because fpser192 is also in this thread
					. also the event may have been in scan library
					. and not appear here as -0.0
	call	(floating_iedit)

	la	("":10:0:0)
	wsr	24
	
	lx	response_axw
	la	BYTES
	la, i	1, a
	sa	descriptor:bytes, x


	call	(udp_acw_send)

fp_release
	lx	portcb			. port structure in scalar frame
	call	(release_udgram)
	lb	portcb			. port structure in scalar frame
	j	fp_rx1
fp_no_traffic
fp_error

	lx, i	$$frame, sp
	sx	sp
	fret	0
	$root
