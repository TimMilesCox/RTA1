hex2f	$tree

.	%a specification	read up to 24 hex symbols -> 24 quartets

x2f96	$head_far	scalars(caller96_x,	int, 	x	;
				train96,	float,	(0.0)	)

	lcal	advance

x2f96_new
	lcal	hexa:hex_symbol?
	j	x2f96z

	sa	6
	dl	train96
	dsl	4
	lx	train96,,i

	$do	2,	lcal	shunt

	orB	6
	ds	train96+2

x2f96_next
	READ_BYTE
	j	x2f96_new

x2f96z	qpop	a
	pop	x
	fret	0

.	%A specification, read up to 48 hex symbols -> 48 quartets

x2f192	$head_far	scalars(caller192_x,	int, x	;
				train192,	float192)
	lcal	advance

x2f192_new
	lcal	hexa:hex_symbol?
	j	x2f192z

	sa	6
	dl	train192
	dsl	4
	lx	train192,,i

	$do	6,	lcal	shunt

	orB	6
	ds	train192+6

x2f192_next
	READ_BYTE
	j	x2f192_new

x2f192z	qpop	a
	qpop	8
	pop	x
	fret	0

.	write 1 updated word
.	position 6 more quartets as the next word

shunt	sa	0, x		. [ 1 ] [ 2 3 4 5 6 7 ] [ 8 9 A B C z ]
	la	2, x		.	[ D E F G H I ]
	rbr	4		.			[ z 8 9 A B C ]
	drr	20		.	[ 8 9 A B C D ] [ E F G H I z ]
	ax	1,,xi
	lret	0

	$root
