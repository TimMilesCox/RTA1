$(0)
fedit192 $tree

fedit_start
			. WRITE_START is in write_stream_start	. a is on stack top
	la	'+',,xi
	tn	1, sp	. 0, sp is lcal return address
	j	write_sign
	n	1, sp
	n	b
	n	6
	n	7
	n	8
	n	9
	n	10
	n	11
	la	'-',,xi
write_sign
	WRITE_BYTE
	lret	0

fedit	off	fp$r	. makes a mess if it stays on
	push	a
	la	8
	xor	9
	jna	fedito	. $residue is normalised

	pop	a	. $residue is not normalised
	j	fediti	. edit a 4-word float
			. zero $residue has no
			. exponent for alignment 

fedito	lcal	fedit_start
	pop	a

	call	(scale_out192)

	call	(align192)

	or	'0',,xi
	WRITE_BYTE
	la	'.',,xi
	WRITE_BYTE

	call	(fraction6_7)

display	la	0, x
	jxge	display_last
	push	6
	lcal	allsix
	pop	6
	ax	1,,xi
	j	display
display_last
	lcal	up2six

	tz	SCALE
	lcal	edit_scale
	fret	0

	$root
