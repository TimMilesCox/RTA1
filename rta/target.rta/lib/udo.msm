
apply_scale192
	sb	SCALE
	lk	8,,xi	. table increment
	lx	(lcal	scale192),,xi
	ly	upward192,,xi
	jpb	apply
	ly	downward192,,xi
	n	SCALE
	inc	SCALE
	j	apply

apply_scale
	sb	SCALE
	lk	4,,xi	. table increment
	lx	(fm	0, y),,xi
	ly	upward,,xi
	jpb	apply96
	ly	downward,,xi
	n	SCALE
	inc	SCALE
apply96	ql	8

apply	lr	21-1,,xi

larger?	src	SCALE
	jnc	dont
	ex	0, x
dont	ay	k	. table increment
	jdr	larger?
	fret	0

scale192
major	$equf	3, sp
minor	$equf	7, sp

	$if	1
	lc	flm	major,,i
	$else
	ql	major
	on	fp$r
	fm	0, y
	qs	major
	ql	minor
	off	fp$r
	fm	0, y
	fa	$residue
	qs	minor
	$endif
	lret	0

flm	$head_near	 params(mul192,	int)	;
			scalars(ux,	int,x	;
				tempu,	float	;
				templ,	float	)

fmajor	$equf	0, x

	lx	mul192		. pointer to multiplicand
	ql	fmajor		. major * major
	on	fp$r
	fm	0, y
	qs	tempu
	off	fp$r
	ql	fmajor+4	. minor * major
	fm	0, y
	fa	$residue	. + residue
	qs	templ
	ql	fmajor		. major * minor
	on	fp$r
	fm	4, y
	qs	fmajor
	off	fp$r
	ql	fmajor+4	. minor * minor
	fm	4, y
	fa	$residue	. + residue
	qs	fmajor+4
	ql	fmajor		. 2nd long product
	on	fp$r
	fa	tempu		. + 1st long product
	qs	fmajor		. store major
	off	fp$r
	ql	fmajor+4	. add residue to minor
	fa	templ
	fa	$residue
	on	fp$r
	fa	fmajor
	off	fp$r
	qs	fmajor
	ql	8
	qs	fmajor+4	. store minor
	lx	ux		. restore caller pointer		
	$ret

	$do	$<256,$(0:256)
upward
?	$do	21,pplus(?)	1*+(1*/?-1)
downward
?	$do	21,pminus(?)	1*-(1*/?-1)

upward192
?	$do	21,pplu192(?)	major_minor	1*+(1*/?-1)
downward192
?	$do	21,pmin192(?)	major_minor	1*-(1*/?-1)

