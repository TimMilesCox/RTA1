MASMX 7r3A Build 12
3/proton.msm
*EOF*
  :                            26 	$list
  :                            27 
  :                            28 ROTARY		$equ	1
  :                            29 RX_THREADS	$equ	8
  :                            30 RX_PORTS	$equ	8000
  :                            31 RX_RANGE	$equ	RX_PORTS/RX_THREADS
  :                            32 
  :                            33 DATA	$equ	120
  :                            34 	$set_option	"z"
  :                            35 
  :                            36 $(69::,b)
45:000000                     +37 so	$socket
45:000002                     +37 
45:000004                     +37 
45:000005                     +37 
45:000006                     +37 
45:000007                     +37 
45:000005                     +37 
45:000006                     +37 
45:000007                     +37 
  :                            38 
  :                            39 $(66::,x)
42:000000                     +40 tlist	tbank
42:000001                     +40 
42:000002                     +40 
42:000003                     +40 
42:000004                     +40 
42:000005                     +40 
42:000006                     +40 
42:000007                     +40 
42:000008                     +40 
42:000009                     +40 
42:00000A                     +40 
42:00000B                     +40 
42:00000C                     +40 
42:00000D                     +40 
42:00000E                     +40 
42:00000F                     +40 
42:000010                     +40 
42:000011                     +40 
42:000012                     +40 
42:000013                     +40 
42:000014                     +40 
42:000015                     +40 
42:000016                     +40 
42:000017                     +40 
42:000018                     +40 
42:000019                     +40 
42:00001A                     +40 
42:00001B                     +40 
42:00001C                     +40 
42:00001D                     +40 
42:00001E                     +40 
42:00001F                     +40 
42:000020                     +40 
42:000021                     +40 
42:000022                     +40 
42:000023                     +40 
42:000024                     +40 
42:000025                     +40 
42:000026                     +40 
42:000027                     +40 
42:000028                     +40 
42:000029                     +40 
42:00002A                     +40 
42:00002B                     +40 
42:00002C                     +40 
42:00002D                     +40 
42:00002E                     +40 
42:000030                     +40 
42:000032                     +40 
42:000034                     +40 
42:000036                     +40 
42:000038                     +40 
42:000039                     +40 
42:00003A                     +40 
42:00003B                     +40 
42:00003C                     +40 
42:00003D                     +40 
42:00003E                     +40 
42:00003F                     +40 
42:000040                     +40 
42:000041                     +40 
42:000042                     +40 
42:000043                     +40 
42:000044                     +40 
42:000045                     +40 
42:000046                     +40 
42:000048                     +40 
42:00004A                     +40 
42:00004C                     +40 
42:00004E                     +40 
42:000050                     +40 
42:000051                     +40 
42:000052                     +40 
42:000053                     +40 
42:000054                     +40 
42:000055                     +40 
42:000056                     +40 
42:000057                     +40 
  :                            41 
  :                            42 $(66::,x)
42:000000                     +43 transmission	tcp_connection
42:000001                     +43 
42:000002                     +43 
42:000003                     +43 
42:000004                     +43 
42:000005                     +43 
42:000006                     +43 
42:000008                     +43 
42:00000A                     +43 
42:00000C                     +43 
42:00000E                     +43 
42:000010                     +43 
42:000011                     +43 
42:000012                     +43 
42:000013                     +43 
42:000014                     +43 
42:000015                     +43 
42:000016                     +43 
42:000017                     +43 
  :                            44 
  :                            45 $(71::,sp)
47:000000                     +46 dgram	datagram
47:000001                     +46 
47:000002                     +46 
47:000003                     +46 
47:000004                     +46 
47:000005                     +46 
47:000006                     +46 
47:000008                     +46 
  :                            47 
  :                            48 $(70::,fp)
  :                            49 descriptor acw
  :                            50 
  :                            51 $(3:03000/$3)
  :                            52 
03:003000  000003 000010 000A00 000000 000A00 00000A
                              +53 route_10	5-2, 16, 0a00, 0, 0a00, 000a:H
03:003006  000003 000010 000A01 000000 000000 000000
                              +54 route_10_1	5-2, 16, 0a01, 0, 0, 0:H
03:00300C  000003 000010 000A02 000000 000A00 00000A
                              +55 route_10_2	5-2, 16, 0a02, 0, 0a00, 000a:H
  :                            56 
03:003012  000000              +57 chain_again	0
  :                            58 
03:003013  000000              +59 command_byte	0
03:003014  000000              +60 bytes		0
03:003015  002800              +61 port		10240
03:003016  002800              +62 restart_local_port	10240
03:003017  002800              +63 local_port	10240
03:003018  000400              +64 ports	1024
03:003019  000400              +65 restart_ports	1024
03:00301A  002800              +66 restart_port	10240
03:00301B  000014              +67 connections	20
03:00301C  000000              +68 connections_prolog	0	. make a 48-bit integer for quick add
03:00301D  000014              +69 connections_pro	20
03:00301E  000000 000000        +70 connections_total	0L
03:003020  000000 00000A        +71 interval		10L
03:003022  000000 000000        +72 tx_interval		0L
  :                            73 
  :                            74 	$res	120
  :                            75 
03:00309C  0A0100 012800        +76 local_restart	$net_socket	10.1.0.1:10240
03:00309E  0A0200 012800        +77 remote_restart	$net_socket	10.2.0.1:10240
  :                            78 
  :                            79 socket_addresses
03:0030A0  0A0100 012800        +80 local_socket	$net_socket	10.1.0.1:10240
03:0030A2  0A0200 012800        +81 remote_socket	$net_socket	10.2.0.1:10240
  :                            82 
  :                            83 local_socket_name	$res	3
  :                            84 remote_socket_name	$res	3
  :                            85 
03:0030AA  000000 000000        +86 payload_segments	0L
03:0030AC  000000 000000        +87 payload_sent		0L
  :                            88 
03:0030AE  000001              +89 times	1
  :                            90 data	$res	DATA//3
  :                            91 message	$res	DATA//3
  :                            92 
03:0030FF  000000 000000 000000 000000 000000 000000 000000 000000
                              +93 ?	$do	4,command_word(?)	0o
03:003107  000000 000000 000000 000000 000000 000000 000000 000000
                              +93 
03:00310F  000000 000000 000000 000000 000000 000000 000000 000000
                              +93 
03:003117  000000 000000 000000 000000 000000 000000 000000 000000
                              +93 
  :                            94 
  :                            95 $(0:0/$0)
  :                            96 
  :                            97 __BASE	$equ	PROTON_P
  :                            98 __PRIORITY $equ	0
  :                            99 
[+0001]18
[+0000]18*/30
00:000040  000050 000000 001000 000000
                              +100 	catalog
00:000044  4D0003              +100 
00:000045  000000              +100 
[+0002]30
00:000046  000000 000000        +100 
[+0000]18
[+0001]18*/48
00:000048  800040 000000 009000 FFFFFF 000000 000000 000050 000000
                              +100 
  :                            101 
                                	$base_d	$zenith(3)-03000	1024	1024	1024	1024	1024	1024	1024	1024	;
                                					1024	1024	1024	1024	1024	1024	1024	1024	;
                                					1024	1024	1024	1024	1024	1024	1024	1024	;
00:000050  60207F              +105 					1024	1024	1024	1024	1024	1024	1024	1024	1024
00:000051  340003              +105 
00:000052  64C001              +105 
00:000053  340004              +105 
00:000054  64C001              +105 
00:000055  340005              +105 
00:000056  64C001              +105 
00:000057  340006              +105 
00:000058  64C001              +105 
00:000059  340007              +105 
00:00005A  64C001              +105 
00:00005B  340008              +105 
00:00005C  64C001              +105 
00:00005D  340009              +105 
00:00005E  64C001              +105 
00:00005F  34000A              +105 
00:000060  64C001              +105 
00:000061  34000B              +105 
00:000062  600336              +105 
00:000063  75007A              +105 
00:000064  600337              +105 
00:000065  20000E              +105 
  :                            106 
  :                            107 	$if	0
  :                            108 	la	4096,,xi
  :                            109 	ii	BANK$
  :                            110 	push	a			. no stack_dependent references
  :                            111 	sabr	SPRING_Q
  :                            112 	$endif
  :                            113 
00:000066  9F0338              +114 	c	(seg$load)	0,,xi	(proton_data:L),,long
00:000067  FD0000              +114 
00:000068  FCF003              +114 
00:000069  FF033A              +114 
00:00006A  38000F              +114 
  :                            115 
  :                            116 	$if	0
  :                            117 	pop	spring_page		. certainly none until here
  :                            118 	$endif
  :                            119 
00:00006B  5D3000              +120 	ly	route_10,,xi
00:00006C  FF033B              +121 	call	(__route_config)
00:00006D  5D3006              +122 	ly	route_10_1,,xi
00:00006E  FF033B              +123 	call	(__route_config)
00:00006F  5D300C              +124 	ly	route_10_2,,xi
00:000070  FF033B              +125 	call	(__route_config)
  :                            126 
  :                            127 	$if	ROTARY
  :                            128 
  :                            129 rx_start* $proc
  :                            130 	ql	(rthreads:rx_thread, 0, rxport_range(?), THREAD_FP(?+1)q)
  :                            131 	ii	THREAD$
  :                            132 
  :                            133 	$if	1
  :                            134 	lb	$3("proton_rx(":'0'+?///10:")":0),,xi
  :                            135 	$else
                                	lb	?-1+$0(names	proton_rx(1) proton_rx(2) proton_rx(3) proton_rx(4)	;
  :                            137 				proton_rx(5) proton_rx(6) proton_rx(7) proton_rx(8))
  :                            138 	$endif
  :                            139 
  :                            140 	ii	TAG$
  :                            141 	$end
  :                            142 
00:000071  4F033C              +143 ?	$do	RX_THREADS,	rx_start
00:000072  750047              +143 
00:000073  6D3155              +143 
00:000074  750049              +143 
00:000075  4F0340              +143 
00:000076  750047              +143 
00:000077  6D315A              +143 
00:000078  750049              +143 
00:000079  4F0344              +143 
00:00007A  750047              +143 
00:00007B  6D315F              +143 
00:00007C  750049              +143 
00:00007D  4F0348              +143 
00:00007E  750047              +143 
00:00007F  6D3164              +143 
00:000080  750049              +143 
00:000081  4F034C              +143 
00:000082  750047              +143 
00:000083  6D3169              +143 
00:000084  750049              +143 
00:000085  4F0350              +143 
00:000086  750047              +143 
00:000087  6D316E              +143 
00:000088  750049              +143 
00:000089  4F0354              +143 
00:00008A  750047              +143 
00:00008B  6D3173              +143 
00:00008C  750049              +143 
00:00008D  4F0358              +143 
00:00008E  750047              +143 
00:00008F  6D3178              +143 
00:000090  750049              +143 
  :                            144 
  :                            145 	$else
  :                            146 	ql	(rxthread, 0, 0, THREAD_FP(2)q)
  :                            147 	ii	THREAD$
  :                            148 	lb	$3("rxthread":0),,xi
  :                            149 	ii	TAG$
  :                            150 	$endif
  :                            151 
00:000091  FD317D              +152 request	printf	$3("proton>":0),,xi
00:000092  FD0001              +152 
00:000093  FCF002              +152 
00:000094  FF035C              +152 
00:000095  38000F              +152 
00:000096  FD0001              +153 	fflush	stdout
00:000097  FCF001              +153 
00:000098  FF035D              +153 
00:000099  38000F              +153 
00:00009A  FD0078              +154 poll	fgets	data,,xi	DATA,,xi	stdin
00:00009B  FD30AF              +154 
00:00009C  FD0000              +154 
00:00009D  FCF003              +154 
00:00009E  FF035E              +154 
00:00009F  38000F              +154 
00:0000A0  160018              +154 
00:0000A1  1D0018              +154 
00:0000A2  EE00A5              +154 
00:0000A3  CE00A5              +154 
00:0000A4  6530AF              +154 
  :                            155 
00:0000A5  EE01FB              +156 	jnb	away			. or broke
00:0000A6  D600A9              +157 	jnza	evaluate		. stdin timed out
00:0000A7  75005F              +158 	ii	GUARD$
00:0000A8  B6009A              +159 	j	poll			. it was meant to block
  :                            160 
  :                            161 evaluate
  :                            162 extract* $proc
  :                            163 	lb	command_word(?),,xi
  :                            164 	la	24,,xi
  :                            165 	call	(tokena)
  :                            166 	$end
  :                            167 
00:0000A9  6D30AF              +168 	lb	data,,xi
00:0000AA  FF035F              +169 	call	(rstream_starta)
00:0000AB  6D30FF              +170 ?	$do	3,	extract
00:0000AC  650018              +170 
00:0000AD  FF0360              +170 
00:0000AE  6D3107              +170 
00:0000AF  650018              +170 
00:0000B0  FF0360              +170 
00:0000B1  6D310F              +170 
00:0000B2  650018              +170 
00:0000B3  FF0360              +170 
  :                            171 
00:0000B4  CF30FF              +172 	dl	command_word(1)
00:0000B5  480361              +173 	lk	(-1*/$word-$byte)
  :                            174 	
00:0000B6  AF0362              +175 	mta	('+'*/$word-$byte)
00:0000B7  B6013A              +176 	j	traffic?
  :                            177 
                                	sscanf	data,,xi	$3("%::%s":0),,xi	command_word(2),,xi	;
00:0000B8  FD310F              +179 							command_word(3),,xi
00:0000B9  FD3107              +179 
00:0000BA  FD3180              +179 
00:0000BB  FD30AF              +179 
00:0000BC  FCF004              +179 
00:0000BD  FF0363              +179 
00:0000BE  38000F              +179 
  :                            180 
00:0000BF  553107              +181 	lx	command_word(2),,xi
00:0000C0  C5FFFE              +182 	aa	-2,,xi
00:0000C1  5E00D4              +183 	jnc	remote_chosen				. local socket goes here
  :                            184 							. remote socket scan goes here
  :                            185 
                                	sscanf	command_word(2),,xi	$3("%:/%s":0),,xi	command_word(4),,xi	;
00:0000C2  FD30FF              +187 								command_word(1),,xi
00:0000C3  FD3117              +187 
00:0000C4  FD3182              +187 
00:0000C5  FD3107              +187 
00:0000C6  FCF004              +187 
00:0000C7  FF0363              +187 
00:0000C8  38000F              +187 
  :                            188 
00:0000C9  FD3117              +189 	lc	netascan	command_word(4),,xi
00:0000CA  FCF001              +189 
00:0000CB  3E0322              +189 
00:0000CC  38000F              +189 
00:0000CD  C7309C              +190 	ds	local_restart
  :                            191 
00:0000CE  FD30FF              +192 	lc	netascan	command_word(1),,xi
00:0000CF  FCF001              +192 
00:0000D0  3E0322              +192 
00:0000D1  38000F              +192 
00:0000D2  C7309E              +193 	ds	remote_restart	
  :                            194 
00:0000D3  55310F              +195 	lx	command_word(3),,xi
  :                            196 
  :                            197 remote_chosen
                                	sscanf	x	$3("%d/%d/%d %d":0),,xi		restart_port,,xi	;
                                							restart_ports,,xi	;
                                							connections_pro,,xi	;
00:0000D4  FD3017              +201 							local_port,,xi
00:0000D5  FD301D              +201 
00:0000D6  FD3019              +201 
00:0000D7  FD301A              +201 
00:0000D8  FD3184              +201 
00:0000D9  F80002              +201 
00:0000DA  FCF006              +201 
00:0000DB  FF0363              +201 
00:0000DC  38000F              +201 
00:0000DD  E601FB              +202 	jna	away
00:0000DE  C60091              +203 	jza	request
  :                            204 
00:0000DF  30301E              +205 	z	connections_total
00:0000E0  30301F              +206 	z	connections_total+1
  :                            207 
00:0000E1  680004              +208 	anu	5,,xi
00:0000E2  DD0005              +208 
00:0000E3  7E00E6              +209 	jc	local_port_given
00:0000E4  60301A              +210 	la	restart_port
00:0000E5  203017              +211 	sa	local_port
  :                            212 
  :                            213 local_port_given
00:0000E6  CF309E              +214 	dl	remote_restart
00:0000E7  480364              +215 	lk	(00FFFF)
00:0000E8  BF301A              +216 	mlb	restart_port
00:0000E9  C7309E              +217 	ds	remote_restart
00:0000EA  C70006              +218 	ds	6
00:0000EB  CF309C              +219 	dl	local_restart
00:0000EC  BF3017              +220 	mlb	local_port
00:0000ED  C7309C              +221 	ds	local_restart
00:0000EE  4730A0              +222 	qs	socket_addresses
  :                            223 
  :                            224 
00:0000EF  603017              +225 	la	local_port
00:0000F0  203121              +226 	sa	sockets:first
00:0000F1  203123              +227 	sa	sockets:actual
00:0000F2  C03019              +228 	aa	restart_ports
00:0000F3  203122              +229 	sa	sockets:limit
00:0000F4  603019              +230 	la	restart_ports
00:0000F5  C50004              +231 	aa	4,,xi
00:0000F6  203124              +232 	sa	sockets:span
00:0000F7  203125              +233 	sa	sockets:span_restart
  :                            234 
00:0000F8  603019              +235 	la	restart_ports
00:0000F9  203018              +236 	sa	ports	
  :                            237 
  :                            238 connect_multiple
00:0000FA  60301D              +239 	la	connections_pro
00:0000FB  20301B              +240 	sa	connections
  :                            241 
  :                            242 connect_next
00:0000FC  FDFFFF              +243 	c	(__connect)	socket_addresses,,float	-1,,xi
00:0000FD  8F30A0              +243 
00:0000FE  FCF005              +243 
00:0000FF  FF0365              +243 
00:000100  38000F              +243 
  :                            244 
00:000101  A60108              +245 	jpa	connect_a1
00:000102  9F0004              +246 	printf	$3("connect return %ld":10:0),,xi	a,,long
00:000103  FD3188              +246 
00:000104  FD0001              +246 
00:000105  FCF004              +246 
00:000106  FF035C              +246 
00:000107  38000F              +246 
  :                            247 
  :                            248 connect_a1
00:000108  CF30A2              +249 	dl	remote_socket
00:000109  D70366              +250 	da	(1*/16d)
00:00010A  C70006              +251 	ds	6
00:00010B  CF30A0              +252 	dl	local_socket		. send from 1 port
00:00010C  D70366              +253 	da	(1*/16d)		. multiple network addresses
00:00010D  4730A0              +254 	qs	socket_addresses
  :                            255 
00:00010E  1F301B              +256 	dec	connections
00:00010F  70301B              +257 	tz	connections
00:000110  B600FC              +258 	j	connect_next
  :                            259 
00:000111  480364              +260 	lk	(00FFFF)
00:000112  1730A3              +261 	inc	remote_socket+1
00:000113  CF309E              +262 	dl	remote_restart
00:000114  BF30A3              +263 	mlb	remote_socket+1
00:000115  C70006              +264 	ds	6
  :                            265 
00:000116  1730A1              +266 	inc	local_socket+1		. up port
00:000117  CF309C              +267 	dl	local_restart		. rewind network address
00:000118  BF30A1              +268 	mlb	local_socket+1
00:000119  4730A0              +269 	qs	socket_addresses
  :                            270 
00:00011A  CF301C              +271 	dl	connections_prolog
00:00011B  D7301E              +272 	da	connections_total
00:00011C  C7301E              +273 	ds	connections_total
  :                            274 
00:00011D  9F0004              +275 	printf	$3("":CR:" %ld ":0),,xi	a,,long
00:00011E  FD318F              +275 
00:00011F  FD0001              +275 
00:000120  FCF004              +275 
00:000121  FF035C              +275 
00:000122  38000F              +275 
00:000123  FD0001              +276 	fflush	stdout
00:000124  FCF001              +276 
00:000125  FF035D              +276 
00:000126  38000F              +276 
  :                            277 
00:000127  CF3020              +278 	dl	interval
00:000128  7C012A              +279 	jdz	no_interval		. default 10ms change command ^ msecs
00:000129  75005B              +280 	ii	TWAIT$			. in case of single-core
  :                            281 					. let ip thread receive some SYN_ACKs
  :                            282 no_interval
  :                            283 
00:00012A  1F3018              +284 	dec	ports
00:00012B  703018              +285 	tz	ports
00:00012C  B600FA              +286 	j	connect_multiple
  :                            287 
00:00012D  CF3020              +288 	dl	interval		. extra time
  :                            289 
00:00012E  DE0130              +290 	jnzb	intervalnz		. stab at a wait time
00:00012F  680019              +291 	lb	dl(15*1000d)		. reasonable..generous
  :                            292 					. will get doubled to 30sec
  :                            293 intervalnz
00:000130  360001              +294 	dsl	1
00:000131  75005B              +295 	ii	TWAIT$			. for the last batch to connect
  :                            296 
00:000132  60301A              +297         la      restart_port
00:000133  C03019              +298         aa      restart_ports
00:000134  F80004              +299         lc      states  restart_port    a
00:000135  F8301A              +299 
00:000136  FCF002              +299 
00:000137  3E02E9              +299 
00:000138  38000F              +299 
  :                            300 
00:000139  B60091              +301 	j	request
  :                            302 
  :                            303 traffic?
00:00013A  AF0368              +304 	mta	('>'*/$word-$byte)
00:00013B  B60178              +305 	j	close?
  :                            306 
                                	sscanf	data,,xi	$3("%s %d %s":0),,xi	command_byte,,xi	;
                                							times,,xi		;
00:00013C  FD3107              +309 							command_word(2),,xi
00:00013D  FD30AE              +309 
00:00013E  FD3013              +309 
00:00013F  FD3192              +309 
00:000140  FD30AF              +309 
00:000141  FCF005              +309 
00:000142  FF0363              +309 
00:000143  38000F              +309 
  :                            310 
  :                            311 next_time
00:000144  1F30AE              +312 	dec	times
00:000145  7830AE              +313 	tp	times
00:000146  B60091              +314 	j	request
  :                            315 
00:000147  603016              +316 	la	restart_local_port
00:000148  203017              +317 	sa	local_port
00:000149  603019              +318 	la	restart_ports
00:00014A  203018              +319 	sa	ports
  :                            320 
  :                            321 next_port
00:00014B  FD3107              +322 	sprintf	message,,xi	$3("%d %s":0),,xi	times	command_word(2),,xi
00:00014C  F830AE              +322 
00:00014D  FD3195              +322 
00:00014E  FD30D7              +322 
00:00014F  FCF004              +322 
00:000150  FF0369              +322 
00:000151  38000F              +322 
  :                            323 
  :                            324 	$if	0			. sprintf length result checks out
  :                            325 	c	(strlen)	message,,xi
  :                            326 	$endif
  :                            327 
00:000152  203014              +328 	sa	bytes
00:000153  603017              +329 	la	local_port
00:000154  FF036A              +330 	call	(connection_array)
00:000155  B60169              +331 	j	port_thru
  :                            332 
00:000156  50036B              +333 	lx	(BSOCKET*/12++tlist:chain(1))		. point @ chain head, don't load it
  :                            334 
  :                            335 next_chain
00:000157  103012              +336 	sx	chain_again
00:000158  B60161              +337 	j	chain_along
  :                            338 
  :                            339 traffic!
00:000159  603014              +340 	la	bytes
00:00015A  6D30D7              +341 	lb	message,,xi
00:00015B  3E01FC              +342 	lcal	msg_tcp		
  :                            343 
00:00015C  E60161              +344 	jna	chain_along
00:00015D  C60161              +345 	jza	chain_along
00:00015E  CF036C              +346 	dl	(1L)
00:00015F  D730AC              +347 	da	payload_sent
00:000160  C730AC              +348 	ds	payload_sent
  :                            349 
  :                            350 chain_along
00:000161  50A000              +351 	lx	0, x
00:000162  700002              +352 	tz	x
00:000163  B60159              +353 	j	traffic!
  :                            354 
00:000164  503012              +355 	lx	chain_again
00:000165  850001              +356 	ax	1,,xi
00:000166  40036E              +357 	lr	(BSOCKET*/12++tlist:chain(CHAINS)+1)
00:000167  F60169              +358 	jxge	port_thru
00:000168  B60157              +359 	j	next_chain
  :                            360 
  :                            361 port_thru
  :                            362 	$if	1
  :                            363 
00:000169  CF3022              +364 	dl	tx_interval
00:00016A  7C016C              +365 	jdz	traffic_thru
00:00016B  75005B              +366 	ii	TWAIT$
  :                            367 traffic_thru
  :                            368 
  :                            369 	$else	0		.	MODEL_REQUEST_RESPONSE
  :                            370 
  :                            371 	la	local_port
  :                            372 	call	(connection_array)
  :                            373 	j	ported
  :                            374 
  :                            375 	ly	(BSOCKET*/12++tlist:connection_block(1):receiveq:head)
  :                            376 port_sense
  :                            377 	ii	YIELD$
  :                            378 	tnz	0, y
  :                            379 	j	port_sense
  :                            380 
  :                            381 readback
  :                            382 	call	(hvsocket_readq)
  :                            383 	jza	ported
  :                            384 
  :                            385 	lcal	qreadq
  :                            386 
  :                            387 	dl	(1d)
  :                            388 	da	payload_segments
  :                            389 	ds	payload_segments
  :                            390 	j	readback
  :                            391 	tz	0, y
  :                            392 	j	readback
  :                            393 	dl	(5d)
  :                            394 	ii	TWAIT$
  :                            395 	tz	0, y
  :                            396 	j	readback
  :                            397 
  :                            398 ported	printf	$3("rx @ socket %ld":LF:0),,xi	payload_segments,,long
  :                            399 
  :                            400 	dl	payload_segments
  :                            401 	da	total_rx
  :                            402 	ds	total_rx
  :                            403 	dsr	48
  :                            404 	ds	payload_segments
  :                            405 
  :                            406 	$endif	
  :                            407 
00:00016C  173017              +408 	inc	local_port
00:00016D  1F3018              +409 	dec	ports
  :                            410 
00:00016E  703018              +411 	tz	ports
00:00016F  B6014B              +412 	j	next_port
  :                            413 
  :                            414 	$if	0	.	MODEL_REQUEST_RESPONSE
  :                            415 	printf	$3("%d tx %ld rx %ld":LF:0),,xi	times	payload_sent,,long	total_rx,,long
  :                            416 	$else
00:000170  9F30AC              +417 	printf	$3("%d tx %ld":10:0),,xi	times	payload_sent,,long
00:000171  F830AE              +417 
00:000172  FD3197              +417 
00:000173  FD0001              +417 
00:000174  FCF005              +417 
00:000175  FF035C              +417 
00:000176  38000F              +417 
  :                            418 	$endif
  :                            419 
00:000177  B60144              +420 	j	next_time
  :                            421 
  :                            422 
00:000178  AF036F              +423 close?	mta	('<'*/$word-$byte)
00:000179  B601BF              +424 	j	anomaly?
  :                            425 
00:00017A  603019              +426 	la	restart_ports
00:00017B  203018              +427 	sa	ports
  :                            428 
00:00017C  603016              +429 	la	restart_local_port
  :                            430 
  :                            431 close_array
00:00017D  203017              +432 	sa	local_port
00:00017E  FF036A              +433 	call	(connection_array)
00:00017F  B6018B              +434 	j	close_next_port
  :                            435 
00:000180  58036B              +436 	ly	(BSOCKET*/12++tlist:chain(1))
00:000181  44B020              +437 	lr	CHAINS, y, i
  :                            438 
  :                            439 close_chain
00:000182  500003              +440 	lx	y
00:000183  B60185              +441 	j	close_chain_along
  :                            442 close_chain_next
00:000184  0FA001              +443 	n	transmission:state
  :                            444 close_chain_along
00:000185  50A000              +445 	lx	transmission:next
00:000186  700002              +446 	tz	x
00:000187  B60184              +447 	j	close_chain_next
  :                            448 	
00:000188  8D0001              +449 	ay	1,,xi
00:000189  FE018B              +450 	jyge	close_next_port
00:00018A  B60182              +451 	j	close_chain
  :                            452 
  :                            453 close_next_port
00:00018B  603017              +454 	la	local_port
00:00018C  C50001              +455 	aa	1,,xi
00:00018D  1F3018              +456 	dec	ports
00:00018E  703018              +457 	tz	ports
00:00018F  B6017D              +458 	j	close_array
  :                            459 
00:000190  B60091              +460 	j	request
  :                            461 
  :                            462 .	subroutines of anomal?
  :                            463 
  :                            464 rx_segment_awaiting_sequence
00:000191  F8A012              +465 	lc	waiting_segment $3(" rx segment awaiting sequence":0),,xi	transmission:deferq:head
00:000192  FD319B              +465 
00:000193  FCF002              +465 
00:000194  3E01A8              +465 
00:000195  38000F              +465 
  :                            466 
  :                            467 segment_untransmitted
00:000196  F8A014              +468 	lc	waiting_segment	$3(" UNTRANSMITTED":0),,xi	transmission:q4window:head
00:000197  FD31A5              +468 
00:000198  FCF002              +468 
00:000199  3E01A8              +468 
00:00019A  38000F              +468 
00:00019B  350000              +469 	lret	0
  :                            470 
  :                            471 segment_waiting_ack
00:00019C  F8A016              +472 	lc	waiting_segment	$3(" awaiting TCP_ACK":0),,xi	transmission:q4ack:head
00:00019D  FD31AA              +472 
00:00019E  FCF002              +472 
00:00019F  3E01A8              +472 
00:0001A0  38000F              +472 
00:0001A1  350000              +473 	lret	0
  :                            474 
  :                            475 rx_traffic_at_socket
00:0001A2  F8A010              +476 	lc	waiting_segment $3(" rx traffic at socket":0),,xi	transmission:receiveq:head
00:0001A3  FD31B0              +476 
00:0001A4  FCF002              +476 
00:0001A5  3E01A8              +476 
00:0001A6  38000F              +476 
00:0001A7  350000              +477 	lret	0
  :                            478 
  :                            479 waiting_segment	$tree	
                                	$head_near	 params(reason_p,	int		;
                                				q_p,		int	)	;
                                								;
                                			scalars(save_rkxy,	float,	r	;
00:0001A8  8F0000              +484 				save_bsocket,	int		)
00:0001A9  FD0000              +484 
  :                            485 
00:0001AA  054000              +486 	on	see$1
00:0001AB  60106F              +487 	la	ABT+BSOCKET
00:0001AC  0D4000              +488 	off	see$1
00:0001AD  20F000              +489 	sa	save_bsocket
                                	printf	$3("":LF:"connection %x:%x has segment[s] %s":LF:0),,xi	;
                                							save_bsocket	;
                                							x		;
00:0001AE  F8F007              +493 							reason_p
00:0001AF  F80002              +493 
00:0001B0  F8F002              +493 
00:0001B1  FD31B8              +493 
00:0001B2  FD0001              +493 
00:0001B3  FCF005              +493 
00:0001B4  FF035C              +493 
00:0001B5  38000F              +493 
  :                            494 
00:0001B6  F8F008              +495 	lc	display_segment	q_p
00:0001B7  FCF001              +495 
00:0001B8  3E0261              +495 
00:0001B9  38000F              +495 
00:0001BA  50F003              +496 	lx	save_rkxy+2
00:0001BB  3E02BD              +497 	lcal	display_connection
  :                            498 
00:0001BC  380004              +499 	pop	a
00:0001BD  870000              +500 	qpop	r
00:0001BE  350000              +501 	lret	0
  :                            502 
  :                            503 	$root
  :                            504 
  :                            505 anomaly?
00:0001BF  AF0370              +506 	mta	('?'*/$word-$byte)
00:0001C0  B601E4              +507 	j	states?
  :                            508 
00:0001C1  60301A              +509 	la	restart_port
00:0001C2  203018              +510 	sa	ports
00:0001C3  603016              +511 	la	restart_local_port
  :                            512 
  :                            513 search_port
00:0001C4  203017              +514 	sa	local_port
00:0001C5  FF036A              +515 	call	(connection_array)
00:0001C6  B601DE              +516 	j	search_next_port
  :                            517 
00:0001C7  50036E              +518 	lx	(BSOCKET*/12++tlist:connection_block(1))
00:0001C8  70A010              +519 	tz	transmission:receiveq:head
00:0001C9  3E01A2              +520 	lcal	rx_traffic_at_socket
  :                            521 
00:0001CA  58036B              +522 	ly	(BSOCKET*/12++tlist:chain(1))
00:0001CB  44B020              +523 	lr	CHAINS, y, i
  :                            524 
  :                            525 search_chain
00:0001CC  500003              +526 	lx	y
00:0001CD  B601D8              +527 	j	search_chain_tail
  :                            528 
  :                            529 search_chain_next
00:0001CE  70A012              +530 	tz	transmission:deferq
00:0001CF  3E0191              +531 	lcal	rx_segment_awaiting_sequence
00:0001D0  70A014              +532 	tz	transmission:q4window
00:0001D1  3E0196              +533 	lcal	segment_untransmitted
00:0001D2  70A016              +534 	tz	transmission:q4ack
00:0001D3  3E019C              +535 	lcal	segment_waiting_ack
00:0001D4  60A001              +536 	la	transmission:state
00:0001D5  C5FFFB              +537 	aa	-TCP_ESTABLISHED,,xi
00:0001D6  C601D8              +538 	jza	search_chain_tail
00:0001D7  3E02BD              +539 	lcal	display_connection
  :                            540 
  :                            541 search_chain_tail
00:0001D8  50A000              +542 	lx	transmission:next
00:0001D9  700002              +543 	tz	x
00:0001DA  B601CE              +544 	j	search_chain_next
  :                            545 
00:0001DB  8D0001              +546 	ay	1,,xi
00:0001DC  FE01DE              +547 	jyge	search_next_port
00:0001DD  B601CC              +548 	j	search_chain
  :                            549 
  :                            550 search_next_port
00:0001DE  603017              +551 	la	local_port
00:0001DF  C50001              +552 	aa	1,,xi
00:0001E0  1F3018              +553 	dec	ports
00:0001E1  703018              +554 	tz	ports
00:0001E2  B601C4              +555 	j	search_port
00:0001E3  B60091              +556 	j	request
  :                            557 
00:0001E4  AF0371              +558 states?	mta	('!'*/$word-$byte)
00:0001E5  B601EE              +559 	j	option?
00:0001E6  60301A              +560 	la	restart_port
00:0001E7  C03019              +561 	aa	restart_ports
00:0001E8  F80004              +562 	lc	states	restart_port	a
00:0001E9  F8301A              +562 
00:0001EA  FCF002              +562 
00:0001EB  3E02E9              +562 
00:0001EC  38000F              +562 
00:0001ED  B60091              +563 	j	request
  :                            564 
00:0001EE  AF0372              +565 option?	mta	('^'*/$word-$byte)
00:0001EF  B601F9              +566 	j	stop?
                                	sscanf	data,,xi	$3("%s %ld %ld":0),,xi	command_byte,,xi	;
                                							interval,,xi		;
00:0001F0  FD3022              +569 							tx_interval,,xi
00:0001F1  FD3020              +569 
00:0001F2  FD3013              +569 
00:0001F3  FD31C5              +569 
00:0001F4  FD30AF              +569 
00:0001F5  FCF005              +569 
00:0001F6  FF0363              +569 
00:0001F7  38000F              +569 
00:0001F8  B60091              +570 	j	request
  :                            571 
00:0001F9  AF0373              +572 stop?	mta	('.'*/$word-$byte)
00:0001FA  B60091              +573 	j	request
00:0001FB  3D0000              +574 away	fret	0
  :                            575 
  :                            576 
00:0001FC  4D5018              +577 msg_tcp	lk	05000++TCP_ACK++TCP_PSH,,xi
  :                            578 
  :                            579 .	push	05018,,xi
  :                            580 .	pop	SOCKET_CALL_FLAGS
00:0001FD  F80002              +581 	push	x
  :                            582 .	sb	q
00:0001FE  FF0374              +583 	call	(tcp_tx)
00:0001FF  380002              +584 	pop	x
00:000200  350000              +585 	lret	0
  :                            586 
  :                            587 $(3)
  :                            588 
  :                            589 rx_ports	$res	1
  :                            590 rx_local_port	$res	1
  :                            591 
03:003121  002800              +592 sockets	$socket_array	10240:10240+2048
03:003122  003000              +592 
03:003123  002800              +592 
03:003124  000804              +592 
03:003125  000804              +592 
  :                            593 
03:003126  002800 002BE8        +594 ?	$do	RX_THREADS,rxport_range(?)	+	10240+?*RX_RANGE-RX_RANGE, 10240+?*RX_RANGE:L
03:003128  002BE8 002FD0        +594 
03:00312A  002FD0 0033B8        +594 
03:00312C  0033B8 0037A0        +594 
03:00312E  0037A0 003B88        +594 
03:003130  003B88 003F70        +594 
03:003132  003F70 004358        +594 
03:003134  004358 004740        +594 
03:003136  000000 000000        +595 ?	$do	RX_THREADS,total_rx(?)		0L
03:003138  000000 000000        +595 
03:00313A  000000 000000        +595 
03:00313C  000000 000000        +595 
03:00313E  000000 000000        +595 
03:003140  000000 000000        +595 
03:003142  000000 000000        +595 
03:003144  000000 000000        +595 
  :                            596 
  :                            597 $(0)
  :                            598 
00:000201  508375              +599 qreadq	lx	*(BSOCKET*/12++tlist:rxbu_p)
00:000202  F80003              +600 	push	y
00:000203  700002              +601 	tz	x
00:000204  FF0376              +602 	call	(if_sell1)
00:000205  380003              +603 	pop	y
00:000206  350000              +604 	lret	0
  :                            605 
  :                            606 	$list		2
  :                            607 
  :                            608 rthreads $tree
  :                            609: 	$include	rxrotary
  :                            1 
  :                            2 RXROTARY_OVERSTEP $equ	0
  :                            3 
  :                            4 $(66::,sp)
42:000000                     +5 sockets	$socket_array
42:000001                     +5 
42:000002                     +5 
42:000003                     +5 
42:000004                     +5 
  :                            6 
  :                            7 $(0)
  :                            8 rx_thread
                                	$head_near	scalars(total_rxp,	int,	a	;
                                				payloadsegs,	long		;
                                				response_segs,	long		;
00:000207  F80004              +12 				sox,		6		)
00:000208  9F0377              +12 
00:000209  9F0377              +12 
00:00020A  FD0000              +12 
00:00020B  FD0000              +12 
00:00020C  8F0379              +12 
  :                            13 
  :                            14 TOTAL_RX	$equf	RX_THREADS*2, x
  :                            15 TOTAL_TX	$equf	RX_THREADS*2*2, x
  :                            16 
00:00020D  20F00A              +17 	sa	total_rxp
  :                            18 
00:00020E  CFC000              +19 	dl	0, a			. param -> start of struc aocket_array	
00:00020F  C7F000              +20 	ds	sockets:first
00:000210  20F002              +21 	sa	sockets:actual
00:000211  D80004              +22 	anb	a			. limit - 1st
  :                            23 	$do	RXROTARY_OVERSTEP^=0,	ab	RXROTARY_OVERSTEP,,xi
00:000212  28F003              +24 	sb	sockets:span
00:000213  28F004              +25 	sb	sockets:span_restart
  :                            26 
00:000214  FD0000              +27 	c	(hvsocket_xbind)	sockets:first	sockets:limit	0,,xi
00:000215  F8F002              +27 
00:000216  F8F002              +27 
00:000217  FCF003              +27 
00:000218  FF037D              +27 
00:000219  38000F              +27 
  :                            28 
00:00021A  650020              +29 	la	ACTIVATE,,xi
00:00021B  75005C              +30 	ii	EVENT_WAIT$		. up to here is inital
  :                            31 					. and from here is process loop
00:00021C  F8F002              +32 next	lc	socket_respond	sockets:actual
00:00021D  FCF001              +32 
00:00021E  3E0241              +32 
00:00021F  38000F              +32 
00:000220  C60226              +33 	jza	forward
  :                            34 
  :                            35 	$if	total_tx()
  :                            36 	sa	6
  :                            37 	la	0,,xi
  :                            38 	da	response_segs
  :                            39 	ds	response_segs
  :                            40 	la	6
  :                            41 	$endif
  :                            42 
00:000221  160018              +43 	dsr	24
00:000222  D7F008              +44 	da	payloadsegs
00:000223  C7F008              +45 	ds	payloadsegs
  :                            46 
00:000224  60F004              +47 	la	sockets:span_restart	. + results so circulate
00:000225  20F003              +48 	sa	sockets:span		. at least to here before chilling
  :                            49 
00:000226  50F002              +50 forward	lx	sockets:actual
00:000227  850001              +51 	ax	1,,xi
00:000228  40F001              +52 	lr	sockets:limit
00:000229  F6022B              +53 	jxl	span?
00:00022A  B6022C              +53 
  :                            54 
00:00022B  50F000              +55 	lx	sockets:first		. restart table pointer
  :                            56 	
00:00022C  10F002              +57 span?	sx	sockets:actual		. completely circled + a few slots
00:00022D  1FF003              +58 	dec	sockets:span		. without + results?
00:00022E  70F003              +59 	tz	sockets:span	
00:00022F  B6021C              +60 	j	next			. no
  :                            61 
  :                            62 	$if	RX_THREADS>1
00:000230  CFF008              +63 	dl	payloadsegs
00:000231  7C023C              +64 	jdz	quiet
00:000232  50F00A              +65 	lx	total_rxp
00:000233  D7A010              +66 	da	TOTAL_RX
00:000234  C7A010              +67 	ds	TOTAL_RX
  :                            68 
  :                            69 	$if	total_tx()
  :                            70 	dl	response_segs
  :                            71 	da	TOTAL_TX
  :                            72 	ds	TOTAL_TX
  :                            73 	$endif
  :                            74 
00:000235  9FF008              +75 	lc	summarise	payloadsegs,,long
00:000236  FCF002              +75 
00:000237  3E024C              +75 
00:000238  38000F              +75 
  :                            76 
00:000239  160030              +77 	dsr	48
00:00023A  C7F008              +78 	ds	payloadsegs
00:00023B  C7F006              +79 	ds	response_segs
  :                            80 
  :                            81 	$else	
  :                            82 	lcal	summarise
  :                            83 	$endif
  :                            84 
00:00023C  CF037E              +85 quiet	dl	(ACTIVATE++TIME_WAIT, 50d)		. yes
00:00023D  75005C              +86 	ii	EVENT_WAIT$
00:00023E  60F004              +87 	la	sockets:span_restart
00:00023F  20F003              +88 	sa	sockets:span
00:000240  B6021C              +89 	j	next
  :                            610 	$root
  :                            611 
  :                            612: 	$include	respond
  :                            1 
  :                            2 socket_respond
                                	$head_near	 params(sockets_actual,	int)	;
                                							;
00:000241  FD0000              +5 			scalars(activity,	int)	
  :                            6 					
00:000242  60F003              +7 	la	sockets_actual
00:000243  FF036A              +8         call    (connection_array)
00:000244  B6024A              +9         j       sockets_readx
  :                            10 	
  :                            11 segment?
00:000245  FF0380              +12         call    (hvsocket_readq)                . rx segments all connections this port
  :                            13                                                 . are on 1 rx queue
00:000246  C6024A              +14         jza     sockets_read
00:000247  3E0201              +15         lcal    qreadq
  :                            16 
00:000248  17F000              +17 	inc	activity
00:000249  B60245              +18         j       segment?
  :                            19 
  :                            20 sockets_read
  :                            21 .	lb	activity
  :                            22 .	jzb	sockets_readx
  :                            23 .	la	0,,xi
  :                            24 .	da	payload_segments
  :                            25 .	ds	payload_segments
  :                            26 
  :                            27 sockets_readx
00:00024A  380004              +28 	pop	a
00:00024B  350000              +29 	lret	0
  :                            30 
  :                            613: 	$include	summary
  :                            1 
  :                            2 	$if	RX_THREADS>1
  :                            3 $(3)
03:003146  000000              +4 summary_lock	0
  :                            5 
  :                            6 $(0)
  :                            7 summarise	$head_near	 params(increment,	long)
  :                            8 
00:00024C  CF3144              +9 	dl	total_rx(RX_THREADS)
00:00024D  D73136              +10 ?	$do	RX_THREADS-1,	da	total_rx(?)
00:00024E  D73138              +10 
00:00024F  D7313A              +10 
00:000250  D7313C              +10 
00:000251  D7313E              +10 
00:000252  D73140              +10 
00:000253  D73142              +10 
  :                            11 
00:000254  073146              +12 	ts	summary_lock
00:000255  3E025F              +13 	lcal	retry		. all threads use 1 stdout handle
  :                            14 
00:000256  9F0004              +15 	printf	$3("rx @ socket %ld -> %ld":LF:0),,xi	increment,,long	a,,long
00:000257  9FF004              +15 
00:000258  FD31C9              +15 
00:000259  FD0001              +15 
00:00025A  FCF006              +15 
00:00025B  FF035C              +15 
00:00025C  38000F              +15 
  :                            16 
00:00025D  303146              +17 	z	summary_lock
00:00025E  350000              +18 	$ret	
  :                            19 
00:00025F  750041              +20 retry	ii	YIELD$
00:000260  35FFFE              +21 	lret	-2		. back to ts instructiom
  :                            22 
  :                            23 	$else
  :                            24 
  :                            25 summarise
  :                            26 	dl	payload_segments
  :                            27         jdz     summarised
  :                            28         da      total_rx(1)
  :                            29         ds      total_rx(1)
  :                            30         printf  $3("rx @ socket %ld -> %ld":10:0),,xi   payload_segments,,long a,,long
  :                            31         dsr     48
  :                            32         ds      payload_segments
  :                            33 
  :                            34 summarised
  :                            35 	lret	0
  :                            36 
  :                            37 	$endif
  :                            614: 	$include	sdisplay
  :                            1 
  :                            2 .	x -> descriptor [ structure acw ]
  :                            3 
  :                            4 display_segment	$tree
                                	$head_near	 params(qheadp,			int)	;
                                								;
                                			scalars(save_rkxy,	float,	r	;
00:000261  8F0000              +8 				save_bsocket,	int		)
00:000262  FD0000              +8 
  :                            9 
00:000263  65002F              +10 	la	BSOCKET,,xi
00:000264  750073              +11 	ii	A$IDX
  :                            12 
00:000265  20F000              +13 	sa	save_bsocket
00:000266  E602AA              +14 	jna	quit			. basing zero or C00001
00:000267  C602AA              +15 	jza	quit			. crashes you
  :                            16 
  :                            17 superpage	$equf	0, sp
  :                            18 caller_x	$equf	1+2, sp
  :                            19 
00:000268  F8F007              +20 next	printf	$3("":LF:"axw @ %x:%x":LF:0),,xi	a	qheadp
00:000269  F80004              +20 
00:00026A  FD31D1              +20 
00:00026B  FD0001              +20 
00:00026C  FCF004              +20 
00:00026D  FF035C              +20 
00:00026E  38000F              +20 
  :                            21 
00:00026F  60F000              +22 	la	save_bsocket		. printf closes window BSOCKET
00:000270  34002F              +23 	sabr	BSOCKET			. x -> this window
  :                            24 
00:000271  60F007              +25 	la	qheadp
                                	printf	$3("[%x:%x:%x:%x:%x:%x:%x:%x]":LF:0),,xi	0, a	1, a	2, a	3, a	;
00:000272  F8C007              +27 								4, a	5, a	6, a	7, a
00:000273  F8C006              +27 
00:000274  F8C005              +27 
00:000275  F8C004              +27 
00:000276  F8C003              +27 
00:000277  F8C002              +27 
00:000278  F8C001              +27 
00:000279  F8C000              +27 
00:00027A  FD31D6              +27 
00:00027B  FD0001              +27 
00:00027C  FCF00A              +27 
00:00027D  FF035C              +27 
00:00027E  38000F              +27 
00:00027F  60F000              +28 	la	save_bsocket
00:000280  34002F              +29 	sabr	BSOCKET
  :                            30 
00:000281  60F007              +31 	la	qheadp
00:000282  60C001              +32 	la	descriptor:frame, a
  :                            33 
                                	printf	$3("routing header":LF:;
                                		 "%x %x %x %x %x %x %x %x":LF:;
                                		 "%x %x %x %x %x %x %x %x":LF:"datagram":LF:0),,xi		;
                                		  0,a	  1,a	  2,a	  3,a	  4,a	  5,a	  6,a	  7,a	;
00:000283  F8C00F              +38 		8+0,a	8+1,a	8+2,a	8+3,a	8+4,a	8+5,a	8+6,a	8+7,a
00:000284  F8C00E              +38 
00:000285  F8C00D              +38 
00:000286  F8C00C              +38 
00:000287  F8C00B              +38 
00:000288  F8C00A              +38 
00:000289  F8C009              +38 
00:00028A  F8C008              +38 
00:00028B  F8C007              +38 
00:00028C  F8C006              +38 
00:00028D  F8C005              +38 
00:00028E  F8C004              +38 
00:00028F  F8C003              +38 
00:000290  F8C002              +38 
00:000291  F8C001              +38 
00:000292  F8C000              +38 
00:000293  FD31DF              +38 
00:000294  FD0001              +38 
00:000295  FCF012              +38 
00:000296  FF035C              +38 
00:000297  38000F              +38 
  :                            39 
00:000298  60F000              +40 	la	save_bsocket
00:000299  34002F              +41 	sabr	BSOCKET
  :                            42 
00:00029A  50F007              +43 	lx	qheadp
00:00029B  50A004              +44 	lx	descriptor:dgram, x
00:00029C  68A001              +45 	lb	dgram:bytes, x
00:00029D  CDFFFF              +46 	ab	-1,,xi
00:00029E  AE02A0              +47 	jpb	$+2
00:00029F  6D0047              +48 	lb	72-1,,xi		. if the length is junk show 2 headings + 32 bytes			
00:0002A0  E80381              +49 	mf	(R24)			. 24-octet chunkarettes @ 2 octets per socket word
  :                            50 
00:0002A1  400004              +51 	lr	a			. chunkarettes - 1
  :                            52 
00:0002A2  3E02AD              +53 get_in	lcal	tae_it			. subroutined out because freehand stack work
00:0002A3  60F000              +54 	la	save_bsocket		. does not mix with equated stack offsets
00:0002A4  34002F              +55 	sabr	BSOCKET			. get the connections / buffers page back
00:0002A5  1E02A2              +56 	jdr	get_in
  :                            57 
00:0002A6  60F007              +58 	la	qheadp
00:0002A7  60C000              +59 	la	descriptor:next, a
00:0002A8  20F007              +60 	sa	qheadp
00:0002A9  D60268              +61 	jnza	next
  :                            62 
00:0002AA  380004              +63 quit	pop	a			. return page index[BSOCKET]
00:0002AB  870000              +64 	qpop	r			. restore caller [ r k x y ] sp 4++
00:0002AC  350000              +65 	lret	0			.
  :                            66 
00:0002AD  F80000              +67 tae_it	push	r			. printf will mash r and x both
00:0002AE  FCA00C              +68 	push	12, x, i		. next pointer = this pointer + 12 socket buffer words
[buy24_bytes][000000000000000000000000000000000000000000000072]
00:0002AF  64A006              +69 	printf	$3("%Lx":LF:0),,xi	0, x, buy24_bytes
00:0002B0  FF0382              +69 
00:0002B1  8F0004              +69 
00:0002B2  64A000              +69 
00:0002B3  FF0382              +69 
00:0002B4  8F0004              +69 
00:0002B5  FD31F8              +69 
00:0002B6  FD0001              +69 
00:0002B7  FCF00A              +69 
00:0002B8  FF035C              +69 
00:0002B9  38000F              +69 
00:0002BA  380002              +70 	pop	x			. next pointer -> x
00:0002BB  380000              +71 	pop	r
00:0002BC  350000              +72 	lret	0
  :                            73 
  :                            74 		$root
  :                            615: 	$include	cdisplay
  :                            1 .	x -> connection block
  :                            2 
  :                            3 display_connection	$tree
00:0002BD  8F0000              +4 	qpush	r
  :                            5 
00:0002BE  65002F              +6 	la	BSOCKET,,xi
00:0002BF  750073              +7 	ii	A$IDX
00:0002C0  C602E7              +8 	jza	quit
00:0002C1  E602E7              +9 	jna	quit
00:0002C2  F80004              +10 	push	a		. because printf mostly changes BSOCKEZ
  :                            11 
00:0002C3  58A001              +12 	ly	transmission:state
00:0002C4  45000D              +13 	lr	13,,xi
00:0002C5  FE02D0              +14 	jyge	extra_state
  :                            15 
                                	printf	$3("":LF:"tcbloc %x:%x state %d %s":10:0),,xi		0, sp	x	y	;
                                				(names	none						;
                                				closed listen synsent synreceived established finwait1	;
00:0002C6  F8B383              +19 				finwait2 closewait lastack closing timewait deletetcb), y
00:0002C7  F80003              +19 
00:0002C8  F80002              +19 
00:0002C9  F8F003              +19 
00:0002CA  FD3224              +19 
00:0002CB  FD0001              +19 
00:0002CC  FCF006              +19 
00:0002CD  FF035C              +19 
00:0002CE  38000F              +19 
00:0002CF  B602D8              +20 	j	reported
  :                            21 
  :                            22 extra_state
00:0002D0  F80003              +23 	printf	$3("tcbloc %x:%x state %d":10:0),,xi	0, sp	x	y
00:0002D1  F80002              +23 
00:0002D2  F8F002              +23 
00:0002D3  FD322D              +23 
00:0002D4  FD0001              +23 
00:0002D5  FCF005              +23 
00:0002D6  FF035C              +23 
00:0002D7  38000F              +23 
  :                            24 
  :                            25 reported
00:0002D8  60F000              +26 	la	0, sp
00:0002D9  34002F              +27 	sabr	BSOCKET
00:0002DA  8FA014              +28 	printf	$3("%Lx":LF:"%Lx":LF:"%Lx":LF:0),,xi	0,x,float192	8,x,float192	16,x,float192
00:0002DB  8FA010              +28 
00:0002DC  8FA00C              +28 
00:0002DD  8FA008              +28 
00:0002DE  8FA004              +28 
00:0002DF  8FA000              +28 
00:0002E0  FD3235              +28 
00:0002E1  FD0001              +28 
00:0002E2  FCF01A              +28 
00:0002E3  FF035C              +28 
00:0002E4  38000F              +28 
00:0002E5  380004              +29 	pop	a
00:0002E6  34002F              +30 	sabr	BSOCKET
  :                            31 
00:0002E7  870000              +32 quit	qpop	r
00:0002E8  350000              +33 	lret	0
  :                            34 
  :                            35 			$root
  :                            616: 	$include	states
  :                            1 	$if	0
  :                            2 
  :                            3 	these are the states
  :                            4 	____________________
  :                            5 
  :                            6 	static char	*category[] = { "zero",
  :                            7                                         "closed",
  :                            8                                         "listen",
  :                            9                                         "synsent",
  :                            10                                         "synreceived",
  :                            11                                         "established",
  :                            12                                         "finwait1",
  :                            13                                         "finwait2",
  :                            14                                         "closewait",
  :                            15                                         "lastack",
  :                            16                                         "closing",
  :                            17                                         "timewait",
  :                            18                                         "deletetcb",
                                                                        "out of range" } ;
  :                            20 
	and this is how to report them
  :                            21 	______________________________
  :                            22 
                                         for (x = 0; x < 14; x++) tcb_states.bucket[x] = 0;
                                
         y = established;
                                         sscanf(request + 1, "%d", &y);
                                         q = demand;
  :                            27 
         while (y--)
  :                            28          {
                                            x = q->state;
                                            if (x > 13) x = 13;
                                            tcb_states.bucket[x]++;
                                            q++;
  :                            33          }
  :                            34 
                                         for (x = 0; x < 14; x++)
  :                            36          {
                                            if (tcb_states.bucket[x]) printf("%d %s\n", tcb_states.bucket[x], category[x]);
  :                            38          }
  :                            39 
  :                            40          if (payload_segments)
  :                            41          {
                                            printf("payload segments %lld payload %lld\n", payload_segments, payload);
  :                            43          }
  :                            44 
  :                            45 	$endif
  :                            46 
  :                            47 states	$tree
  :                            48 
  :                            49 $(3)
  :                            50 
  :                            51 bucket	$res	14
  :                            52 
  :                            53 $(0)
  :                            54 
                                	$head_near	 params(first_port,	int	;
                                				limit_port,	int)	;
                                							;
00:0002E9  FD0000              +58 			scalars(index,	int		)
  :                            59 
00:0002EA  160030              +60 	dsr	48
00:0002EB  C73147              +61 ?	$do	14/2,	ds	bucket+?*2-2
00:0002EC  C73149              +61 
00:0002ED  C7314B              +61 
00:0002EE  C7314D              +61 
00:0002EF  C7314F              +61 
00:0002F0  C73151              +61 
00:0002F1  C73153              +61 
  :                            62 
00:0002F2  50F003              +63 next	lx	first_port
00:0002F3  17F003              +64 	inc	first_port
00:0002F4  40F004              +65 	lr	limit_port
00:0002F5  F60307              +66 	jxge	all_states_counted
  :                            67 
00:0002F6  600002              +68 	la	x
00:0002F7  FF036A              +69 	call	(connection_array)
00:0002F8  B602F2              +70 	j	next			. wrong sort of connection table
  :                            71 
00:0002F9  500390              +72 	lx	(BSOCKET*/18++tlist:connection_block(2)s)
  :                            73 
  :                            74 connection
00:0002FA  408391              +75 	lr	*(+(BSOCKET*/18++tlist:top)s)
00:0002FB  F602F2              +76 	jxge	next			. next port
  :                            77 
00:0002FC  58A001              +78 	ly	transmission:state
00:0002FD  780003              +79 	tp	y			. can momentarily be inverted
00:0002FE  0F0003              +80 	n	y			. when transitioning to close
00:0002FF  45000E              +81 	lr	14,,xi			. saturation point+ = nonsense
00:000300  FE0302              +82 	jyl	in_range
00:000301  B60303              +82 
00:000302  5D000D              +83 	ly	14-1,,xi
  :                            84 
  :                            85 in_range
00:000303  8D3147              +86 	ay	bucket,,xi
00:000304  17B000              +87 	inc	0, y			. count[state]++
  :                            88 
00:000305  850018              +89 	ax	24,,xi			. next connection
00:000306  B602FA              +90 	j	connection
  :                            91 
  :                            92 all_states_counted
00:000307  50F000              +93 	lx	index
00:000308  17F000              +94 	inc	index
00:000309  45000E              +95 	lr	14,,xi
00:00030A  F60317              +96 	jxge	all_states_reported
00:00030B  580002              +97 	ly	x
00:00030C  853147              +98 	ax	bucket,,xi
00:00030D  60A000              +99 	la	0, x
00:00030E  C60307              +100 	jza	all_states_counted
  :                            101 
                                	printf	$3("%d %s":LF:0),,xi	a	(names	zero	closed 		;
                                							listen	synsent		;
                                							synreceived established	;
                                							finwait1 finwait2	;
                                							closewait lastack	;
                                							closing	timewait	;
00:00030F  F8B392              +108 							delete_tcb out_of_range), y
00:000310  F80004              +108 
00:000311  FD3245              +108 
00:000312  FD0001              +108 
00:000313  FCF004              +108 
00:000314  FF035C              +108 
00:000315  38000F              +108 
00:000316  B60307              +109 	j	all_states_counted
  :                            110 
  :                            111 all_states_reported
00:000317  CF30AA              +112 	dl	payload_segments
00:000318  7C031F              +113 	jdz	all_reported
  :                            114 
00:000319  9F0004              +115 	printf	$3("%ld":LF:0),,xi	a,,long
00:00031A  FD3248              +115 
00:00031B  FD0001              +115 
00:00031C  FCF004              +115 
00:00031D  FF035C              +115 
00:00031E  38000F              +115 
  :                            116 
  :                            117 all_reported
00:00031F  FCF001              +118 	$ret
00:000320  38000F              +118 
00:000321  350000              +118 
  :                            119 
  :                            120 	$root
  :                            121 
  :                            617: 	$include	netascan
  :                            1 netascan	$tree
  :                            2 
                                	$head_near	 params(textp,	int)	;
                                						;
00:000322  8F0379              +5 			scalars(neta,	float	)
  :                            6 
                                	sscanf	textp	$3("%d.%d.%d.%d":0),,xi	neta,,i		;
                                						neta+1,,i	;
                                						neta+2,,i	;
00:000323  FCF003              +10 						neta+3,,i
00:000324  FCF003              +10 
00:000325  FCF003              +10 
00:000326  FCF003              +10 
00:000327  FD324A              +10 
00:000328  F8F00B              +10 
00:000329  FCF006              +10 
00:00032A  FF0363              +10 
00:00032B  38000F              +10 
  :                            11 
00:00032C  4D00FF              +12 	lk	255,,xi
00:00032D  CFF000              +13 	dl	neta
00:00032E  2E0008              +14 	sbl	8
00:00032F  BFF002              +15 	mlb	neta+2
00:000330  2E0008              +16 	sbl	8
00:000331  BFF003              +17 	mlb	neta+3
00:000332  360010              +18 	dsl	16
00:000333  FCF004              +19 	$ret	0
00:000334  38000F              +19 
00:000335  350000              +19 
  :                            20 
  :                            21 		$root
  :                            618 
  :                            619 	$do	$<256,$(0:256)
*EOF*
00:000336+[0001]18:000000
00:000337+00C000
00:000338+[0003]30:000000000000
00:00033a+0001CD
00:00033b+00010E
00:00033c+00020700000000312600BC00
00:000340+00020700000000312800B800
00:000344+00020700000000312A00B400
00:000348+00020700000000312C00B000
00:00034c+00020700000000312E00AC00
00:000350+00020700000000313000A800
00:000354+00020700000000313200A400
00:000358+00020700000000313400A000
00:00035c+0001DB
00:00035d+0001D6
00:00035e+0001E4
00:00035f+000202
00:000360+00020D
00:000361+FF0000
00:000362+2B0000
00:000363+0001D8
00:000364+00FFFF
00:000365+000083
00:000366+000000010000
00:000368+3E0000
00:000369+0001D9
00:00036a+000135
00:00036b+02F008
00:00036c+000000000001
00:00036e+02F028
00:00036f+3C0000
00:000370+3F0000
00:000371+210000
00:000372+5E0000
00:000373+2E0000
00:000374+0000B1
00:000375+02F003
00:000376+00009A
00:000377+000000000000
00:000379+000000000000000000000000
00:00037d+000136
00:00037e+800020000032
00:000380+000134
00:000381+0AAAAB
00:000382+000116
00:000383+0031FA
0031FC
0031FF
003202
003205
003209
00320D
003210
003213
003217
00321A
00321D
003220
00:000390+BC0040
00:000391+BC0002
00:000392+00323A
0031FC
0031FF
003202
003205
003209
00320D
003210
003213
003217
00321A
00321D
00323C
003240
03:003155+70726F746F6E5F7278283129000000
03:00315a+70726F746F6E5F7278283229000000
03:00315f+70726F746F6E5F7278283329000000
03:003164+70726F746F6E5F7278283429000000
03:003169+70726F746F6E5F7278283529000000
03:00316e+70726F746F6E5F7278283629000000
03:003173+70726F746F6E5F7278283729000000
03:003178+70726F746F6E5F7278283829000000
03:00317d+70726F746F6E3E0000
03:003180+253A3A257300
03:003182+253A2F257300
03:003184+25642F25642F256420256400
03:003188+636F6E6E6563742072657475726E20256C640A0000
03:00318f+0D20256C6420000000
03:003192+257320256420257300
03:003195+256420257300
03:003197+256420747820256C640A0000
03:00319b+207278207365676D656E74206177616974696E6720736571
75656E636500
03:0031a5+20554E5452414E534D495454454400
03:0031aa+206177616974696E67205443505F41434B00
03:0031b0+207278207472616666696320617420736F636B6574000000
03:0031b8+0A636F6E6E656374696F6E2025783A257820686173207365
676D656E745B735D2025730A000000
03:0031c5+257320256C6420256C640000
03:0031c9+7278204020736F636B657420256C64202D3E20256C640A00
03:0031d1+0A61787720402025783A25780A0000
03:0031d6+5B25783A25783A25783A25783A25783A25783A25783A2578
5D0A00
03:0031df+726F7574696E67206865616465720A257820257820257820
25782025782025782025782025780A257820257820257820
25782025782025782025782025780A646174616772616D0A
000000
03:0031f8+254C780A0000
03:0031fa+6E6F6E650000
03:0031fc+636C6F736564000000
03:0031ff+6C697374656E000000
03:003202+73796E73656E740000
03:003205+73796E726563656976656400
03:003209+65737461626C697368656400
03:00320d+66696E776169743100
03:003210+66696E776169743200
03:003213+636C6F736577616974000000
03:003217+6C61737461636B0000
03:00321a+636C6F73696E670000
03:00321d+74696D657761697400
03:003220+64656C657465746362000000
03:003224+0A7463626C6F632025783A25782073746174652025642025
730A00
03:00322d+7463626C6F632025783A25782073746174652025640A0000
03:003235+254C780A254C780A254C780A000000
03:00323a+7A65726F0000
03:00323c+64656C6574655F7463620000
03:003240+6F75745F6F665F72616E6765000000
03:003245+25642025730A000000
03:003248+256C640A0000
03:00324a+25642E25642E25642E256400
:$(00):000000:0003A0 :$(02):002000:003000 :$(03):003000:00324E :$(42):000000:000005 :$(45):000000:000008 :$(47):000000:00000A 
proton.msm: object code 9409 bytes: 0 errors: 4 undefined labels
