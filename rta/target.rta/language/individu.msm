.       
.    Copyright Tim Cox, 2012
.    TimMilesCox@gmx.ch
.
.    This file is development and test material for the freeware processor architecture
.
.                RTA1
.
.    RTA1 is a free processor architecture specification.
.
.    The executable emulation of RTA1 is free software.
.
.    This instruction code for the target RTA1 architecture is free software
.
.    Software programs delivered with this software to connect the
.    emulated RTA1 with real network interfaces in the emulator host
.    are free software
.
.    Scripts and programs delivered with this software for running
.    on other computers and interacting with the RTA1 are free software
.
.    Scripts and utility programs for constructing RTA1 target
.    executable software are free software
.       
.    You can redistribute it and/or modify RTA1
.    under the terms of the GNU General Public License as published by
.    the Free Software Foundation, either version 3 of the License, or
.    (at your option) any later version.
.       
.    RTA1 is distributed in the hope that it will be useful,
.    but WITHOUT ANY WARRANTY; without even the implied warranty of
.    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.    GNU General Public License for more details.
.
.    You should have received a copy of the GNU General Public License
.    along with RTA1.  If not, see <http://www.gnu.org/licenses/>.
.                               
.                                               
                        

	$list		0
        $path   ../def
        $include        rta.def
        $path
        $include        stack.def
	$include	iconsta.def
	$include	fpxpress.def
        $include        ../test.msm/i_xpress.def
	$list

rumbold	$equf	31*/18

$(0:64/$0)
william $head_near       params(one,    long    ;
                                two,    long    ;
                                three,  long)   ;
                                                ;
                        scalars(first,  long    ;
                                second, long    ;
                                third,  long)

__RADIX	$set	48

	$xqt_fp	1.5 / *third

	$xqt_i,$iii	0aa55aa55 */ two + 1
	$xqt_i,$iii	99 / *third


	$xqt_fp	8.7 + (*3000000) + (*three) + (*5000)

	$xqt_i,$iii	1000000 * three:L + one + two

.	$xqt_i,$iii	1000 * third:L + one + two - three

.	$xqt_i		one + two - three + rumbold * third:L
	$xqt_i,$iii	one + two - three + rumbold * third:L

	$xqt_i,$iii	rumbold -- 0a0a0a0a0a0a
	$xqt_i,$iii	0a0a0a0a0a0a -- rumbold

	$xqt_i,$iii	090909090909 -- (*second)

	$xqt_i,$iii	second -- 090909090909

	$xqt_i,$iii	first */ (*4097)
	$xqt_i,$iii	second ++ (*0be0000)
	$xqt_i,$iii	third /* (*16385)

	$xqt_i,$iii	one */ (*30000)
	$xqt_i,$iii	third /* 6

near_here
        $do     $<256,$(0:256)

