.
.    Copyright Tim Cox, 2012
.    TimMilesCox@gmx.ch
.
.    This file is development and test material for the freeware processor architecture
.
.                RTA1
.
.    RTA1 is a free processor architecture specification.
.
.    The executable emulation of RTA1 is free software.
.
.    This instruction code for the target RTA1 architecture is free software
.
.    Software programs delivered with this software to connect the
.    emulated RTA1 with real network interfaces in the emulator host
.    are free software
.
.    Scripts and programs delivered with this software for running
.    on other computers and interacting with the RTA1 are free software
.
.    Scripts and utility programs for constructing RTA1 target
.    executable software are free software
.
.    You can redistribute it and/or modify RTA1
.    under the terms of the GNU General Public License as published by
.    the Free Software Foundation, either version 3 of the License, or
.    (at your option) any later version.
.
.    RTA1 is distributed in the hope that it will be useful,
.    but WITHOUT ANY WARRANTY; without even the implied warranty of
.    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.    GNU General Public License for more details.
.
.    You should have received a copy of the GNU General Public License
.    along with RTA1.  If not, see <http://www.gnu.org/licenses/>.
.
.



	$path		../def
	$include	rta.def
	$path
	$include	stack.def
	$include	fpxpress.def


$(0:64)

here_sir $head_near	 params(one,	float	;
				two,	float	;
				three,	float)	;
						;
			scalars(sum1,	float	;
				sum2,	float	;
				sum3,	float)

	$xqt_fp		8.0+one+1.75+two*three

	$xqt_fp		8.5*+1*three+sum1+sum2

	$xqt_fp		sum3/(5.0-3.0)

	$xqt_fp		5.0

	$xqt_fp		-5.0

	$xqt_fp		+5.0*5.0
	$xqt_fp		+5.0-5.0

	$xqt_fp		+two*three
	$xqt_fp		-two*three
	$xqt_fp		two*three
	$xqt_fp		+two-two
	$xqt_fp		two-two

	$xqt_fp		-three
	$xqt_fp		1.5*(-three)

	$xqt_fp		+three

	$xqt_fp		*apointer*9.0

	$xqt_fp		two+*4098
	$xqt_fp		two+99.0

	$xqt_fp		three*(*apointer)
	$xqt_fp		two/(*apointer)

	$xqt_fp		(sum1+1.0)/15.0+one+12.0*two-1.9999

	push, i	$$frame, sp
	pop	sp
	lret	0

	$do	$<256,$(0:256)

apointer +	(-77.0)
