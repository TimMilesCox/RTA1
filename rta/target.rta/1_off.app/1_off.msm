	$list		0
	$path		../
	$include	def/rta.def
	$include	def/vector.def
	$include	language/catalog.def
	$include	language/stack.def
	$include	stream/stream.def
	$include	lib/ascii.def
	$include	array.app/array.def
	$include	image.app/imports.def
	$path
	$list

__BASE	$equ	ONE_OFFP

$(3:03000/$3)
alongside	3.666666999999333333666e+1200000

$(0:0/$0)

	catalog	start

start	$base_d	$zenith(3)-03000 1024
	c	(seg$load)	0,,xi	(one_off_data:L),,long

	lc	summary	alongside,,float

	printf	$3("%f %f %f":LF:0),,xi	a,,float 8,,float d$save,,float
	fret	0

summary	$head_near	 params(along,	float)					;
										;
			scalars(another1,	float,	(2.0),,float		;
				one_off,	float,	along			)

	SIMD_CONTROL	(-1, 0, 0, 0q)		. 1 operation
						. increment neither cursor

	rex	(fd	(3.0e-50000))		. divide on stack top

	SIMD_TARGET	another1
	rex	(fm	one_off)		. multiply next object after stack top

	ql	(1.5)
	fm	another1			. multiply in fixed  accumulators

	qpop	8				. return 3 results
	qpop	d$save
	lret	0

	$do	$<256,$(0:256)
