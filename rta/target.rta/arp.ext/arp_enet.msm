ethernet_arp	$tree
ETHERNET_ARP_ARPQ_HEAD*	$set	arpq.head

.	ARP for
.		48-bit physical addresses
.	and	32-bit protocol addresses

.	this may be the only ARP needed
.	if another ARP is needed
.	for different size addresses
.	include arp.msm again

.	netspace	$tree
.	SETTINGS	$set	values
.			$include arp
.			$root
.
.	whatever storage bank that is in
.	needs four vectors at the front

.	netspa_arp_rx* $vector	netspace:arp_rx
.	netspa_arp_reso* $vector netspace:resolve
.	netspa_arp_xmit* $vector netspace:xmit
.	xarp_netspace*	$vector	netspace:xarp

.	these vectors go in the interface descriptor

.	this_if:arp_rx
.	this_if:arp_tx
.	this_if:arp_resolve
.	this_if:xarp

.		ql	(netspa_arp_rx, netspa_arp_tx, netspa_arp_reso, xarp_netspace:q)
.		qs	this_if:arp_rx

.	this would usually happen in ifconfigure.msm  where 
.	the vector pointer to the routine for constructing
.	link layer header is also written to this_if:write_llh


.	the settings and and generation of ethernet ARP follow here


ARP_STORE $set	50	. however many ARP cache rows are required

HTYPE	$set	ETHERNET_SPACE
HLEN	$set	6
PLEN	$set	4
PROTOCOL_SUITE	$set	0800
LINK_PROTOCOL	$set	0806

ARP_XMIT	$set	arp_ether_xmit

		$include	arp
		$root
