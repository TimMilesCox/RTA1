.
.    Copyright Tim Cox, 2012
.    TimMilesCox@gmx.ch
.
.    This file is instruction code for the freeware processor architecture
.
.                RTA1
.
.    RTA1 is a free processor architecture specification.
.
.    The executable emulation of RTA1 is free software.
.
.    This instruction code for the target RTA1 architecture is free software
.
.    Software programs delivered with this software to connect the
.    emulated RTA1 with real network interfaces in the emulator host
.    are free software
.
.    Scripts and programs delivered with this software for running
.    on other computers and interacting with the RTA1 are free software
.
.    Scripts and utility programs for constructing RTA1 target
.    executable software are free software
.
.    You can redistribute it and/or modify RTA1
.    under the terms of the GNU General Public License as published by
.    the Free Software Foundation, either version 3 of the License, or
.    (at your option) any later version.
.
.    RTA1 is distributed in the hope that it will be useful,
.    but WITHOUT ANY WARRANTY; without even the implied warranty of
.    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.    GNU General Public License for more details.
.
.    You should have received a copy of the GNU General Public License
.    along with RTA1.  If not, see <http://www.gnu.org/licenses/>.
.
.




recursive_seg_load
		$head_far	 params(rsegload_bank,	int	;
					rsegload_file,	int)	;
								;
				scalars(rsegload_fpax,	6	;
					rsegload_buffer,4)

		la	rsegload_bank
		jnza	rseg_fsfound		. caller knows where FS is
		la	10, sp			. no but it's in caller's code bank
		sa	rsegload_bank		. caller doesn't know where that is
						. but we do
rseg_fsfound
		c	(fsrom_da)	rsegload_fpax,,i rsegload_bank rsegload_file,,long

rseg_lstring	c	(fsrom_read)	rsegload_fpax,,i rsegload_buffer,,i 4,,i

		aa, xi	-4
		jnza	rseg_loadx

		la	rsegload_buffer
		jza	rseg_loadx

		lx	rsegload_buffer+3
		ax	fp
		c	(fsrom_read)	rsegload_fpax,,i x rsegload_buffer
		j	rseg_lstring

rseg_loadx	$ret	0
