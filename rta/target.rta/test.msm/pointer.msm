	$include	../def/rta.def
	$include	../language/stack.def
	$include	pointer.def

POOL	$equ	8

$(3:03000)
r1	$res	256//3
p1	+	r1,50:d
into	+	0
$(64:256+POOL)

$(0::44*1024/$0)
transfer* $vector wirraff
ayrwiaye* $vector fireitup	
$(0:64)
wirraff	$head_far		 params(left, long	;
					right, long	)

more	pnormalise	left	.	can only compare normalised
				.	but don't store it back
	dan		right
	jdz		enfin

	__,la	left	255,255,enfin
	inc	left+1
	__,push	p1:p1+1	60
	__,aa	6:7	30
	__,push	8:9
	__,pop	16:17	60
	__,pop	18:19
	__,z	p1	60
	__,z	r1:35,,*
	__,sa	r1:into	255,255,enfin
	j	more
enfin	$ret

C51	$equ	51
C68	$equ	68
	
fireitup
	c	(transfer)	(columnp(03000:500)d),,long	;
				(columnp(03000:600)d),,pnormalise
	fret	0

	$do	$<256,$(0:256)
	$do	$zenith>256+POOL,	$flag leave more space for literals
