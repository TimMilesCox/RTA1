	$path		../
	$list		0
	$include	def/rta.def
	$include	language/stack.def
	$list

identify $equf	100, fp,,18, 36
directly $equf	100, fp,,,18
hornblower $equf 20, fp


p	$proc
indexp*	$name	109
"$$list" $set	subscripts\p(1, 1)
	$if	$$list
	$if	($t(p(1, 1))=$equf)**(p(1, 5)^=0)
	$if	p(1, 2)
	la, xi	p(1, 4)
	lb, i	p(1)
	$else
	dl	(+(p(1, 4)), +(p(1, 1:1))d)
	$endif
	$elseif	($t(p(1, 1:1))=$equf)**(p(1, 1:1)\2^=0)
	lb, i	p(1, 1:1)
	la,xi	p(1, 1:2)
	$else
	dl	(+(p(1, 1:2)), +(p(1, 1:1))d)
	$endif
__	$do	$$list,	da	subscript\p(1, 1)
	dpush	a
	$else
	$if	($t(p(1, 1))=$equf)**(p(1, 5)^=0)
	$if	p(1, 2)
	push,i	p(1)
	push,xi p(1, 4)
	$else
	dpush	(+(p(1, 4)), +(p(1, 1:1))d)
	$endif
	$elseif	($t(p(1, 1:1))=$equf)**(p(1, 1:1)\2^=0)
	push, i	p(1, 1:1)
	push,xi	p(1, 1:2)
	$else
	dpush	(+(p(1, 1:2)), +(p(1, 1:1))d)
	$endif
	$endif
	$end

f	$func
subscripts* $name
	$return	f()
	$return	f(1, 1:)
subscript* $name
	$return	f(__, 1)
	$return f(1, 1:__)
	$end
	
$(3:03000)
this	$res	2
that	$res	2
the_other $res	2

static	$record
	6
field	9
	$root

$(0:64)
.	$plist	5
	c	(glomerated)	identify[this that the_other],,indexp	;
				$net(identify\5),,xi			;
				(99d),,long
	$plist
	c	(glomerated)	directly,,indexp	;
				$net(directly\5),,xi	;
				(101d),,long

	c	(glomerate)	static:field,,indexp		;
				static:field\5,,xi		;
				105,,xi

	c	(glomeratet)	01ffc:0,,indexp			;
				72,,xi				;
				(0aaaaaabbbbbbcccccc:t),,triple

	c	(glomerated)	hornblower:8,,indexp		;
				40, xi				;
				(0eeeeeeffffff:d),,long

	$plist	5
	c	(glomerated)	hornblower:8[this],,indexp	;
				40, xi				;
				(0eeeeeeffffff:d),,long

	$plist

	$do	$<256,$(0:256)

