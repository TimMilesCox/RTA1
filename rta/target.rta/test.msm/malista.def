
	$do	$o('k')=0,	$exit	-k required
.	$set_option	"L"

p	$proc	$(30)
malista*	$name

p	$proc	$(0)
append*	$name

	$if	p(1, 4)
	la, i	(appendp, p(1, 1), p(1, 2), $bits, p(1, 4)P)
	call	(append_async)
	$elseif	$bits<25
	la	p(1)
	sa	*($(30))
	$elseif	$bits<49
	dl	p(1)
	ds	*($(30))
	$elseif	$bits<73
	la, i	(appendp, p(1, 1), p(1, 2)T)
	call	(append3)
	$else
	ql	p(1)
	qs	*($(30))
	$endif

	$end

p	$proc	*
fitter*	$name	
all	$equ	1

	$do	p(1, 2)^=0,"$bits"	$set	$byte*p(1, 2)
	$do	$bits>96,	$flag	search string > 96 bits

	$if	(p(1, 3)=0)**($bits<25)
	-1*/24-$bits
	$else
	+	$bits//24-1*/1++p(1, 3)
	$if	$bits///24
	-1*/24-$bits///24
	$else
	-1
	$endif
	$endif

appendp	$set	$a
	$if	p(1, 2)
	append	p(1, 1)
	$do	$bits//$word,	07F7F7F
	$else
	p(1, 1)
	$endif
	$end

*	$set	$a
?	$do	p(),	fitter	p(?)
	0

	$end
