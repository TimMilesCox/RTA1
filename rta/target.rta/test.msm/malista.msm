
	$path		../
	$include	def/rta.def	

	$set_option	"Z"

$(30:01E000)
$(0:64)

p	$proc	$(30)
malista*	$name

p	$proc	$(0)
append*	$name

	$if	p(1, 4)
	la, i	($(30), $a(p(1, 1)), $bits, p(1, 4)q)
	lcal	append_async
	$elseif	$bits<25
	la	p(1)
	sa	*($(30))
	$elseif	$bits<49
	dl	p(1)
	ds	*($(30))
	$elseif	$bits<73
	la	($(30))
	lcal	append3
	$else
	ql	p(1)
	qs	*($(30))
	$endif

	$end

p	$proc	*
fitter*	$name	
all	$equ	1

	$do	p(1, 2)^=0,"$bits"	$set	$byte*p(1, 2)
	$do	$bits>96,	$flag	search string > 96 bits

	$if	(p(1, 3)=0)**($bits<25)
	-1*/24-$bits
	$else
	+	$bits//24-1*/1++p(1, 3)
	$if	$bits///24
	-1*/24-$bits///24
	$else
	-1
	$endif
	$endif

	$if	p(1, 2)
	append	p(1, 1)
	$do	$bits//$word,	07F7F7F
	$else
	p(1, 1)
	$endif
	$end

?	$do	p(),	fitter	p(?)
	0
	$end

	malista	"yes"	"no"	"maybe"	"please",,all	hopeful,4	;
		here:restful,7	"sashay",,all

	$do	$<256,$(0:256)

$(5:05000,y)
hopeful	$res	4*$byte//$word

here	$record
	16
restful	56
	$root
