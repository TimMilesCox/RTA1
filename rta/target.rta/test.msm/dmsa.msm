	$path		../
	$list		0
	$include	def/rta.def
	$include	language/stack.def
	$include	fs/fs24.def
	$list
	$path
	$include	dmsa.def
	$include	tile.def

$(66::,x)
couplet	assignment_table

$(67::,y)
tpage	$page_control

$(71::,sp)
	$plist	4
ahead	$dmsa	,3000
	$plist

$(0)
area*	$vector	assign_area
	$list	0
	$do	64-$,	fret	0
	$list	2
$(0:64)
assign_area $tree
	$head_far	 params(name,		int	;
				name_words,	int	;
				tree_insert,	long	;
				area_words,	long)	;
							;
			scalars(aheadu,		$DMSA_WORDS+1+1	)


	dl	area_words
	da	(TILE-1d)
	dsr	LOG24(TILE)
	dsl	LOG24(GRANULE)
	ds	ahead:granules_max

	lcal	granules_extent

	sb	ahead:granules_extent	. power-2 size extent bucket
	ab, xi	-1			. put some rounding on
	sa	6			. log of size in granules
	la, xi	0
	da	ahead:granules_max
	dsr	*6			. b = extents
					. could divide by granules_extent instead
					. if extents non-power-2 are desired

	ab	($DMSA_EXTENTS*/16s)	. construct extents record format word
	sb	ahead:rfwx

	andB,xi	32767			. isolate # extent pointers
	la, xi	$DMSA_WORDS
	aa	name_words		. calculate 1st header length minus rfw
	ab, i	1, a			. add 1st header length + rfw

	aa	($DMSA*/16s)		. construct the initial record format word
	sa	ahead:rfw

					. request directory space with 2nd rfw

	c	(tree$space$)	1,b,i	tree_insert,,long
	j	cannot			. this would be a sign of a large problem

	ly	a			. can: target address for directory entry

.	ahead:quanta is already zero = dynamic variable default

	dl	ahead			. write fixed part of file descriptor
	ds	0, y			. rfw:granules_extent
	ql	ahead+2
	qs	2, y			. granules_max:quanta_written

	ly, i	6, y

	lr	name_words
	lx	name			. pointer to text words string
	j	wname?

wname!	la	0, x			. write filename to locations 6+
	sa	0, y			. of descriptor
	ax, xi	1
	ay, xi	1
wname?	jdr	wname!
	
	la	ahead:rfwx		. write rfw of extent list
	sa	0, y			. after filename
	ay, xi	0

	and, xi	32767			. retrieve # extent pointers
	lr	a

	j	wzextent?

wzextent!				. initialise all extent slots
	z	0, y			. unpopulated
	ay, xi	1
wzextent?
	jdr	wzextent!		. that's all, y marks the spot

	call	(confirm$write$)
	la, xi	0
	j	can

cannot	la, xi	-1

can	$ret
	$root

	$include	tile
	$include	dassign
	$include	tree

	$do	$<256,$(0:256)
