	$list		0
	$path		../
	$include	def/rta.def
	$include	language/stack.def
	$path
	$list

array_load	$tree

	$head_far	 params(banks,		int	;
				page_antilog,	int	;
				gate_listp,	int	;
				window,		int	;
				words,		int	;
				datap,		int	;
				offset,		long)	;
							;
			scalars(base2,		int	;
				base1,		int	)

		lr	banks
		dl	offset
		lx	page_antilog		. 6 for a bank, 12 for a page
		dsl	x			. bank or page -> a 
		lx	a
		jxge	actions_complete	. request not in range

		sar	6			. gate.block
		sbr	18
		lx	a
		ax	gate_listp		. gate populated?

		la	1, x
		lk	(0400000)
		mta	(0)
		j	banks_gate

		jnza	second_pages_gate?	. page_gate. already resourced?

		la	0, x
		sar	6
		and	(03F000)		. page high index ->
		or	4095,,xi		. required words - 1
		ii	TERA$PAGE		. for variant on BANK$
		jza	actions_complete
		and	(03FFFFF)
		
		sa	1, x

second_pages_gate?
		la	words
		jza	actions_complete	. don't resource the next gate
		aa	offset+1		. unless a load string is supplied
		jnc	data			. and it's overflowing 1st block
		jza	data

		tz	3, x
		j	data			. next block is present

		la	2, x
		sar	6
		and	(03F000)		. page high index ->
		or	4095,,xi		. required words - 1
		ii	TERA$PAGE		. for variant on BANK$
		jza	actions_complete
		and	(03FFFFF)
		sa	3, x

		j	data

banks_gate!	la	1, x
		jpa	second_banks_gate?
		la	0, x
		sar	18
		ii	TERA$FRAME
		jza	actions_complete
		sa	1, x

second_banks_gate?
		la	words
		jza	actions_complete	. don't resource the next gate
		aa	offset+1		. unless a load string is supplied
		jnc	data			. and it's overflowing 1st block
		jza	data

		la	3, x
		jpa	data			. already there
		la	2, x
		sar	18
		ii	TERA$FRAME
		jza	actions_complete
		sa	3, x

data		lr	gate_listp		. gate list pointer
		dl	offset			. offset in array
		or	(1*/18)			. auto_update gate list pointer
		sa	6
		la	(1*/23++r:s)		. pointer space *r
		lx	window			

		sb	s_top

		sabr	0, x
		inc	6
		sabr	1, x

		lx	b
		ly	datap

		la	words
		sar	2
		lr	a
		j	txfer_quad?

txfer_quad!	qpush	0, y
		qpop	0, x
		ax	4,,xi
		ay	4,,xi
	
txfer_quad?	jdr	txfer_quad!

		la	words
		and	3
		lr	a

		j	txfer?

txfer!		push	0, y
		pop	0, x
		ax	1,,xi
		ay	1,,xi

txfer?		jdr	txfer

actions_complete
		$ret

		$root
