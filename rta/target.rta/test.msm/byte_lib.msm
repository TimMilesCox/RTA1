	$list		0
	$path		../
	$include	def/rta.def
	$include	language/stack.def
	$path
	$list

.	in circumstances, for example, where the input bitstream
.	is a format string


store_counted $tree
	$head_far	 params(s,		long	;
				bytes,		int)	;
							;
			scalars(save_user_a,	float,	a ;
				save_user_r,	float,	r )

	lr, xi		XQT_FRAME
	lx		s
	ly		s+1

	j		test_end

acquire	jyl		read_byte
	lcal		reframe
read_byte
	ex		r2atable, y
	ay, xi		1
	dec		bytes
	sal		$word-$byte
	wsr		$byte

test_end
	tz		bytes
	j		acquire
	qpop		r
	qpop		a
	fret		0
	$root	

byte_string_compare $tree
	$head_far	 params(s1,		long	;
				s2,		long	;
				bytes,		int)	;
							;
			scalars(save_user_a,	float,	a ;
				save_user_r,	float,	r )

	lx		s1
	ly		s1+1
	lcal		start_input_stream
	lx		s2
	ly		s2+1

	lr, xi		XQT_FRAME
	la, xi		0		. default result
	j		test_end
	
acquire	rsr		$byte
	jyl		compare
	lcal		reframe
compare	ex		dfatable, y
	jnza		end
	ay, xi		1
	dec		bytes

test_end
	tz		bytes
	j		acquire
end	qpop		r
	qpop		a
	fret		0
	$root


start_input_stream
	lcal		reframe
	sx		q
	z		RDATAC
	on		b$streamZR
	ex		stream_head, y
	lret		0


reframe	la		y

	$if	$byte=8
	dsr		24
	d, xi		$word/$byte
	$elseif	$byte=12
	dsr		1
	sbr		23
	$else
	$flag	what's this for then?
	$endif

	ax		a
	ly		b
	lret		0
