
	$path		../
	$include	def/rta.def
	$include	language/stack.def
	$include	lib/compress.def
	$path

$(0)
ogood*	$vector	otherwise

$(0:64)

otherwise
	on	b$streamZR
owhere	rsr	$byte
	aa, xi	-' '
	jza	owhere
	aa, xi	' '-'+'
	jza	ok		. next byte should be 1st digit
	aa, xi	'+'-'-'
	jza	ono		. next byte should be 1st digit
	aa, xi	'-'		. this byte should be 1st digit
	lcal	o
	fret	0

ok	rsr	$byte		. this byte should be 1st digit
	lcal	o
	fret	0		. and leading sign was '+'

ono	rsr	$byte		. this byte should be 1st digit
	lcal	o
	ds	6		. and leading sign was '-'
	dsr	48
	dan	6
	fret	0


o	qpush	(0.0)		. fpx	(0.0d)
	j	o2		. 1st digit should be in a
o1	drl	1
	ds	0, sp
	drl	2
	ds	2, sp
	rsr	$byte
o2	aa, xi	-'0'-10
	jc	ox
	aa, xi	10
	jnc	ox
	dsr	24
	da	0, sp
	da	2, sp
	j	o1
ox	qpop	a
	drr	1
	lret	0

	$do	$<256,$(0:256)

