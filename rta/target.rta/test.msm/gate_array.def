__KEEP_SIMD_SETTING	$set	0

p		$proc
terapage*	$name	12
teraframe*	$name	18

S		$set	24
CONTAINER_SIZE	$set	p(3, 1)
instance	$equf	p(4)
WINDOW		$set	p(1, 1)
gate_list	$equf	p(2)

__CHEX_LIMIT	$set	p(5, 1)//(1*/p(0,0))	. optionally calculate maximum storage blocks // array
__CHEX_ESCAPE	$set	p(5, 1:2)

p		$proc
pointp*		$name
		dsl	p(1, 1)+__SCALE
		orB	WINDOW
		rbr	p(1, 1)
		$end

LOG_TRUE*	$func
LOG	$do	18,	$do	1*/LOG=CONTAINER_SIZE,	$return	LOG
		$return	0
		$end

__SCALE		$set	LOG_TRUE

		$if	p(4, 3)=S
__SCALE		$set	0
		$do	(instance\2^=0)++(p(4, *1))++(instance^=b),	lb	p(4, 1:1)
		mf	CONTAINER_SIZE,,xi

		$elseif	__SCALE++(CONTAINER_SIZE=1)
		$do	(instance\2^=0)++(p(4, *1))++(instance^=a),	dl	instance
		$else

		$if	__KEEP_SIMD_SETTING
		dpush	instance
		pop	b
		m	CONTAINER_SIZE,,xi
		sa	6
		pop	b
		mf	CONTAINER_SIZE,,xi
		aa	6
		$else
		dpush	instance
		rex	(m	CONTAINER_SIZE,,xi)
		dpop	a
		$endif
		$endif

		pointp	24-p(0, 0)
		sa	6

		$if	p(5, 1:)>1
		lx	6
		lr	__CHEX_LIMIT+1,,xi
		jxge	__CHEX_ESCAPE
		$endif

		la	(1*/23++gate_list:s)
		sabr	WINDOW

__SEVERAL	$set	p(1, 1:2)-WINDOW
		$do	__SEVERAL<0,__SEVERAL	$set	0
		$do	__SEVERAL>15,__SEVERAL	$set	0

__MORE*		$proc
		inc	6
		sabr	WINDOW+__NEXT
		$end

__NEXT		$do	__SEVERAL,	__MORE
		$end


data_gate	$form	6, 18, 24

p		$proc
blank_array*	$name	18
		$if	p(1, 1)//16777216>262144
		$flag	bank array outsize
		$return
		$endif

?	$do	p(1, 1)/16777216,	data_gate	63, ?-1, 0C00001
		data_gate	p(1, 1)///16777216//262144, ?, 0C00001
		$end

p		$proc
plage_array*	$name	12
		$if	p(1, 1)//262144>262144
		$flag	page array outsize
		$return
		$endif

?	$do	p(1, 1)/262144,	data_gate	63, ?-1, 0
		data_gate	p(1, 1)///2621444//4096, ?, 0
		$end

