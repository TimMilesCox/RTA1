.
.    Copyright Tim Cox, 2012
.    TimMilesCox@gmx.ch
.
.    This file is instruction code for the freeware processor architecture
.
.                RTA1
.
.    RTA1 is a free processor architecture specification.
.
.    The executable emulation of RTA1 is free software.
.
.    This instruction code for the target RTA1 architecture is free software
.
.    Software programs delivered with this software to connect the
.    emulated RTA1 with real network interfaces in the emulator host
.    are free software
.
.    Scripts and programs delivered with this software for running
.    on other computers and interacting with the RTA1 are free software
.
.    Scripts and utility programs for constructing RTA1 target
.    executable software are free software
.
.    You can redistribute it and/or modify RTA1
.    under the terms of the GNU General Public License as published by
.    the Free Software Foundation, either version 3 of the License, or
.    (at your option) any later version.
.
.    RTA1 is distributed in the hope that it will be useful,
.    but WITHOUT ANY WARRANTY; without even the implied warranty of
.    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.    GNU General Public License for more details.
.
.    You should have received a copy of the GNU General Public License
.    along with RTA1.  If not, see <http://www.gnu.org/licenses/>.
.
.


event_free_ii
	dl	a			. you can't be running while event-wait-flagged
					. but if you are, get your own TCB first: inA 65
	sabr	BVOLATILE_I		. your're doing this to another thread usually

	xorB	(08FFFFFs)		. make an AND mask
	orB	(0700000s)		. don't turn off delete or halted flags
					. but turn off timewait if requested

	lx	*(BVOLATILE_I*/12++TDESCRIPTOR-01000)
	on	see$1++(see$7*/MANAGER_BANKS)-see$7

	andB	2, x			. keep event flags not specified for clear
	sb	2, x

	la	(0C00001s)		. close the window
	sabr	BVOLATILE_I

					. just assume the thread did not
					. make this call for itself
					. there would be no need
	la	b
	and	XINT,,xi		. preemptive event ?
	jza	event_free_iix		. no it it's normal scheduling
	la	1, fp			. interrupted application PSR
	and	(070000)		. interrupts masked ?
	jza	yield			. none at all, switch
					. this is more work if SMPs
	
event_free_iix
	ir	0

event_wait_ii
	dl	a			. load flags, optional timeout up to 4.66 hours
	on	see$1++(see$7*/MANAGER_BANKS)-see$7
	lx	TDESCRIPTOR
	or	2, x			. add new flags
	sa	2, x			. and save
	tp	a			. was TIME_WAIT added? (application a)
	lcal	event_time_limit	. set new wait time target
	j	yield

event_time_limit
	la	0,,xi			. zero extend the wait time
	da	DAYCLOCK$U		. add to make a target time
	ds	4, x			. last 2 words thread descriptor
	lret	0

