MASMX 7r3A Build 12
3/proto.msm
*EOF*
  :                            25 	$list
  :                            26 
  :                            27 RX_THREADS	$equ	8
  :                            28 PORTS	$equ	8000
  :                            29 DISTRO	$equ	PORTS/RX_THREADS
  :                            30 
  :                            31 	$set_option	"z"
  :                            32 
  :                            33 $(1:01000)
  :                            34 $(3:03000/$3)
  :                            35 
  :                            36 	$if	1
  :                            37 
03:003000  002800 002BE8        +38 ?	$do	RX_THREADS,supersockets(?)	+	10240+?*DISTRO-DISTRO, 10240+?*DISTRO:L
03:003002  002BE8 002FD0        +38 
03:003004  002FD0 0033B8        +38 
03:003006  0033B8 0037A0        +38 
03:003008  0037A0 003B88        +38 
03:00300A  003B88 003F70        +38 
03:00300C  003F70 004358        +38 
03:00300E  004358 004740        +38 
03:003010  000000 000000        +39 ?	$do	RX_THREADS,total_rx(?)	0L
03:003012  000000 000000        +39 
03:003014  000000 000000        +39 
03:003016  000000 000000        +39 
03:003018  000000 000000        +39 
03:00301A  000000 000000        +39 
03:00301C  000000 000000        +39 
03:00301E  000000 000000        +39 
03:003020  000000 000000        +40 ?	$do	RX_THREADS,total_tx(?)	0L
03:003022  000000 000000        +40 
03:003024  000000 000000        +40 
03:003026  000000 000000        +40 
03:003028  000000 000000        +40 
03:00302A  000000 000000        +40 
03:00302C  000000 000000        +40 
03:00302E  000000 000000        +40 
  :                            41 
  :                            42 	$else
  :                            43 
                                ?	$do	RX_THREADS,;
  :                            45 supersockets(?)	$socket_array	10240+?*DISTRO-DISTRO:10240+?*DISTRO
  :                            46 	$endif
  :                            47 
  :                            48 	$if	0	. moved to threads internal stacks
  :                            49 bytes	$res	1
  :                            50 connection $res	1
  :                            51 	$endif
  :                            52 
03:003030  000000 000000        +53 payload_segments 0L
03:003032  000000 000000        +54 payload_response 0L
  :                            55 .	total_rx	0L
  :                            56 obuffer	$res	20
  :                            57 idata	$res	600/3
03:003110  206179 652074 68616E 6B7320 796F6E 732061 776679 206E69
                              +58 response	" aye thanks yons awfy nice":10
03:003118  63650A              +58 
  :                            59 RESPONSE_BYTES	$equ	$bits/8
  :                            60 
03:003119  000000              +61 spring_page	0
03:00311A  000000              +62 rx_descriptor		0
03:00311B  000000              +63 actual		0
  :                            64 
  :                            65 $(66:0:0,x)
42:000000                     +66 transmission	tcp_connection
42:000001                     +66 
42:000002                     +66 
42:000003                     +66 
42:000004                     +66 
42:000005                     +66 
42:000006                     +66 
42:000008                     +66 
42:00000A                     +66 
42:00000C                     +66 
42:00000E                     +66 
42:000010                     +66 
42:000011                     +66 
42:000012                     +66 
42:000013                     +66 
42:000014                     +66 
42:000015                     +66 
42:000016                     +66 
42:000017                     +66 
  :                            67 
  :                            68 $(67:0:0,y)
43:000000                     +69 tlist		tbank
43:000001                     +69 
43:000002                     +69 
43:000003                     +69 
43:000004                     +69 
43:000005                     +69 
43:000006                     +69 
43:000007                     +69 
43:000008                     +69 
43:000009                     +69 
43:00000A                     +69 
43:00000B                     +69 
43:00000C                     +69 
43:00000D                     +69 
43:00000E                     +69 
43:00000F                     +69 
43:000010                     +69 
43:000011                     +69 
43:000012                     +69 
43:000013                     +69 
43:000014                     +69 
43:000015                     +69 
43:000016                     +69 
43:000017                     +69 
43:000018                     +69 
43:000019                     +69 
43:00001A                     +69 
43:00001B                     +69 
43:00001C                     +69 
43:00001D                     +69 
43:00001E                     +69 
43:00001F                     +69 
43:000020                     +69 
43:000021                     +69 
43:000022                     +69 
43:000023                     +69 
43:000024                     +69 
43:000025                     +69 
43:000026                     +69 
43:000027                     +69 
43:000028                     +69 
43:000029                     +69 
43:00002A                     +69 
43:00002B                     +69 
43:00002C                     +69 
43:00002D                     +69 
43:00002E                     +69 
43:000030                     +69 
43:000032                     +69 
43:000034                     +69 
43:000036                     +69 
43:000038                     +69 
43:000039                     +69 
43:00003A                     +69 
43:00003B                     +69 
43:00003C                     +69 
43:00003D                     +69 
43:00003E                     +69 
43:00003F                     +69 
43:000040                     +69 
43:000041                     +69 
43:000042                     +69 
43:000043                     +69 
43:000044                     +69 
43:000045                     +69 
43:000046                     +69 
43:000048                     +69 
43:00004A                     +69 
43:00004C                     +69 
43:00004E                     +69 
43:000050                     +69 
43:000051                     +69 
43:000052                     +69 
43:000053                     +69 
43:000054                     +69 
43:000055                     +69 
43:000056                     +69 
43:000057                     +69 
  :                            70 
  :                            71 $(70:0:0,fp)
  :                            72 descriptor	acw
  :                            73 
  :                            74 $(71:0:0,sp)
47:000000                     +75 dgram		datagram
47:000001                     +75 
47:000002                     +75 
47:000003                     +75 
47:000004                     +75 
47:000005                     +75 
47:000006                     +75 
47:000008                     +75 
  :                            76 
  :                            77 $(0:0/$0)
  :                            78 
  :                            79 ROTARY		$equ	1
  :                            80 
  :                            81 __BASE	$equ	PROTO_P
  :                            82 __PRIORITY $equ	5
  :                            83 
[+0001]18
[+0000]18*/30
00:000040  000050 000000 001000 000000
                              +84 	catalog
00:000044  4D0003              +84 
00:000045  000000              +84 
[+0002]30
00:000046  000000 000000        +84 
[+0000]18
[+0001]18*/48
00:000048  800040 000005 009000 FFFFFF 000000 000000 000050 000000
                              +84 
  :                            85 
                                	$base_d	$zenith(3)-03000	1024	1024	1024	1024	1024	1024	1024	1024	;
                                					1024	1024	1024	1024	1024	1024	1024	1024	;
                                					1024	1024	1024	1024	1024	1024	1024	1024	;
00:000050  60207F              +89 					1024	1024	1024	1024	1024	1024	1024	1024	1024	1024
00:000051  340003              +89 
00:000052  64C001              +89 
00:000053  340004              +89 
00:000054  64C001              +89 
00:000055  340005              +89 
00:000056  64C001              +89 
00:000057  340006              +89 
00:000058  64C001              +89 
00:000059  340007              +89 
00:00005A  64C001              +89 
00:00005B  340008              +89 
00:00005C  64C001              +89 
00:00005D  340009              +89 
00:00005E  64C001              +89 
00:00005F  34000A              +89 
00:000060  64C001              +89 
00:000061  34000B              +89 
00:000062  60029E              +89 
00:000063  75007A              +89 
00:000064  60029F              +89 
00:000065  20000E              +89 
  :                            90 
00:000066  9F02A0              +91 	c	(seg$load)	0,,xi	(proto_data:d),,long
00:000067  FD0000              +91 
00:000068  FCF003              +91 
00:000069  FF02A2              +91 
00:00006A  38000F              +91 
  :                            92 
  :                            93 	$if	ROTARY
  :                            94 
  :                            95 uthread* $proc
  :                            96 	ql	(rx_thread,	0,	supersockets(?),	THREAD_FP(2+?)q)
  :                            97 	ii	THREAD$
  :                            98 
  :                            99 	$if	1
  :                            100 	lb	$3("proto_rx(":'0'+?///10:")":0),,xi
  :                            101 	$else
                                	lb	?-1+$0(names	proto_rx(1) proto_rx(2) proto_rx(3) proto_rx(4)	;
  :                            103 				proto_rx(5) proto_rx(6) proto_rx(7) proto_rx(8)	)
  :                            104 	$endif
  :                            105 
  :                            106 	ii	TAG$
  :                            107 
  :                            108 	$end
  :                            109 
00:00006B  4F02A3              +110 ?	$do	RX_THREADS,	uthread
00:00006C  750047              +110 
00:00006D  6D3148              +110 
00:00006E  750049              +110 
00:00006F  4F02A7              +110 
00:000070  750047              +110 
00:000071  6D314C              +110 
00:000072  750049              +110 
00:000073  4F02AB              +110 
00:000074  750047              +110 
00:000075  6D3150              +110 
00:000076  750049              +110 
00:000077  4F02AF              +110 
00:000078  750047              +110 
00:000079  6D3154              +110 
00:00007A  750049              +110 
00:00007B  4F02B3              +110 
00:00007C  750047              +110 
00:00007D  6D3158              +110 
00:00007E  750049              +110 
00:00007F  4F02B7              +110 
00:000080  750047              +110 
00:000081  6D315C              +110 
00:000082  750049              +110 
00:000083  4F02BB              +110 
00:000084  750047              +110 
00:000085  6D3160              +110 
00:000086  750049              +110 
00:000087  4F02BF              +110 
00:000088  750047              +110 
00:000089  6D3164              +110 
00:00008A  750049              +110 
  :                            111 
00:00008B  B600DB              +112 	j	control_plane
  :                            113 
  :                            114 socket_respond
  :                            115 	$list	2
  :                            116: 	$include	respond
  :                            1 
                                	$head_near	 params(sockets_actual,	int		)	;
                                									;
                                			scalars(connection,	int			;
                                				bytes,		int			;
                                				tally_response,	int			;
                                				accumulate,	int		)	;
                                									;
00:00008C  FD0000              +9 			 xframe(udata,	600/3				)
00:00008D  FD0000              +9 
00:00008E  FD0000              +9 
00:00008F  FD0000              +9 
00:000090  FDFF38              +9 
00:000091  2F000E              +9 
  :                            10 			
  :                            11 sweep_sockets
00:000092  FD0000              +12 	c	(hvsocket_rx)	sockets_actual	0,,xi	udata,,i	600,,xi	0,,xi
00:000093  FD0258              +12 
00:000094  FCE000              +12 
00:000095  FD0000              +12 
00:000096  F8F00A              +12 
00:000097  FCF005              +12 
00:000098  FF02C3              +12 
00:000099  38000F              +12 
  :                            13 					.	connection wildcard		flags default
  :                            14 
00:00009A  C7F002              +15 	ds	bytes		. and connection @ word bytes + 1
00:00009B  C600B3              +16 	jza	remote_closed	. pipe drained
00:00009C  E600BA              +17 	jna	sweep_exitz	. or bent
  :                            18 
00:00009D  17F000              +19 	inc	accumulate
  :                            20 
  :                            21 	$if	0
  :                            22 
  :                            23 	c	(hvsocket_tx)	sockets_actual	connection	udata,,i	bytes	0,,xi
  :                            24 	jna	sweep_sockets
  :                            25 	jza	sweep_sockets
  :                            26 	c	(hvsocket_tx)	sockets_actual	connection	response,,xi	RESPONSE_BYTES,,xi	TCP_PSH,,xi
  :                            27 	
  :                            28 	$elseif	1
  :                            29 
00:00009E  FD001B              +30 	c	(memcat)	udata,,i	bytes	response,,xi	RESPONSE_BYTES,,xi
00:00009F  FD3110              +30 
00:0000A0  F8F004              +30 
00:0000A1  FCE000              +30 
00:0000A2  FCF004              +30 
00:0000A3  FF02C4              +30 
00:0000A4  38000F              +30 
00:0000A5  65001B              +31 	la	RESPONSE_BYTES,,xi
00:0000A6  C0F002              +32 	aa	bytes
00:0000A7  FD0008              +33 	c	(hvsocket_tx)	sockets_actual	connection	udata,,i	a	TCP_PSH,,xi
00:0000A8  F80004              +33 
00:0000A9  FCE000              +33 
00:0000AA  F8F006              +33 
00:0000AB  F8F00A              +33 
00:0000AC  FCF005              +33 
00:0000AD  FF02C5              +33 
00:0000AE  38000F              +33 
  :                            34 
  :                            35 	$else
  :                            36 
  :                            37         sprintf	obuffer,,xi	$3("%s %s":0),,xi	udata,,i	response,,xi
  :                            38 
  :                            39 	c	(hvsocket_tx)	sockets_actual	connection	obuffer,,xi	a	TCP_PSH,,xi
  :                            40 
  :                            41 	$endif
  :                            42 
00:0000AF  E60092              +43 	jna	sweep_sockets
00:0000B0  C60092              +44 	jza	sweep_sockets
00:0000B1  17F001              +45 	inc	tally_response
00:0000B2  B60092              +46 	j	sweep_sockets
  :                            47 
  :                            48 remote_closed
00:0000B3  CE00BA              +49 	jzb	sweep_exit	. no data + no connection
  :                            50 				. = all traffic this port has been read
  :                            51 
00:0000B4  F8F003              +52 	c	(hvsocket_close)	sockets_actual	connection
00:0000B5  F8F007              +52 
00:0000B6  FCF002              +52 
00:0000B7  FF02C6              +52 
00:0000B8  38000F              +52 
  :                            53 
  :                            54 				. connection readout zero = connection remote close
  :                            55 				. listening-type application responds by closing
  :                            56 				. this one connection
  :                            57 
00:0000B9  B60092              +58 	j	sweep_sockets
  :                            59 
  :                            60 sweep_exit
  :                            61 	$if	0
  :                            62 	lb	accumulate
  :                            63 	jzb	sweep_exitz	. no traffic
  :                            64 	la	0,,xi
  :                            65 	da	payload_segments
  :                            66 	ds	payload_segments
  :                            67 	lb	tally_response
  :                            68 	la	0,,xi
  :                            69 	da	payload_response
  :                            70 	ds	payload_response
  :                            71 	$endif
  :                            72 
  :                            73 sweep_exitz
00:0000BA  FCE0C8              +74 	push	600/3,fp,i
00:0000BB  38000E              +75 	pop	fp
00:0000BC  870004              +76 	qpop	a		. return the receive interim count
  :                            77 				. and the responses interim count
00:0000BD  350000              +78 	lret	0
  :                            117: 	$include	summary
  :                            1 
  :                            2 	$if	RX_THREADS>1
  :                            3 
                                summarise	$head_near	 params(payload_bulletins,	long)	;
                                									;
00:0000BE  9F02C7              +6 				scalars(total_responses,	long	)
  :                            7 
00:0000BF  CF302E              +8 	dl	total_tx(RX_THREADS)
00:0000C0  D73020              +9 ?	$do	RX_THREADS-1,	da	total_tx(?)
00:0000C1  D73022              +9 
00:0000C2  D73024              +9 
00:0000C3  D73026              +9 
00:0000C4  D73028              +9 
00:0000C5  D7302A              +9 
00:0000C6  D7302C              +9 
00:0000C7  C7F000              +10 	ds	total_responses
  :                            11 
00:0000C8  CF301E              +12 	dl	total_rx(RX_THREADS)
00:0000C9  D73010              +13 ?	$do	RX_THREADS-1,	da	total_rx(?)
00:0000CA  D73012              +13 
00:0000CB  D73014              +13 
00:0000CC  D73016              +13 
00:0000CD  D73018              +13 
00:0000CE  D7301A              +13 
00:0000CF  D7301C              +13 
  :                            14 
00:0000D0  9FF000              +15 	printf	$3("rx + %ld > %ld tx %ld responses":LF:0),,xi	payload_bulletins,,long	a,,long	total_responses,,long
00:0000D1  9F0004              +15 
00:0000D2  9FF008              +15 
00:0000D3  FD3168              +15 
00:0000D4  FD0001              +15 
00:0000D5  FCF008              +15 
00:0000D6  FF02C9              +15 
00:0000D7  38000F              +15 
  :                            16 
00:0000D8  FCF002              +17 	$ret
00:0000D9  38000F              +17 
00:0000DA  350000              +17 
  :                            18 
  :                            19 	$else
  :                            20 
  :                            21 summarise
  :                            22 	dl	payload_segments
  :                            23 	jdz	summarised
  :                            24 
  :                            25 	da	total_rx
  :                            26 	ds	total_rx
  :                            27 
  :                            28 	printf	$3("rx + %ld > %ld tx %ld responses":LF:0),,xi	payload_bulletins,,long	a,,long	payload_response,,long
  :                            29 
  :                            30 	dsr	48
  :                            31 	ds	payload_segments
  :                            32 
  :                            33 summarised
  :                            34 	lret	0
  :                            35 
  :                            36 	$endif
  :                            118 	$list
  :                            119 
  :                            120 
  :                            121 .	thread for interactive commands
  :                            122 
  :                            123 $(3)
  :                            124 respo	$res	72/3
  :                            125 
03:003134  000000              +126 fields	0
03:003135  000000 000000        +127 request		0L
  :                            128 
  :                            129 arguments
03:003137  000000              +130 argument1	0
03:003138  000000              +131 argument2	0
03:003139  000000              +132 port_id_temp	0
  :                            133 
  :                            134 $(0)
  :                            135 control_plane
00:0000DB  FD3173              +136 	printf	$3("proto>":0),,xi
00:0000DC  FD0001              +136 
00:0000DD  FCF002              +136 
00:0000DE  FF02C9              +136 
00:0000DF  38000F              +136 
00:0000E0  FD0001              +137 	fflush	stdout
00:0000E1  FCF001              +137 
00:0000E2  FF02CA              +137 
00:0000E3  38000F              +137 
  :                            138 
00:0000E4  FD0048              +139 	fgets	respo,,xi	72,,xi	stdin
00:0000E5  FD311C              +139 
00:0000E6  FD0000              +139 
00:0000E7  FCF003              +139 
00:0000E8  FF02CB              +139 
00:0000E9  38000F              +139 
00:0000EA  160018              +139 
00:0000EB  1D0018              +139 
00:0000EC  EE00EF              +139 
00:0000ED  CE00EF              +139 
00:0000EE  65311C              +139 
00:0000EF  FD3138              +140 	sscanf	respo,,xi	$3("%s %d %d":0),,xi	request,,xi	argument1,,xi	argument2,,xi
00:0000F0  FD3137              +140 
00:0000F1  FD3135              +140 
00:0000F2  FD3176              +140 
00:0000F3  FD311C              +140 
00:0000F4  FCF005              +140 
00:0000F5  FF02CC              +140 
00:0000F6  38000F              +140 
00:0000F7  203134              +141 	sa	fields
00:0000F8  C600DB              +142 	jza	control_plane
00:0000F9  E60142              +143 	jna	problem
  :                            144 
00:0000FA  550004              +145 	lookup	request		range, walk, state, @eof
00:0000FB  85FFFF              +145 
00:0000FC  60A2D5              +145 
00:0000FD  CFC000              +145 
00:0000FE  DF3135              +145 
00:0000FF  900005              +145 
00:000100  68A2D9              +145 
00:000101  C6D000              +145 
00:000102  700002              +145 
00:000103  B600FB              +145 
00:000104  FD3179              +146 	prompt	range, walk, state, @eof
00:000105  FD0001              +146 
00:000106  FCF002              +146 
00:000107  FF02C9              +146 
00:000108  38000F              +146 
00:000109  450004              +146 
00:00010A  550000              +146 
00:00010B  F8A2DD              +146 
00:00010C  FD3187              +146 
00:00010D  FD0001              +146 
00:00010E  FCF003              +146 
00:00010F  FF02C9              +146 
00:000110  38000F              +146 
00:000111  850001              +146 
00:000112  F60114              +146 
00:000113  B6010B              +146 
00:000114  FD3189              +146 
00:000115  FD0001              +146 
00:000116  FCF002              +146 
00:000117  FF02C9              +146 
00:000118  38000F              +146 
00:000119  B600DB              +147 	j	control_plane
  :                            148 
00:00011A  603134              +149 range	la	fields
00:00011B  C5FFFD              +150 	aa	-3,,xi
00:00011C  5E012A              +151 	jnc	too_few
00:00011D  603137              +152 	la	argument1
00:00011E  C5F400              +153 	aa	-3072,,xi
00:00011F  5E0130              +154 	jnc	too_low
00:000120  603138              +155 	la	argument2
00:000121  680004              +156 	anu	argument1
00:000122  D83137              +156 
00:000123  EE0136              +157 	jnb	too_bad
00:000124  680004              +158 	anu	(65536)
00:000125  D802E1              +158 
00:000126  AE013C              +159 	jpb	too_high
00:000127  CF3137              +160 	dl	arguments
00:000128  C7F000              +161 	ds	sockets
00:000129  B600DB              +162 	j	control_plane
  :                            163 
00:00012A  FD318A              +164 too_few	printf	$3("walk FROM TO within [ 3072..65535 ]":LF:0),,xi
00:00012B  FD0001              +164 
00:00012C  FCF002              +164 
00:00012D  FF02C9              +164 
00:00012E  38000F              +164 
00:00012F  B600DB              +165 	j	control_plane
00:000130  FD3197              +166 too_low	printf	$3("1st port number may not be < 3072":LF:0),,xi
00:000131  FD0001              +166 
00:000132  FCF002              +166 
00:000133  FF02C9              +166 
00:000134  38000F              +166 
00:000135  B600DB              +167 	j	control_plane
00:000136  FD31A3              +168 too_bad	printf	$3("2nd port number may not be < 1st":LF:0),,xi
00:000137  FD0001              +168 
00:000138  FCF002              +168 
00:000139  FF02C9              +168 
00:00013A  38000F              +168 
00:00013B  B600DB              +169 	j	control_plane
  :                            170 too_high
00:00013C  FD31AF              +171 	printf	$3("2nd port number may not be > 65535":LF:0),,xi
00:00013D  FD0001              +171 
00:00013E  FCF002              +171 
00:00013F  FF02C9              +171 
00:000140  38000F              +171 
00:000141  B600DB              +172 	j	control_plane
  :                            173 
  :                            174 problem
00:000142  F80004              +175 	printf	$3("stdin pipe broken status %d control plane exit":LF:0),,xi	a
00:000143  FD31BB              +175 
00:000144  FD0001              +175 
00:000145  FCF003              +175 
00:000146  FF02C9              +175 
00:000147  38000F              +175 
00:000148  FD0001              +176 	fflush	stdout
00:000149  FCF001              +176 
00:00014A  FF02CA              +176 
00:00014B  38000F              +176 
00:00014C  B60175              +177 	j	@eof1
  :                            178 
00:00014D  552800              +179 walk	lx	10240,,xi
00:00014E  103139              +180 	sx	port_id_temp				. cursor
  :                            181 
00:00014F  454740              +182 walk1	lr	10240+PORTS,,xi				. limit pointer
00:000150  F6016B              +183 	jxge	walk_out				. arrived?
00:000151  173139              +184 	inc	port_id_temp				. cursor++
  :                            185 
00:000152  600002              +186 	la	x
00:000153  FF02E2              +187 	call	(connection_array)
00:000154  B60169              +188 	j	walk_on					. not a socket array / not primed
  :                            189 
00:000155  5802E3              +190 	ly	(BSOCKET*/12++tlist:chain(1))		. address of address in chain head 1
00:000156  44B020              +191 	lr	CHAINS, y, i				. limits pointer + chain heads
  :                            192 
00:000157  500003              +193 walk_up	lx	y					. hand address of address
00:000158  B60163              +194 	j	walk_in					. to traverse 1st chain
  :                            195 
  :                            196 walk_test
00:000159  70A014              +197 	tz	transmission:q4window.head
00:00015A  3E0176              +198 	lcal	segment_pending		. ->	segment_waiting	$3("UNTRANSMITTED":0),,xi q4window
00:00015B  70A016              +199 	tz	transmission:q4ack.head
00:00015C  3E017C              +200 	lcal	segment_waiting_ack	. ->	segment_waiting	$3("awaiting TCP_ACK":0),,xi q4ack
  :                            201 
00:00015D  60A001              +202 	la	transmission:state
00:00015E  C5FFFB              +203 	aa	-TCP_ESTABLISHED,,xi
00:00015F  C60163              +204 	jza	walk_in
00:000160  C5FFFD              +205 	aa	TCP_ESTABLISHED-TCP_CLOSEWAIT,,xi
00:000161  C60163              +206 	jza	walk_in
00:000162  3E0216              +207 	lcal	display_connection
00:000163  50A000              +208 walk_in	lx	transmission:next
00:000164  700002              +209 	tz	x					. pointing to anything?
00:000165  B60159              +210 	j	walk_test				. yes, examine that
00:000166  8D0001              +211 	ay	1,,xi					. no, next chain head
00:000167  FE0169              +212 	jyge	walk_on					. + CHAINS chain heads?
00:000168  B60157              +213 	j	walk_up					. no, next chain
  :                            214 							. yes
00:000169  503139              +215 walk_on	lx	port_id_temp				. cursor already incremented
00:00016A  B6014F              +216 	j	walk1					. next port
  :                            217 
  :                            218 walk_out
00:00016B  B600DB              +219 	j	control_plane
  :                            220 
00:00016C  FD4740              +221 state	lc	states	10240,,xi	10240+PORTS,,xi
00:00016D  FD2800              +221 
00:00016E  FCF002              +221 
00:00016F  3E01DD              +221 
00:000170  38000F              +221 
00:000171  B600DB              +222 	j	control_plane
  :                            223 	
00:000172  054000              +224 @eof	on	see$1					. @eof at terminal ->
00:000173  601002              +225 	la	WALKUP					. take proto process down
00:000174  75007C              +226 	ii	$ZETA
  :                            227 
00:000175  3D0000              +228 @eof1	fret	0					. contingency error ->
  :                            229 							. just take this thread down
  :                            230 							. proto control plane
  :                            231 
  :                            232 segment_pending
00:000176  F8A014              +233 	lc	segment_waiting	$3("UNTRANSMITTED":0),,xi	transmission:q4window:head
00:000177  FD31CB              +233 
00:000178  FCF002              +233 
00:000179  3E0182              +233 
00:00017A  38000F              +233 
00:00017B  350000              +234 	lret	0
  :                            235 
  :                            236 segment_waiting_ack
00:00017C  F8A016              +237 	lc	segment_waiting	$3("awaiting TCP_ACK":0),,xi	transmission:q4ack:head
00:00017D  FD31D0              +237 
00:00017E  FCF002              +237 
00:00017F  3E0182              +237 
00:000180  38000F              +237 
00:000181  350000              +238 	lret	0
  :                            239 
  :                            240 segment_waiting	$tree
                                	$head_near	 params(reason_p,	int		;
                                				q_p,		int	)	;
                                								;
                                			scalars(save_rkxy,	float,	r	;
00:000182  8F0000              +245 				save_bsocket,	int		)
00:000183  FD0000              +245 
  :                            246 
00:000184  054000              +247 	on	see$1
00:000185  60106F              +248 	la	ABT+BSOCKET
00:000186  0D4000              +249 	off	see$1
00:000187  20F000              +250 	sa	save_bsocket
  :                            251 	
                                	printf	$3("":LF:"connection %x:%x has segment[s] %s":LF:0),,xi	save_bsocket	;
                                									x		;
00:000188  F8F007              +254 									reason_p
00:000189  F80002              +254 
00:00018A  F8F002              +254 
00:00018B  FD31D6              +254 
00:00018C  FD0001              +254 
00:00018D  FCF005              +254 
00:00018E  FF02C9              +254 
00:00018F  38000F              +254 
00:000190  60F000              +255 	la	save_bsocket
00:000191  34002F              +256 	sabr	BSOCKET
  :                            257 
00:000192  F8F008              +258 	lc	display_segment	q_p
00:000193  FCF001              +258 
00:000194  3E0242              +258 
00:000195  38000F              +258 
00:000196  50F003              +259 	lx	save_rkxy+2
00:000197  3E0216              +260 	lcal	display_connection
  :                            261 
00:000198  380004              +262 	pop	a
00:000199  870000              +263 	qpop	r
  :                            264 
00:00019A  350000              +265 	lret	0
  :                            266 	$root
  :                            267 
  :                            268 	$list		2
  :                            269: 	$do	ROTARY,	$include	../proton.app/rxrotary
  :                            1 
  :                            2 RXROTARY_OVERSTEP $equ	0
  :                            3 
  :                            4 $(66::,sp)
42:000000                     +5 sockets	$socket_array
42:000001                     +5 
42:000002                     +5 
42:000003                     +5 
42:000004                     +5 
  :                            6 
  :                            7 $(0)
  :                            8 rx_thread
                                	$head_near	scalars(total_rxp,	int,	a	;
                                				payloadsegs,	long		;
                                				response_segs,	long		;
00:00019B  F80004              +12 				sox,		6		)
00:00019C  9F02C7              +12 
00:00019D  9F02C7              +12 
00:00019E  FD0000              +12 
00:00019F  FD0000              +12 
00:0001A0  8F02E4              +12 
  :                            13 
  :                            14 TOTAL_RX	$equf	RX_THREADS*2, x
  :                            15 TOTAL_TX	$equf	RX_THREADS*2*2, x
  :                            16 
00:0001A1  20F00A              +17 	sa	total_rxp
  :                            18 
00:0001A2  CFC000              +19 	dl	0, a			. param -> start of struc aocket_array	
00:0001A3  C7F000              +20 	ds	sockets:first
00:0001A4  20F002              +21 	sa	sockets:actual
00:0001A5  D80004              +22 	anb	a			. limit - 1st
  :                            23 	$do	RXROTARY_OVERSTEP^=0,	ab	RXROTARY_OVERSTEP,,xi
00:0001A6  28F003              +24 	sb	sockets:span
00:0001A7  28F004              +25 	sb	sockets:span_restart
  :                            26 
00:0001A8  FD0000              +27 	c	(hvsocket_xbind)	sockets:first	sockets:limit	0,,xi
00:0001A9  F8F002              +27 
00:0001AA  F8F002              +27 
00:0001AB  FCF003              +27 
00:0001AC  FF02E8              +27 
00:0001AD  38000F              +27 
  :                            28 
00:0001AE  650020              +29 	la	ACTIVATE,,xi
00:0001AF  75005C              +30 	ii	EVENT_WAIT$		. up to here is inital
  :                            31 					. and from here is process loop
00:0001B0  F8F002              +32 next	lc	socket_respond	sockets:actual
00:0001B1  FCF001              +32 
00:0001B2  3E008C              +32 
00:0001B3  38000F              +32 
00:0001B4  C601BF              +33 	jza	forward
  :                            34 
  :                            35 	$if	total_tx()
00:0001B5  200006              +36 	sa	6
00:0001B6  650000              +37 	la	0,,xi
00:0001B7  D7F006              +38 	da	response_segs
00:0001B8  C7F006              +39 	ds	response_segs
00:0001B9  600006              +40 	la	6
  :                            41 	$endif
  :                            42 
00:0001BA  160018              +43 	dsr	24
00:0001BB  D7F008              +44 	da	payloadsegs
00:0001BC  C7F008              +45 	ds	payloadsegs
  :                            46 
00:0001BD  60F004              +47 	la	sockets:span_restart	. + results so circulate
00:0001BE  20F003              +48 	sa	sockets:span		. at least to here before chilling
  :                            49 
00:0001BF  50F002              +50 forward	lx	sockets:actual
00:0001C0  850001              +51 	ax	1,,xi
00:0001C1  40F001              +52 	lr	sockets:limit
00:0001C2  F601C4              +53 	jxl	span?
00:0001C3  B601C5              +53 
  :                            54 
00:0001C4  50F000              +55 	lx	sockets:first		. restart table pointer
  :                            56 	
00:0001C5  10F002              +57 span?	sx	sockets:actual		. completely circled + a few slots
00:0001C6  1FF003              +58 	dec	sockets:span		. without + results?
00:0001C7  70F003              +59 	tz	sockets:span	
00:0001C8  B601B0              +60 	j	next			. no
  :                            61 
  :                            62 	$if	RX_THREADS>1
00:0001C9  CFF008              +63 	dl	payloadsegs
00:0001CA  7C01D8              +64 	jdz	quiet
00:0001CB  50F00A              +65 	lx	total_rxp
00:0001CC  D7A010              +66 	da	TOTAL_RX
00:0001CD  C7A010              +67 	ds	TOTAL_RX
  :                            68 
  :                            69 	$if	total_tx()
00:0001CE  CFF006              +70 	dl	response_segs
00:0001CF  D7A020              +71 	da	TOTAL_TX
00:0001D0  C7A020              +72 	ds	TOTAL_TX
  :                            73 	$endif
  :                            74 
00:0001D1  9FF008              +75 	lc	summarise	payloadsegs,,long
00:0001D2  FCF002              +75 
00:0001D3  3E00BE              +75 
00:0001D4  38000F              +75 
  :                            76 
00:0001D5  160030              +77 	dsr	48
00:0001D6  C7F008              +78 	ds	payloadsegs
00:0001D7  C7F006              +79 	ds	response_segs
  :                            80 
  :                            81 	$else	
  :                            82 	lcal	summarise
  :                            83 	$endif
  :                            84 
00:0001D8  CF02E9              +85 quiet	dl	(ACTIVATE++TIME_WAIT, 50d)		. yes
00:0001D9  75005C              +86 	ii	EVENT_WAIT$
00:0001DA  60F004              +87 	la	sockets:span_restart
00:0001DB  20F003              +88 	sa	sockets:span
00:0001DC  B601B0              +89 	j	next
  :                            270: 	$include	../proton.app/states
  :                            1 	$if	0
  :                            2 
  :                            3 	these are the states
  :                            4 	____________________
  :                            5 
  :                            6 	static char	*category[] = { "zero",
  :                            7                                         "closed",
  :                            8                                         "listen",
  :                            9                                         "synsent",
  :                            10                                         "synreceived",
  :                            11                                         "established",
  :                            12                                         "finwait1",
  :                            13                                         "finwait2",
  :                            14                                         "closewait",
  :                            15                                         "lastack",
  :                            16                                         "closing",
  :                            17                                         "timewait",
  :                            18                                         "deletetcb",
                                                                        "out of range" } ;
  :                            20 
	and this is how to report them
  :                            21 	______________________________
  :                            22 
                                         for (x = 0; x < 14; x++) tcb_states.bucket[x] = 0;
                                
         y = established;
                                         sscanf(request + 1, "%d", &y);
                                         q = demand;
  :                            27 
         while (y--)
  :                            28          {
                                            x = q->state;
                                            if (x > 13) x = 13;
                                            tcb_states.bucket[x]++;
                                            q++;
  :                            33          }
  :                            34 
                                         for (x = 0; x < 14; x++)
  :                            36          {
                                            if (tcb_states.bucket[x]) printf("%d %s\n", tcb_states.bucket[x], category[x]);
  :                            38          }
  :                            39 
  :                            40          if (payload_segments)
  :                            41          {
                                            printf("payload segments %lld payload %lld\n", payload_segments, payload);
  :                            43          }
  :                            44 
  :                            45 	$endif
  :                            46 
  :                            47 states	$tree
  :                            48 
  :                            49 $(3)
  :                            50 
  :                            51 bucket	$res	14
  :                            52 
  :                            53 $(0)
  :                            54 
                                	$head_near	 params(first_port,	int	;
                                				limit_port,	int)	;
                                							;
00:0001DD  FD0000              +58 			scalars(index,	int		)
  :                            59 
00:0001DE  160030              +60 	dsr	48
00:0001DF  C7313A              +61 ?	$do	14/2,	ds	bucket+?*2-2
00:0001E0  C7313C              +61 
00:0001E1  C7313E              +61 
00:0001E2  C73140              +61 
00:0001E3  C73142              +61 
00:0001E4  C73144              +61 
00:0001E5  C73146              +61 
  :                            62 
00:0001E6  50F003              +63 next	lx	first_port
00:0001E7  17F003              +64 	inc	first_port
00:0001E8  40F004              +65 	lr	limit_port
00:0001E9  F601FB              +66 	jxge	all_states_counted
  :                            67 
00:0001EA  600002              +68 	la	x
00:0001EB  FF02E2              +69 	call	(connection_array)
00:0001EC  B601E6              +70 	j	next			. wrong sort of connection table
  :                            71 
00:0001ED  5002EB              +72 	lx	(BSOCKET*/18++tlist:connection_block(2)s)
  :                            73 
  :                            74 connection
00:0001EE  4082EC              +75 	lr	*(+(BSOCKET*/18++tlist:top)s)
00:0001EF  F601E6              +76 	jxge	next			. next port
  :                            77 
00:0001F0  58A001              +78 	ly	transmission:state
00:0001F1  780003              +79 	tp	y			. can momentarily be inverted
00:0001F2  0F0003              +80 	n	y			. when transitioning to close
00:0001F3  45000E              +81 	lr	14,,xi			. saturation point+ = nonsense
00:0001F4  FE01F6              +82 	jyl	in_range
00:0001F5  B601F7              +82 
00:0001F6  5D000D              +83 	ly	14-1,,xi
  :                            84 
  :                            85 in_range
00:0001F7  8D313A              +86 	ay	bucket,,xi
00:0001F8  17B000              +87 	inc	0, y			. count[state]++
  :                            88 
00:0001F9  850018              +89 	ax	24,,xi			. next connection
00:0001FA  B601EE              +90 	j	connection
  :                            91 
  :                            92 all_states_counted
00:0001FB  50F000              +93 	lx	index
00:0001FC  17F000              +94 	inc	index
00:0001FD  45000E              +95 	lr	14,,xi
00:0001FE  F6020B              +96 	jxge	all_states_reported
00:0001FF  580002              +97 	ly	x
00:000200  85313A              +98 	ax	bucket,,xi
00:000201  60A000              +99 	la	0, x
00:000202  C601FB              +100 	jza	all_states_counted
  :                            101 
                                	printf	$3("%d %s":LF:0),,xi	a	(names	zero	closed 		;
                                							listen	synsent		;
                                							synreceived established	;
                                							finwait1 finwait2	;
                                							closewait lastack	;
                                							closing	timewait	;
00:000203  F8B2ED              +108 							delete_tcb out_of_range), y
00:000204  F80004              +108 
00:000205  FD3212              +108 
00:000206  FD0001              +108 
00:000207  FCF004              +108 
00:000208  FF02C9              +108 
00:000209  38000F              +108 
00:00020A  B601FB              +109 	j	all_states_counted
  :                            110 
  :                            111 all_states_reported
00:00020B  CF3030              +112 	dl	payload_segments
00:00020C  7C0213              +113 	jdz	all_reported
  :                            114 
00:00020D  9F0004              +115 	printf	$3("%ld":LF:0),,xi	a,,long
00:00020E  FD3215              +115 
00:00020F  FD0001              +115 
00:000210  FCF004              +115 
00:000211  FF02C9              +115 
00:000212  38000F              +115 
  :                            116 
  :                            117 all_reported
00:000213  FCF001              +118 	$ret
00:000214  38000F              +118 
00:000215  350000              +118 
  :                            119 
  :                            120 	$root
  :                            121 
  :                            271: 	$include	../proton.app/cdisplay
  :                            1 .	x -> connection block
  :                            2 
  :                            3 display_connection	$tree
00:000216  8F0000              +4 	qpush	r
  :                            5 
00:000217  65002F              +6 	la	BSOCKET,,xi
00:000218  750073              +7 	ii	A$IDX
00:000219  C60240              +8 	jza	quit
00:00021A  E60240              +9 	jna	quit
00:00021B  F80004              +10 	push	a		. because printf mostly changes BSOCKEZ
  :                            11 
00:00021C  58A001              +12 	ly	transmission:state
00:00021D  45000D              +13 	lr	13,,xi
00:00021E  FE0229              +14 	jyge	extra_state
  :                            15 
                                	printf	$3("":LF:"tcbloc %x:%x state %d %s":10:0),,xi		0, sp	x	y	;
                                				(names	none						;
                                				closed listen synsent synreceived established finwait1	;
00:00021F  F8B2FB              +19 				finwait2 closewait lastack closing timewait deletetcb), y
00:000220  F80003              +19 
00:000221  F80002              +19 
00:000222  F8F003              +19 
00:000223  FD321D              +19 
00:000224  FD0001              +19 
00:000225  FCF006              +19 
00:000226  FF02C9              +19 
00:000227  38000F              +19 
00:000228  B60231              +20 	j	reported
  :                            21 
  :                            22 extra_state
00:000229  F80003              +23 	printf	$3("tcbloc %x:%x state %d":10:0),,xi	0, sp	x	y
00:00022A  F80002              +23 
00:00022B  F8F002              +23 
00:00022C  FD3226              +23 
00:00022D  FD0001              +23 
00:00022E  FCF005              +23 
00:00022F  FF02C9              +23 
00:000230  38000F              +23 
  :                            24 
  :                            25 reported
00:000231  60F000              +26 	la	0, sp
00:000232  34002F              +27 	sabr	BSOCKET
00:000233  8FA014              +28 	printf	$3("%Lx":LF:"%Lx":LF:"%Lx":LF:0),,xi	0,x,float192	8,x,float192	16,x,float192
00:000234  8FA010              +28 
00:000235  8FA00C              +28 
00:000236  8FA008              +28 
00:000237  8FA004              +28 
00:000238  8FA000              +28 
00:000239  FD322E              +28 
00:00023A  FD0001              +28 
00:00023B  FCF01A              +28 
00:00023C  FF02C9              +28 
00:00023D  38000F              +28 
00:00023E  380004              +29 	pop	a
00:00023F  34002F              +30 	sabr	BSOCKET
  :                            31 
00:000240  870000              +32 quit	qpop	r
00:000241  350000              +33 	lret	0
  :                            34 
  :                            35 			$root
  :                            272: 	$include	../proton.app/sdisplay
  :                            1 
  :                            2 .	x -> descriptor [ structure acw ]
  :                            3 
  :                            4 display_segment	$tree
                                	$head_near	 params(qheadp,			int)	;
                                								;
                                			scalars(save_rkxy,	float,	r	;
00:000242  8F0000              +8 				save_bsocket,	int		)
00:000243  FD0000              +8 
  :                            9 
00:000244  65002F              +10 	la	BSOCKET,,xi
00:000245  750073              +11 	ii	A$IDX
  :                            12 
00:000246  20F000              +13 	sa	save_bsocket
00:000247  E6028B              +14 	jna	quit			. basing zero or C00001
00:000248  C6028B              +15 	jza	quit			. crashes you
  :                            16 
  :                            17 superpage	$equf	0, sp
  :                            18 caller_x	$equf	1+2, sp
  :                            19 
00:000249  F8F007              +20 next	printf	$3("":LF:"axw @ %x:%x":LF:0),,xi	a	qheadp
00:00024A  F80004              +20 
00:00024B  FD3233              +20 
00:00024C  FD0001              +20 
00:00024D  FCF004              +20 
00:00024E  FF02C9              +20 
00:00024F  38000F              +20 
  :                            21 
00:000250  60F000              +22 	la	save_bsocket		. printf closes window BSOCKET
00:000251  34002F              +23 	sabr	BSOCKET			. x -> this window
  :                            24 
00:000252  60F007              +25 	la	qheadp
                                	printf	$3("[%x:%x:%x:%x:%x:%x:%x:%x]":LF:0),,xi	0, a	1, a	2, a	3, a	;
00:000253  F8C007              +27 								4, a	5, a	6, a	7, a
00:000254  F8C006              +27 
00:000255  F8C005              +27 
00:000256  F8C004              +27 
00:000257  F8C003              +27 
00:000258  F8C002              +27 
00:000259  F8C001              +27 
00:00025A  F8C000              +27 
00:00025B  FD3238              +27 
00:00025C  FD0001              +27 
00:00025D  FCF00A              +27 
00:00025E  FF02C9              +27 
00:00025F  38000F              +27 
00:000260  60F000              +28 	la	save_bsocket
00:000261  34002F              +29 	sabr	BSOCKET
  :                            30 
00:000262  60F007              +31 	la	qheadp
00:000263  60C001              +32 	la	descriptor:frame, a
  :                            33 
                                	printf	$3("routing header":LF:;
                                		 "%x %x %x %x %x %x %x %x":LF:;
                                		 "%x %x %x %x %x %x %x %x":LF:"datagram":LF:0),,xi		;
                                		  0,a	  1,a	  2,a	  3,a	  4,a	  5,a	  6,a	  7,a	;
00:000264  F8C00F              +38 		8+0,a	8+1,a	8+2,a	8+3,a	8+4,a	8+5,a	8+6,a	8+7,a
00:000265  F8C00E              +38 
00:000266  F8C00D              +38 
00:000267  F8C00C              +38 
00:000268  F8C00B              +38 
00:000269  F8C00A              +38 
00:00026A  F8C009              +38 
00:00026B  F8C008              +38 
00:00026C  F8C007              +38 
00:00026D  F8C006              +38 
00:00026E  F8C005              +38 
00:00026F  F8C004              +38 
00:000270  F8C003              +38 
00:000271  F8C002              +38 
00:000272  F8C001              +38 
00:000273  F8C000              +38 
00:000274  FD3241              +38 
00:000275  FD0001              +38 
00:000276  FCF012              +38 
00:000277  FF02C9              +38 
00:000278  38000F              +38 
  :                            39 
00:000279  60F000              +40 	la	save_bsocket
00:00027A  34002F              +41 	sabr	BSOCKET
  :                            42 
00:00027B  50F007              +43 	lx	qheadp
00:00027C  50A004              +44 	lx	descriptor:dgram, x
00:00027D  68A001              +45 	lb	dgram:bytes, x
00:00027E  CDFFFF              +46 	ab	-1,,xi
00:00027F  AE0281              +47 	jpb	$+2
00:000280  6D0047              +48 	lb	72-1,,xi		. if the length is junk show 2 headings + 32 bytes			
00:000281  E80308              +49 	mf	(R24)			. 24-octet chunkarettes @ 2 octets per socket word
  :                            50 
00:000282  400004              +51 	lr	a			. chunkarettes - 1
  :                            52 
00:000283  3E028E              +53 get_in	lcal	tae_it			. subroutined out because freehand stack work
00:000284  60F000              +54 	la	save_bsocket		. does not mix with equated stack offsets
00:000285  34002F              +55 	sabr	BSOCKET			. get the connections / buffers page back
00:000286  1E0283              +56 	jdr	get_in
  :                            57 
00:000287  60F007              +58 	la	qheadp
00:000288  60C000              +59 	la	descriptor:next, a
00:000289  20F007              +60 	sa	qheadp
00:00028A  D60249              +61 	jnza	next
  :                            62 
00:00028B  380004              +63 quit	pop	a			. return page index[BSOCKET]
00:00028C  870000              +64 	qpop	r			. restore caller [ r k x y ] sp 4++
00:00028D  350000              +65 	lret	0			.
  :                            66 
00:00028E  F80000              +67 tae_it	push	r			. printf will mash r and x both
00:00028F  FCA00C              +68 	push	12, x, i		. next pointer = this pointer + 12 socket buffer words
[buy24_bytes][000000000000000000000000000000000000000000000072]
00:000290  64A006              +69 	printf	$3("%Lx":LF:0),,xi	0, x, buy24_bytes
00:000291  FF0309              +69 
00:000292  8F0004              +69 
00:000293  64A000              +69 
00:000294  FF0309              +69 
00:000295  8F0004              +69 
00:000296  FD325A              +69 
00:000297  FD0001              +69 
00:000298  FCF00A              +69 
00:000299  FF02C9              +69 
00:00029A  38000F              +69 
00:00029B  380002              +70 	pop	x			. next pointer -> x
00:00029C  380000              +71 	pop	r
00:00029D  350000              +72 	lret	0
  :                            73 
  :                            74 		$root
  :                            273 
  :                            274 	$do	$<256,$(0:256)
*EOF*
00:00029e+[0001]18:000000
00:00029f+00C000
00:0002a0+[0003]30:000000000000
00:0002a2+0001CD
00:0002a3+00019B00000000300000B800
00:0002a7+00019B00000000300200B400
00:0002ab+00019B00000000300400B000
00:0002af+00019B00000000300600AC00
00:0002b3+00019B00000000300800A800
00:0002b7+00019B00000000300A00A400
00:0002bb+00019B00000000300C00A000
00:0002bf+00019B00000000300E009C00
00:0002c3+000132
00:0002c4+0001A8
00:0002c5+000133
00:0002c6+000137
00:0002c7+000000000000
00:0002c9+0001DB
00:0002ca+0001D6
00:0002cb+0001E4
00:0002cc+0001D8
00:0002cd+72616E676500
00:0002cf+77616C6B0000
00:0002d1+737461746500
00:0002d3+40656F660000
00:0002d5+0002CD
0002CF
0002D1
0002D3
00:0002d9+00011A
00014D
00016C
000172
00:0002dd+00317F
003181
003183
003185
00:0002e1+010000
00:0002e2+000135
00:0002e3+02F008
00:0002e4+000000000000000000000000
00:0002e8+000136
00:0002e9+800020000032
00:0002eb+BC0040
00:0002ec+BC0002
00:0002ed+0031E3
0031E5
0031E8
0031EB
0031EE
0031F2
0031F6
0031F9
0031FC
003200
003203
003206
003209
00320D
00:0002fb+003217
0031E5
0031E8
0031EB
0031EE
0031F2
0031F6
0031F9
0031FC
003200
003203
003206
003219
00:000308+0AAAAB
00:000309+000116
03:003148+70726F746F5F727828312900
03:00314c+70726F746F5F727828322900
03:003150+70726F746F5F727828332900
03:003154+70726F746F5F727828342900
03:003158+70726F746F5F727828352900
03:00315c+70726F746F5F727828362900
03:003160+70726F746F5F727828372900
03:003164+70726F746F5F727828382900
03:003168+7278202B20256C64203E20256C6420747820256C64207265
73706F6E7365730A00
03:003173+70726F746F3E000000
03:003176+257320256420256400
03:003179+5B636F6D6D616E645F6E616D65735D000000
03:00317f+72616E676500
03:003181+77616C6B0000
03:003183+737461746500
03:003185+40656F660000
03:003187+202573000000
03:003189+0A0000
03:00318a+77616C6B2046524F4D20544F2077697468696E205B203330
37322E2E3635353335205D0A000000
03:003197+31737420706F7274206E756D626572206D6179206E6F7420
6265203C20333037320A0000
03:0031a3+326E6420706F7274206E756D626572206D6179206E6F7420
6265203C203173740A000000
03:0031af+326E6420706F7274206E756D626572206D6179206E6F7420
6265203E2036353533350A00
03:0031bb+737464696E20706970652062726F6B656E20737461747573
20256420636F6E74726F6C20706C616E6520657869740A00
03:0031cb+554E5452414E534D49545445440000
03:0031d0+6177616974696E67205443505F41434B0000
03:0031d6+0A636F6E6E656374696F6E2025783A257820686173207365
676D656E745B735D2025730A000000
03:0031e3+7A65726F0000
03:0031e5+636C6F736564000000
03:0031e8+6C697374656E000000
03:0031eb+73796E73656E740000
03:0031ee+73796E726563656976656400
03:0031f2+65737461626C697368656400
03:0031f6+66696E776169743100
03:0031f9+66696E776169743200
03:0031fc+636C6F736577616974000000
03:003200+6C61737461636B0000
03:003203+636C6F73696E670000
03:003206+74696D657761697400
03:003209+64656C6574655F7463620000
03:00320d+6F75745F6F665F72616E6765000000
03:003212+25642025730A000000
03:003215+256C640A0000
03:003217+6E6F6E650000
03:003219+64656C657465746362000000
03:00321d+0A7463626C6F632025783A25782073746174652025642025
730A00
03:003226+7463626C6F632025783A25782073746174652025640A0000
03:00322e+254C780A254C780A254C780A000000
03:003233+0A61787720402025783A25780A0000
03:003238+5B25783A25783A25783A25783A25783A25783A25783A2578
5D0A00
03:003241+726F7574696E67206865616465720A257820257820257820
25782025782025782025782025780A257820257820257820
25782025782025782025782025780A646174616772616D0A
000000
03:00325a+254C780A0000
:$(00):000000:00030A :$(01):001000:001000 :$(02):002000:003000 :$(03):003000:00325C :$(42):000000:000005 :$(43):000000:000058 :$(47):000000:00000A 
proto.msm: object code 8240 bytes: 0 errors: 4 undefined labels
