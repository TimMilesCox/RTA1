MASMX 7r3A Build 12
3/proto.msm
*EOF*
  :                            25 	$list
  :                            26 
  :                            27 RX_THREADS	$equ	8
  :                            28 PORTS	$equ	8000
  :                            29 DISTRO	$equ	PORTS/RX_THREADS
  :                            30 
  :                            31 	$set_option	"z"
  :                            32 
  :                            33 $(1:01000)
  :                            34 $(3:03000/$3)
  :                            35 
  :                            36 	$if	1
  :                            37 
03:003000  002800 002BE8        +38 ?	$do	RX_THREADS,supersockets(?)	+	10240+?*DISTRO-DISTRO, 10240+?*DISTRO:L
03:003002  002BE8 002FD0        +38 
03:003004  002FD0 0033B8        +38 
03:003006  0033B8 0037A0        +38 
03:003008  0037A0 003B88        +38 
03:00300A  003B88 003F70        +38 
03:00300C  003F70 004358        +38 
03:00300E  004358 004740        +38 
03:003010  000000 000000        +39 ?	$do	RX_THREADS,total_rx(?)	0L
03:003012  000000 000000        +39 
03:003014  000000 000000        +39 
03:003016  000000 000000        +39 
03:003018  000000 000000        +39 
03:00301A  000000 000000        +39 
03:00301C  000000 000000        +39 
03:00301E  000000 000000        +39 
03:003020  000000 000000        +40 ?	$do	RX_THREADS,total_tx(?)	0L
03:003022  000000 000000        +40 
03:003024  000000 000000        +40 
03:003026  000000 000000        +40 
03:003028  000000 000000        +40 
03:00302A  000000 000000        +40 
03:00302C  000000 000000        +40 
03:00302E  000000 000000        +40 
  :                            41 
  :                            42 	$else
  :                            43 
                                ?	$do	RX_THREADS,;
  :                            45 supersockets(?)	$socket_array	10240+?*DISTRO-DISTRO:10240+?*DISTRO
  :                            46 	$endif
  :                            47 
  :                            48 	$if	0	. moved to threads internal stacks
  :                            49 bytes	$res	1
  :                            50 connection $res	1
  :                            51 	$endif
  :                            52 
03:003030  000000 000000        +53 payload_segments 0L
03:003032  000000 000000        +54 payload_response 0L
  :                            55 .	total_rx	0L
  :                            56 obuffer	$res	20
  :                            57 idata	$res	600/3
03:003110  206179 652074 68616E 6B7320 796F6E 732061 776679 206E69
                              +58 response	" aye thanks yons awfy nice":10
03:003118  63650A              +58 
  :                            59 RESPONSE_BYTES	$equ	$bits/8
  :                            60 
03:003119  000000              +61 spring_page	0
03:00311A  000000              +62 rx_descriptor		0
03:00311B  000000              +63 actual		0
  :                            64 
  :                            65 $(66:0:0,x)
42:000000                     +66 transmission	tcp_connection
42:000001                     +66 
42:000002                     +66 
42:000003                     +66 
42:000004                     +66 
42:000005                     +66 
42:000006                     +66 
42:000008                     +66 
42:00000A                     +66 
42:00000C                     +66 
42:00000E                     +66 
42:000010                     +66 
42:000011                     +66 
42:000012                     +66 
42:000013                     +66 
42:000014                     +66 
42:000015                     +66 
42:000016                     +66 
42:000017                     +66 
  :                            67 
  :                            68 $(67:0:0,y)
43:000000                     +69 tlist		tbank
43:000001                     +69 
43:000002                     +69 
43:000003                     +69 
43:000004                     +69 
43:000005                     +69 
43:000006                     +69 
43:000007                     +69 
43:000008                     +69 
43:000009                     +69 
43:00000A                     +69 
43:00000B                     +69 
43:00000C                     +69 
43:00000D                     +69 
43:00000E                     +69 
43:00000F                     +69 
43:000010                     +69 
43:000011                     +69 
43:000012                     +69 
43:000013                     +69 
43:000014                     +69 
43:000015                     +69 
43:000016                     +69 
43:000017                     +69 
43:000018                     +69 
43:000019                     +69 
43:00001A                     +69 
43:00001B                     +69 
43:00001C                     +69 
43:00001D                     +69 
43:00001E                     +69 
43:00001F                     +69 
43:000020                     +69 
43:000021                     +69 
43:000022                     +69 
43:000023                     +69 
43:000024                     +69 
43:000025                     +69 
43:000026                     +69 
43:000027                     +69 
43:000028                     +69 
43:000029                     +69 
43:00002A                     +69 
43:00002B                     +69 
43:00002C                     +69 
43:00002D                     +69 
43:00002E                     +69 
43:000030                     +69 
43:000032                     +69 
43:000034                     +69 
43:000036                     +69 
43:000038                     +69 
43:000039                     +69 
43:00003A                     +69 
43:00003B                     +69 
43:00003C                     +69 
43:00003D                     +69 
43:00003E                     +69 
43:00003F                     +69 
43:000040                     +69 
43:000041                     +69 
43:000042                     +69 
43:000043                     +69 
43:000044                     +69 
43:000045                     +69 
43:000046                     +69 
43:000048                     +69 
43:00004A                     +69 
43:00004C                     +69 
43:00004E                     +69 
43:000050                     +69 
43:000051                     +69 
43:000052                     +69 
43:000053                     +69 
43:000054                     +69 
43:000055                     +69 
43:000056                     +69 
43:000057                     +69 
  :                            70 
  :                            71 $(70:0:0,fp)
  :                            72 descriptor	acw
  :                            73 
  :                            74 $(71:0:0,sp)
47:000000                     +75 dgram		datagram
47:000001                     +75 
47:000002                     +75 
47:000003                     +75 
47:000004                     +75 
47:000005                     +75 
47:000006                     +75 
47:000008                     +75 
  :                            76 
  :                            77 $(0:0/$0)
  :                            78 
  :                            79 ROTARY		$equ	1
  :                            80 
  :                            81 __BASE	$equ	PROTO_P
  :                            82 __PRIORITY $equ	5
  :                            83 
[+0001]18
[+0000]18*/30
00:000040  000050 000000 001000 000000
                              +84 	catalog
00:000044  4D0003              +84 
00:000045  000000              +84 
[+0002]30
00:000046  000000 000000        +84 
[+0000]18
[+0001]18*/48
00:000048  800040 000005 009000 FFFFFF 000000 000000 000050 000000
                              +84 
  :                            85 
                                	$base_d	$zenith(3)-03000	1024	1024	1024	1024	1024	1024	1024	1024	;
                                					1024	1024	1024	1024	1024	1024	1024	1024	;
                                					1024	1024	1024	1024	1024	1024	1024	1024	;
00:000050  60207F              +89 					1024	1024	1024	1024	1024	1024	1024	1024	1024	1024
00:000051  340003              +89 
00:000052  40207E              +89 
00:000053  6D0004              +89 
00:000054  54C001              +89 
00:000055  F6005A              +89 
00:000056  600002              +89 
00:000057  34D000              +89 
00:000058  6CD001              +89 
00:000059  B60054              +89 
00:00005A  600294              +89 
00:00005B  75007A              +89 
00:00005C  600295              +89 
00:00005D  20000E              +89 
  :                            90 
00:00005E  9F0296              +91 	c	(seg$load)	0,,xi	(proto_data:d),,long
00:00005F  FD0000              +91 
00:000060  FCF003              +91 
00:000061  FF0298              +91 
00:000062  38000F              +91 
  :                            92 
  :                            93 	$if	ROTARY
  :                            94 
  :                            95 uthread* $proc
  :                            96 	ql	(rx_thread,	0,	supersockets(?),	THREAD_FP(2+?)q)
  :                            97 	ii	THREAD$
  :                            98 
  :                            99 	$if	1
  :                            100 	lb	$3("proto_rx(":'0'+?///10:")":0),,xi
  :                            101 	$else
                                	lb	?-1+$0(names	proto_rx(1) proto_rx(2) proto_rx(3) proto_rx(4)	;
  :                            103 				proto_rx(5) proto_rx(6) proto_rx(7) proto_rx(8)	)
  :                            104 	$endif
  :                            105 
  :                            106 	ii	TAG$
  :                            107 
  :                            108 	$end
  :                            109 
00:000063  4F0299              +110 ?	$do	RX_THREADS,	uthread
00:000064  750047              +110 
00:000065  6D3148              +110 
00:000066  750049              +110 
00:000067  4F029D              +110 
00:000068  750047              +110 
00:000069  6D314C              +110 
00:00006A  750049              +110 
00:00006B  4F02A1              +110 
00:00006C  750047              +110 
00:00006D  6D3150              +110 
00:00006E  750049              +110 
00:00006F  4F02A5              +110 
00:000070  750047              +110 
00:000071  6D3154              +110 
00:000072  750049              +110 
00:000073  4F02A9              +110 
00:000074  750047              +110 
00:000075  6D3158              +110 
00:000076  750049              +110 
00:000077  4F02AD              +110 
00:000078  750047              +110 
00:000079  6D315C              +110 
00:00007A  750049              +110 
00:00007B  4F02B1              +110 
00:00007C  750047              +110 
00:00007D  6D3160              +110 
00:00007E  750049              +110 
00:00007F  4F02B5              +110 
00:000080  750047              +110 
00:000081  6D3164              +110 
00:000082  750049              +110 
  :                            111 
00:000083  B600D3              +112 	j	control_plane
  :                            113 
  :                            114 socket_respond
  :                            115 	$list	2
  :                            116: 	$include	respond
  :                            1 
                                	$head_near	 params(sockets_actual,	int		)	;
                                									;
                                			scalars(connection,	int			;
                                				bytes,		int			;
                                				tally_response,	int			;
                                				accumulate,	int		)	;
                                									;
00:000084  FD0000              +9 			 xframe(udata,	600/3				)
00:000085  FD0000              +9 
00:000086  FD0000              +9 
00:000087  FD0000              +9 
00:000088  FDFF38              +9 
00:000089  2F000E              +9 
  :                            10 			
  :                            11 sweep_sockets
00:00008A  FD0000              +12 	c	(hvsocket_rx)	sockets_actual	0,,xi	udata,,i	600,,xi	0,,xi
00:00008B  FD0258              +12 
00:00008C  FCE000              +12 
00:00008D  FD0000              +12 
00:00008E  F8F00A              +12 
00:00008F  FCF005              +12 
00:000090  FF02B9              +12 
00:000091  38000F              +12 
  :                            13 					.	connection wildcard		flags default
  :                            14 
00:000092  C7F002              +15 	ds	bytes		. and connection @ word bytes + 1
00:000093  C600AB              +16 	jza	remote_closed	. pipe drained
00:000094  E600B2              +17 	jna	sweep_exitz	. or bent
  :                            18 
00:000095  17F000              +19 	inc	accumulate
  :                            20 
  :                            21 	$if	0
  :                            22 
  :                            23 	c	(hvsocket_tx)	sockets_actual	connection	udata,,i	bytes	0,,xi
  :                            24 	jna	sweep_sockets
  :                            25 	jza	sweep_sockets
  :                            26 	c	(hvsocket_tx)	sockets_actual	connection	response,,xi	RESPONSE_BYTES,,xi	TCP_PSH,,xi
  :                            27 	
  :                            28 	$elseif	1
  :                            29 
00:000096  FD001B              +30 	c	(memcat)	udata,,i	bytes	response,,xi	RESPONSE_BYTES,,xi
00:000097  FD3110              +30 
00:000098  F8F004              +30 
00:000099  FCE000              +30 
00:00009A  FCF004              +30 
00:00009B  FF02BA              +30 
00:00009C  38000F              +30 
00:00009D  65001B              +31 	la	RESPONSE_BYTES,,xi
00:00009E  C0F002              +32 	aa	bytes
00:00009F  FD0008              +33 	c	(hvsocket_tx)	sockets_actual	connection	udata,,i	a	TCP_PSH,,xi
00:0000A0  F80004              +33 
00:0000A1  FCE000              +33 
00:0000A2  F8F006              +33 
00:0000A3  F8F00A              +33 
00:0000A4  FCF005              +33 
00:0000A5  FF02BB              +33 
00:0000A6  38000F              +33 
  :                            34 
  :                            35 	$else
  :                            36 
  :                            37         sprintf	obuffer,,xi	$3("%s %s":0),,xi	udata,,i	response,,xi
  :                            38 
  :                            39 	c	(hvsocket_tx)	sockets_actual	connection	obuffer,,xi	a	TCP_PSH,,xi
  :                            40 
  :                            41 	$endif
  :                            42 
00:0000A7  E6008A              +43 	jna	sweep_sockets
00:0000A8  C6008A              +44 	jza	sweep_sockets
00:0000A9  17F001              +45 	inc	tally_response
00:0000AA  B6008A              +46 	j	sweep_sockets
  :                            47 
  :                            48 remote_closed
00:0000AB  CE00B2              +49 	jzb	sweep_exit	. no data + no connection
  :                            50 				. = all traffic this port has been read
  :                            51 
00:0000AC  F8F003              +52 	c	(hvsocket_close)	sockets_actual	connection
00:0000AD  F8F007              +52 
00:0000AE  FCF002              +52 
00:0000AF  FF02BC              +52 
00:0000B0  38000F              +52 
  :                            53 
  :                            54 				. connection readout zero = connection remote close
  :                            55 				. listening-type application responds by closing
  :                            56 				. this one connection
  :                            57 
00:0000B1  B6008A              +58 	j	sweep_sockets
  :                            59 
  :                            60 sweep_exit
  :                            61 	$if	0
  :                            62 	lb	accumulate
  :                            63 	jzb	sweep_exitz	. no traffic
  :                            64 	la	0,,xi
  :                            65 	da	payload_segments
  :                            66 	ds	payload_segments
  :                            67 	lb	tally_response
  :                            68 	la	0,,xi
  :                            69 	da	payload_response
  :                            70 	ds	payload_response
  :                            71 	$endif
  :                            72 
  :                            73 sweep_exitz
00:0000B2  FCE0C8              +74 	push	600/3,fp,i
00:0000B3  38000E              +75 	pop	fp
00:0000B4  870004              +76 	qpop	a		. return the receive interim count
  :                            77 				. and the responses interim count
00:0000B5  350000              +78 	lret	0
  :                            117: 	$include	summary
  :                            1 
  :                            2 	$if	RX_THREADS>1
  :                            3 
                                summarise	$head_near	 params(payload_bulletins,	long)	;
                                									;
00:0000B6  9F02BD              +6 				scalars(total_responses,	long	)
  :                            7 
00:0000B7  CF302E              +8 	dl	total_tx(RX_THREADS)
00:0000B8  D73020              +9 ?	$do	RX_THREADS-1,	da	total_tx(?)
00:0000B9  D73022              +9 
00:0000BA  D73024              +9 
00:0000BB  D73026              +9 
00:0000BC  D73028              +9 
00:0000BD  D7302A              +9 
00:0000BE  D7302C              +9 
00:0000BF  C7F000              +10 	ds	total_responses
  :                            11 
00:0000C0  CF301E              +12 	dl	total_rx(RX_THREADS)
00:0000C1  D73010              +13 ?	$do	RX_THREADS-1,	da	total_rx(?)
00:0000C2  D73012              +13 
00:0000C3  D73014              +13 
00:0000C4  D73016              +13 
00:0000C5  D73018              +13 
00:0000C6  D7301A              +13 
00:0000C7  D7301C              +13 
  :                            14 
00:0000C8  9FF000              +15 	printf	$3("rx + %ld > %ld tx %ld responses":LF:0),,xi	payload_bulletins,,long	a,,long	total_responses,,long
00:0000C9  9F0004              +15 
00:0000CA  9FF008              +15 
00:0000CB  FD3168              +15 
00:0000CC  FD0001              +15 
00:0000CD  FCF008              +15 
00:0000CE  FF02BF              +15 
00:0000CF  38000F              +15 
  :                            16 
00:0000D0  FCF002              +17 	$ret
00:0000D1  38000F              +17 
00:0000D2  350000              +17 
  :                            18 
  :                            19 	$else
  :                            20 
  :                            21 summarise
  :                            22 	dl	payload_segments
  :                            23 	jdz	summarised
  :                            24 
  :                            25 	da	total_rx
  :                            26 	ds	total_rx
  :                            27 
  :                            28 	printf	$3("rx + %ld > %ld tx %ld responses":LF:0),,xi	payload_bulletins,,long	a,,long	payload_response,,long
  :                            29 
  :                            30 	dsr	48
  :                            31 	ds	payload_segments
  :                            32 
  :                            33 summarised
  :                            34 	lret	0
  :                            35 
  :                            36 	$endif
  :                            118 	$list
  :                            119 
  :                            120 
  :                            121 .	thread for interactive commands
  :                            122 
  :                            123 $(3)
  :                            124 respo	$res	72/3
  :                            125 
03:003134  000000              +126 fields	0
03:003135  000000 000000        +127 request		0L
  :                            128 
  :                            129 arguments
03:003137  000000              +130 argument1	0
03:003138  000000              +131 argument2	0
03:003139  000000              +132 port_id_temp	0
  :                            133 
  :                            134 $(0)
  :                            135 control_plane
00:0000D3  FD3173              +136 	printf	$3("proto>":0),,xi
00:0000D4  FD0001              +136 
00:0000D5  FCF002              +136 
00:0000D6  FF02BF              +136 
00:0000D7  38000F              +136 
00:0000D8  FD0001              +137 	fflush	stdout
00:0000D9  FCF001              +137 
00:0000DA  FF02C0              +137 
00:0000DB  38000F              +137 
  :                            138 
00:0000DC  FD0048              +139 	fgets	respo,,xi	72,,xi	stdin
00:0000DD  FD311C              +139 
00:0000DE  FD0000              +139 
00:0000DF  FCF003              +139 
00:0000E0  FF02C1              +139 
00:0000E1  38000F              +139 
00:0000E2  160018              +139 
00:0000E3  1D0018              +139 
00:0000E4  EE00E7              +139 
00:0000E5  CE00E7              +139 
00:0000E6  65311C              +139 
00:0000E7  FD3138              +140 	sscanf	respo,,xi	$3("%s %d %d":0),,xi	request,,xi	argument1,,xi	argument2,,xi
00:0000E8  FD3137              +140 
00:0000E9  FD3135              +140 
00:0000EA  FD3176              +140 
00:0000EB  FD311C              +140 
00:0000EC  FCF005              +140 
00:0000ED  FF02C2              +140 
00:0000EE  38000F              +140 
00:0000EF  203134              +141 	sa	fields
00:0000F0  C600D3              +142 	jza	control_plane
00:0000F1  E6013A              +143 	jna	problem
  :                            144 
00:0000F2  550004              +145 	lookup	request		range, walk, state, @eof
00:0000F3  85FFFF              +145 
00:0000F4  60A2CB              +145 
00:0000F5  CFC000              +145 
00:0000F6  DF3135              +145 
00:0000F7  900005              +145 
00:0000F8  68A2CF              +145 
00:0000F9  C6D000              +145 
00:0000FA  700002              +145 
00:0000FB  B600F3              +145 
00:0000FC  FD3179              +146 	prompt	range, walk, state, @eof
00:0000FD  FD0001              +146 
00:0000FE  FCF002              +146 
00:0000FF  FF02BF              +146 
00:000100  38000F              +146 
00:000101  450004              +146 
00:000102  550000              +146 
00:000103  F8A2D3              +146 
00:000104  FD3187              +146 
00:000105  FD0001              +146 
00:000106  FCF003              +146 
00:000107  FF02BF              +146 
00:000108  38000F              +146 
00:000109  850001              +146 
00:00010A  F6010C              +146 
00:00010B  B60103              +146 
00:00010C  FD3189              +146 
00:00010D  FD0001              +146 
00:00010E  FCF002              +146 
00:00010F  FF02BF              +146 
00:000110  38000F              +146 
00:000111  B600D3              +147 	j	control_plane
  :                            148 
00:000112  603134              +149 range	la	fields
00:000113  C5FFFD              +150 	aa	-3,,xi
00:000114  5E0122              +151 	jnc	too_few
00:000115  603137              +152 	la	argument1
00:000116  C5F400              +153 	aa	-3072,,xi
00:000117  5E0128              +154 	jnc	too_low
00:000118  603138              +155 	la	argument2
00:000119  680004              +156 	anu	argument1
00:00011A  D83137              +156 
00:00011B  EE012E              +157 	jnb	too_bad
00:00011C  680004              +158 	anu	(65536)
00:00011D  D802D7              +158 
00:00011E  AE0134              +159 	jpb	too_high
00:00011F  CF3137              +160 	dl	arguments
00:000120  C7F000              +161 	ds	sockets
00:000121  B600D3              +162 	j	control_plane
  :                            163 
00:000122  FD318A              +164 too_few	printf	$3("walk FROM TO within [ 3072..65535 ]":LF:0),,xi
00:000123  FD0001              +164 
00:000124  FCF002              +164 
00:000125  FF02BF              +164 
00:000126  38000F              +164 
00:000127  B600D3              +165 	j	control_plane
00:000128  FD3197              +166 too_low	printf	$3("1st port number may not be < 3072":LF:0),,xi
00:000129  FD0001              +166 
00:00012A  FCF002              +166 
00:00012B  FF02BF              +166 
00:00012C  38000F              +166 
00:00012D  B600D3              +167 	j	control_plane
00:00012E  FD31A3              +168 too_bad	printf	$3("2nd port number may not be < 1st":LF:0),,xi
00:00012F  FD0001              +168 
00:000130  FCF002              +168 
00:000131  FF02BF              +168 
00:000132  38000F              +168 
00:000133  B600D3              +169 	j	control_plane
  :                            170 too_high
00:000134  FD31AF              +171 	printf	$3("2nd port number may not be > 65535":LF:0),,xi
00:000135  FD0001              +171 
00:000136  FCF002              +171 
00:000137  FF02BF              +171 
00:000138  38000F              +171 
00:000139  B600D3              +172 	j	control_plane
  :                            173 
  :                            174 problem
00:00013A  F80004              +175 	printf	$3("stdin pipe broken status %d control plane exit":LF:0),,xi	a
00:00013B  FD31BB              +175 
00:00013C  FD0001              +175 
00:00013D  FCF003              +175 
00:00013E  FF02BF              +175 
00:00013F  38000F              +175 
00:000140  FD0001              +176 	fflush	stdout
00:000141  FCF001              +176 
00:000142  FF02C0              +176 
00:000143  38000F              +176 
00:000144  B6016D              +177 	j	@eof1
  :                            178 
00:000145  552800              +179 walk	lx	10240,,xi
00:000146  103139              +180 	sx	port_id_temp				. cursor
  :                            181 
00:000147  454740              +182 walk1	lr	10240+PORTS,,xi				. limit pointer
00:000148  F60163              +183 	jxge	walk_out				. arrived?
00:000149  173139              +184 	inc	port_id_temp				. cursor++
  :                            185 
00:00014A  600002              +186 	la	x
00:00014B  FF02D8              +187 	call	(connection_array)
00:00014C  B60161              +188 	j	walk_on					. not a socket array / not primed
  :                            189 
00:00014D  5802D9              +190 	ly	(BSOCKET*/12++tlist:chain(1))		. address of address in chain head 1
00:00014E  44B020              +191 	lr	CHAINS, y, i				. limits pointer + chain heads
  :                            192 
00:00014F  500003              +193 walk_up	lx	y					. hand address of address
00:000150  B6015B              +194 	j	walk_in					. to traverse 1st chain
  :                            195 
  :                            196 walk_test
00:000151  70A014              +197 	tz	transmission:q4window.head
00:000152  3E016E              +198 	lcal	segment_pending		. ->	segment_waiting	$3("UNTRANSMITTED":0),,xi q4window
00:000153  70A016              +199 	tz	transmission:q4ack.head
00:000154  3E0174              +200 	lcal	segment_waiting_ack	. ->	segment_waiting	$3("awaiting TCP_ACK":0),,xi q4ack
  :                            201 
00:000155  60A001              +202 	la	transmission:state
00:000156  C5FFFB              +203 	aa	-TCP_ESTABLISHED,,xi
00:000157  C6015B              +204 	jza	walk_in
00:000158  C5FFFD              +205 	aa	TCP_ESTABLISHED-TCP_CLOSEWAIT,,xi
00:000159  C6015B              +206 	jza	walk_in
00:00015A  3E020C              +207 	lcal	display_connection
00:00015B  50A000              +208 walk_in	lx	transmission:next
00:00015C  700002              +209 	tz	x					. pointing to anything?
00:00015D  B60151              +210 	j	walk_test				. yes, examine that
00:00015E  8D0001              +211 	ay	1,,xi					. no, next chain head
00:00015F  FE0161              +212 	jyge	walk_on					. + CHAINS chain heads?
00:000160  B6014F              +213 	j	walk_up					. no, next chain
  :                            214 							. yes
00:000161  503139              +215 walk_on	lx	port_id_temp				. cursor already incremented
00:000162  B60147              +216 	j	walk1					. next port
  :                            217 
  :                            218 walk_out
00:000163  B600D3              +219 	j	control_plane
  :                            220 
00:000164  FD4740              +221 state	lc	states	10240,,xi	10240+PORTS,,xi
00:000165  FD2800              +221 
00:000166  FCF002              +221 
00:000167  3E01D3              +221 
00:000168  38000F              +221 
00:000169  B600D3              +222 	j	control_plane
  :                            223 	
00:00016A  054000              +224 @eof	on	see$1					. @eof at terminal ->
00:00016B  601002              +225 	la	WALKUP					. take proto process down
00:00016C  75007C              +226 	ii	$ZETA
  :                            227 
00:00016D  3D0000              +228 @eof1	fret	0					. contingency error ->
  :                            229 							. just take this thread down
  :                            230 							. proto control plane
  :                            231 
  :                            232 segment_pending
00:00016E  F8A014              +233 	lc	segment_waiting	$3("UNTRANSMITTED":0),,xi	transmission:q4window:head
00:00016F  FD31CB              +233 
00:000170  FCF002              +233 
00:000171  3E017A              +233 
00:000172  38000F              +233 
00:000173  350000              +234 	lret	0
  :                            235 
  :                            236 segment_waiting_ack
00:000174  F8A016              +237 	lc	segment_waiting	$3("awaiting TCP_ACK":0),,xi	transmission:q4ack:head
00:000175  FD31D0              +237 
00:000176  FCF002              +237 
00:000177  3E017A              +237 
00:000178  38000F              +237 
00:000179  350000              +238 	lret	0
  :                            239 
  :                            240 segment_waiting	$tree
                                	$head_near	 params(reason_p,	int		;
                                				q_p,		int	)	;
                                								;
                                			scalars(save_rkxy,	float,	r	;
00:00017A  8F0000              +245 				save_bsocket,	int		)
00:00017B  FD0000              +245 
  :                            246 
00:00017C  054000              +247 	on	see$1
00:00017D  60106F              +248 	la	ABT+BSOCKET
00:00017E  0D4000              +249 	off	see$1
00:00017F  20F000              +250 	sa	save_bsocket
  :                            251 	
                                	printf	$3("":LF:"connection %x:%x has segment[s] %s":LF:0),,xi	save_bsocket	;
                                									x		;
00:000180  F8F007              +254 									reason_p
00:000181  F80002              +254 
00:000182  F8F002              +254 
00:000183  FD31D6              +254 
00:000184  FD0001              +254 
00:000185  FCF005              +254 
00:000186  FF02BF              +254 
00:000187  38000F              +254 
00:000188  60F000              +255 	la	save_bsocket
00:000189  34002F              +256 	sabr	BSOCKET
  :                            257 
00:00018A  F8F008              +258 	lc	display_segment	q_p
00:00018B  FCF001              +258 
00:00018C  3E0238              +258 
00:00018D  38000F              +258 
00:00018E  50F003              +259 	lx	save_rkxy+2
00:00018F  3E020C              +260 	lcal	display_connection
  :                            261 
00:000190  380004              +262 	pop	a
00:000191  870000              +263 	qpop	r
  :                            264 
00:000192  350000              +265 	lret	0
  :                            266 	$root
  :                            267 
  :                            268 	$list		2
  :                            269: 	$do	ROTARY,	$include	../proton.app/rxrotary
  :                            1 
  :                            2 RXROTARY_OVERSTEP $equ	0
  :                            3 
  :                            4 $(66::,sp)
42:000000                     +5 sockets	$socket_array
42:000001                     +5 
42:000002                     +5 
42:000003                     +5 
42:000004                     +5 
  :                            6 
  :                            7 $(0)
  :                            8 rx_thread
                                	$head_near	scalars(total_rxp,	int,	a	;
                                				payloadsegs,	long		;
                                				response_segs,	long		;
00:000193  F80004              +12 				sox,		6		)
00:000194  9F02BD              +12 
00:000195  9F02BD              +12 
00:000196  8F02DA              +12 
00:000197  9FF000              +12 
  :                            13 
  :                            14 TOTAL_RX	$equf	RX_THREADS*2, x
  :                            15 TOTAL_TX	$equf	RX_THREADS*2*2, x
  :                            16 
  :                            17 .	sa	total_rxp
  :                            18 
00:000198  CFC000              +19 	dl	0, a			. param -> start of struc aocket_array	
00:000199  C7F000              +20 	ds	sockets:first
00:00019A  20F002              +21 	sa	sockets:actual
00:00019B  D80004              +22 	anb	a			. limit - 1st
  :                            23 	$do	RXROTARY_OVERSTEP^=0,	ab	RXROTARY_OVERSTEP,,xi
00:00019C  28F003              +24 	sb	sockets:span
00:00019D  28F004              +25 	sb	sockets:span_restart
  :                            26 
00:00019E  FD0000              +27 	c	(hvsocket_xbind)	sockets:first	sockets:limit	0,,xi
00:00019F  F8F002              +27 
00:0001A0  F8F002              +27 
00:0001A1  FCF003              +27 
00:0001A2  FF02DE              +27 
00:0001A3  38000F              +27 
  :                            28 
00:0001A4  650020              +29 	la	ACTIVATE,,xi
00:0001A5  75005C              +30 	ii	EVENT_WAIT$		. up to here is inital
  :                            31 					. and from here is process loop
00:0001A6  F8F002              +32 next	lc	socket_respond	sockets:actual
00:0001A7  FCF001              +32 
00:0001A8  3E0084              +32 
00:0001A9  38000F              +32 
00:0001AA  C601B5              +33 	jza	forward
  :                            34 
  :                            35 	$if	total_tx()
00:0001AB  200006              +36 	sa	6
00:0001AC  650000              +37 	la	0,,xi
00:0001AD  D7F006              +38 	da	response_segs
00:0001AE  C7F006              +39 	ds	response_segs
00:0001AF  600006              +40 	la	6
  :                            41 	$endif
  :                            42 
00:0001B0  160018              +43 	dsr	24
00:0001B1  D7F008              +44 	da	payloadsegs
00:0001B2  C7F008              +45 	ds	payloadsegs
  :                            46 
00:0001B3  60F004              +47 	la	sockets:span_restart	. + results so circulate
00:0001B4  20F003              +48 	sa	sockets:span		. at least to here before chilling
  :                            49 
00:0001B5  50F002              +50 forward	lx	sockets:actual
00:0001B6  850001              +51 	ax	1,,xi
00:0001B7  40F001              +52 	lr	sockets:limit
00:0001B8  F601BA              +53 	jxl	span?
00:0001B9  B601BB              +53 
  :                            54 
00:0001BA  50F000              +55 	lx	sockets:first		. restart table pointer
  :                            56 	
00:0001BB  10F002              +57 span?	sx	sockets:actual		. completely circled + a few slots
00:0001BC  1FF003              +58 	dec	sockets:span		. without + results?
00:0001BD  70F003              +59 	tz	sockets:span	
00:0001BE  B601A6              +60 	j	next			. no
  :                            61 
  :                            62 	$if	RX_THREADS>1
00:0001BF  CFF008              +63 	dl	payloadsegs
00:0001C0  7C01CE              +64 	jdz	quiet
00:0001C1  50F00A              +65 	lx	total_rxp
00:0001C2  D7A010              +66 	da	TOTAL_RX
00:0001C3  C7A010              +67 	ds	TOTAL_RX
  :                            68 
  :                            69 	$if	total_tx()
00:0001C4  CFF006              +70 	dl	response_segs
00:0001C5  D7A020              +71 	da	TOTAL_TX
00:0001C6  C7A020              +72 	ds	TOTAL_TX
  :                            73 	$endif
  :                            74 
00:0001C7  9FF008              +75 	lc	summarise	payloadsegs,,long
00:0001C8  FCF002              +75 
00:0001C9  3E00B6              +75 
00:0001CA  38000F              +75 
  :                            76 
00:0001CB  160030              +77 	dsr	48
00:0001CC  C7F008              +78 	ds	payloadsegs
00:0001CD  C7F006              +79 	ds	response_segs
  :                            80 
  :                            81 	$else	
  :                            82 	lcal	summarise
  :                            83 	$endif
  :                            84 
00:0001CE  CF02DF              +85 quiet	dl	(ACTIVATE++TIME_WAIT, 50d)		. yes
00:0001CF  75005C              +86 	ii	EVENT_WAIT$
00:0001D0  60F004              +87 	la	sockets:span_restart
00:0001D1  20F003              +88 	sa	sockets:span
00:0001D2  B601A6              +89 	j	next
  :                            270: 	$include	../proton.app/states
  :                            1 	$if	0
  :                            2 
  :                            3 	these are the states
  :                            4 	____________________
  :                            5 
  :                            6 	static char	*category[] = { "zero",
  :                            7                                         "closed",
  :                            8                                         "listen",
  :                            9                                         "synsent",
  :                            10                                         "synreceived",
  :                            11                                         "established",
  :                            12                                         "finwait1",
  :                            13                                         "finwait2",
  :                            14                                         "closewait",
  :                            15                                         "lastack",
  :                            16                                         "closing",
  :                            17                                         "timewait",
  :                            18                                         "deletetcb",
                                                                        "out of range" } ;
  :                            20 
	and this is how to report them
  :                            21 	______________________________
  :                            22 
                                         for (x = 0; x < 14; x++) tcb_states.bucket[x] = 0;
                                
         y = established;
                                         sscanf(request + 1, "%d", &y);
                                         q = demand;
  :                            27 
         while (y--)
  :                            28          {
                                            x = q->state;
                                            if (x > 13) x = 13;
                                            tcb_states.bucket[x]++;
                                            q++;
  :                            33          }
  :                            34 
                                         for (x = 0; x < 14; x++)
  :                            36          {
                                            if (tcb_states.bucket[x]) printf("%d %s\n", tcb_states.bucket[x], category[x]);
  :                            38          }
  :                            39 
  :                            40          if (payload_segments)
  :                            41          {
                                            printf("payload segments %lld payload %lld\n", payload_segments, payload);
  :                            43          }
  :                            44 
  :                            45 	$endif
  :                            46 
  :                            47 states	$tree
  :                            48 
  :                            49 $(3)
  :                            50 
  :                            51 bucket	$res	14
  :                            52 
  :                            53 $(0)
  :                            54 
                                	$head_near	 params(first_port,	int	;
                                				limit_port,	int)	;
                                							;
00:0001D3  FD0000              +58 			scalars(index,	int		)
  :                            59 
00:0001D4  160030              +60 	dsr	48
00:0001D5  C7313A              +61 ?	$do	14/2,	ds	bucket+?*2-2
00:0001D6  C7313C              +61 
00:0001D7  C7313E              +61 
00:0001D8  C73140              +61 
00:0001D9  C73142              +61 
00:0001DA  C73144              +61 
00:0001DB  C73146              +61 
  :                            62 
00:0001DC  50F003              +63 next	lx	first_port
00:0001DD  17F003              +64 	inc	first_port
00:0001DE  40F004              +65 	lr	limit_port
00:0001DF  F601F1              +66 	jxge	all_states_counted
  :                            67 
00:0001E0  600002              +68 	la	x
00:0001E1  FF02D8              +69 	call	(connection_array)
00:0001E2  B601DC              +70 	j	next			. wrong sort of connection table
  :                            71 
00:0001E3  5002E1              +72 	lx	(BSOCKET*/18++tlist:connection_block(2)s)
  :                            73 
  :                            74 connection
00:0001E4  4082E2              +75 	lr	*(+(BSOCKET*/18++tlist:top)s)
00:0001E5  F601DC              +76 	jxge	next			. next port
  :                            77 
00:0001E6  58A001              +78 	ly	transmission:state
00:0001E7  780003              +79 	tp	y			. can momentarily be inverted
00:0001E8  0F0003              +80 	n	y			. when transitioning to close
00:0001E9  45000E              +81 	lr	14,,xi			. saturation point+ = nonsense
00:0001EA  FE01EC              +82 	jyl	in_range
00:0001EB  B601ED              +82 
00:0001EC  5D000D              +83 	ly	14-1,,xi
  :                            84 
  :                            85 in_range
00:0001ED  8D313A              +86 	ay	bucket,,xi
00:0001EE  17B000              +87 	inc	0, y			. count[state]++
  :                            88 
00:0001EF  850018              +89 	ax	24,,xi			. next connection
00:0001F0  B601E4              +90 	j	connection
  :                            91 
  :                            92 all_states_counted
00:0001F1  50F000              +93 	lx	index
00:0001F2  17F000              +94 	inc	index
00:0001F3  45000E              +95 	lr	14,,xi
00:0001F4  F60201              +96 	jxge	all_states_reported
00:0001F5  580002              +97 	ly	x
00:0001F6  85313A              +98 	ax	bucket,,xi
00:0001F7  60A000              +99 	la	0, x
00:0001F8  C601F1              +100 	jza	all_states_counted
  :                            101 
                                	printf	$3("%d %s":LF:0),,xi	a	(names	zero	closed 		;
                                							listen	synsent		;
                                							synreceived established	;
                                							finwait1 finwait2	;
                                							closewait lastack	;
                                							closing	timewait	;
00:0001F9  F8B2E3              +108 							delete_tcb out_of_range), y
00:0001FA  F80004              +108 
00:0001FB  FD3212              +108 
00:0001FC  FD0001              +108 
00:0001FD  FCF004              +108 
00:0001FE  FF02BF              +108 
00:0001FF  38000F              +108 
00:000200  B601F1              +109 	j	all_states_counted
  :                            110 
  :                            111 all_states_reported
00:000201  CF3030              +112 	dl	payload_segments
00:000202  7C0209              +113 	jdz	all_reported
  :                            114 
00:000203  9F0004              +115 	printf	$3("%ld":LF:0),,xi	a,,long
00:000204  FD3215              +115 
00:000205  FD0001              +115 
00:000206  FCF004              +115 
00:000207  FF02BF              +115 
00:000208  38000F              +115 
  :                            116 
  :                            117 all_reported
00:000209  FCF001              +118 	$ret
00:00020A  38000F              +118 
00:00020B  350000              +118 
  :                            119 
  :                            120 	$root
  :                            121 
  :                            271: 	$include	../proton.app/cdisplay
  :                            1 .	x -> connection block
  :                            2 
  :                            3 display_connection	$tree
00:00020C  8F0000              +4 	qpush	r
  :                            5 
00:00020D  65002F              +6 	la	BSOCKET,,xi
00:00020E  750073              +7 	ii	A$IDX
00:00020F  C60236              +8 	jza	quit
00:000210  E60236              +9 	jna	quit
00:000211  F80004              +10 	push	a		. because printf mostly changes BSOCKEZ
  :                            11 
00:000212  58A001              +12 	ly	transmission:state
00:000213  45000D              +13 	lr	13,,xi
00:000214  FE021F              +14 	jyge	extra_state
  :                            15 
                                	printf	$3("":LF:"tcbloc %x:%x state %d %s":10:0),,xi		0, sp	x	y	;
                                				(names	none						;
                                				closed listen synsent synreceived established finwait1	;
00:000215  F8B2F1              +19 				finwait2 closewait lastack closing timewait deletetcb), y
00:000216  F80003              +19 
00:000217  F80002              +19 
00:000218  F8F003              +19 
00:000219  FD321D              +19 
00:00021A  FD0001              +19 
00:00021B  FCF006              +19 
00:00021C  FF02BF              +19 
00:00021D  38000F              +19 
00:00021E  B60227              +20 	j	reported
  :                            21 
  :                            22 extra_state
00:00021F  F80003              +23 	printf	$3("tcbloc %x:%x state %d":10:0),,xi	0, sp	x	y
00:000220  F80002              +23 
00:000221  F8F002              +23 
00:000222  FD3226              +23 
00:000223  FD0001              +23 
00:000224  FCF005              +23 
00:000225  FF02BF              +23 
00:000226  38000F              +23 
  :                            24 
  :                            25 reported
00:000227  60F000              +26 	la	0, sp
00:000228  34002F              +27 	sabr	BSOCKET
00:000229  8FA014              +28 	printf	$3("%Lx":LF:"%Lx":LF:"%Lx":LF:0),,xi	0,x,float192	8,x,float192	16,x,float192
00:00022A  8FA010              +28 
00:00022B  8FA00C              +28 
00:00022C  8FA008              +28 
00:00022D  8FA004              +28 
00:00022E  8FA000              +28 
00:00022F  FD322E              +28 
00:000230  FD0001              +28 
00:000231  FCF01A              +28 
00:000232  FF02BF              +28 
00:000233  38000F              +28 
00:000234  380004              +29 	pop	a
00:000235  34002F              +30 	sabr	BSOCKET
  :                            31 
00:000236  870000              +32 quit	qpop	r
00:000237  350000              +33 	lret	0
  :                            34 
  :                            35 			$root
  :                            272: 	$include	../proton.app/sdisplay
  :                            1 
  :                            2 .	x -> descriptor [ structure acw ]
  :                            3 
  :                            4 display_segment	$tree
                                	$head_near	 params(qheadp,			int)	;
                                								;
                                			scalars(save_rkxy,	float,	r	;
00:000238  8F0000              +8 				save_bsocket,	int		)
00:000239  FD0000              +8 
  :                            9 
00:00023A  65002F              +10 	la	BSOCKET,,xi
00:00023B  750073              +11 	ii	A$IDX
  :                            12 
00:00023C  20F000              +13 	sa	save_bsocket
00:00023D  E60281              +14 	jna	quit			. basing zero or C00001
00:00023E  C60281              +15 	jza	quit			. crashes you
  :                            16 
  :                            17 superpage	$equf	0, sp
  :                            18 caller_x	$equf	1+2, sp
  :                            19 
00:00023F  F8F007              +20 next	printf	$3("":LF:"axw @ %x:%x":LF:0),,xi	a	qheadp
00:000240  F80004              +20 
00:000241  FD3233              +20 
00:000242  FD0001              +20 
00:000243  FCF004              +20 
00:000244  FF02BF              +20 
00:000245  38000F              +20 
  :                            21 
00:000246  60F000              +22 	la	save_bsocket		. printf closes window BSOCKET
00:000247  34002F              +23 	sabr	BSOCKET			. x -> this window
  :                            24 
00:000248  60F007              +25 	la	qheadp
                                	printf	$3("[%x:%x:%x:%x:%x:%x:%x:%x]":LF:0),,xi	0, a	1, a	2, a	3, a	;
00:000249  F8C007              +27 								4, a	5, a	6, a	7, a
00:00024A  F8C006              +27 
00:00024B  F8C005              +27 
00:00024C  F8C004              +27 
00:00024D  F8C003              +27 
00:00024E  F8C002              +27 
00:00024F  F8C001              +27 
00:000250  F8C000              +27 
00:000251  FD3238              +27 
00:000252  FD0001              +27 
00:000253  FCF00A              +27 
00:000254  FF02BF              +27 
00:000255  38000F              +27 
00:000256  60F000              +28 	la	save_bsocket
00:000257  34002F              +29 	sabr	BSOCKET
  :                            30 
00:000258  60F007              +31 	la	qheadp
00:000259  60C001              +32 	la	descriptor:frame, a
  :                            33 
                                	printf	$3("routing header":LF:;
                                		 "%x %x %x %x %x %x %x %x":LF:;
                                		 "%x %x %x %x %x %x %x %x":LF:"datagram":LF:0),,xi		;
                                		  0,a	  1,a	  2,a	  3,a	  4,a	  5,a	  6,a	  7,a	;
00:00025A  F8C00F              +38 		8+0,a	8+1,a	8+2,a	8+3,a	8+4,a	8+5,a	8+6,a	8+7,a
00:00025B  F8C00E              +38 
00:00025C  F8C00D              +38 
00:00025D  F8C00C              +38 
00:00025E  F8C00B              +38 
00:00025F  F8C00A              +38 
00:000260  F8C009              +38 
00:000261  F8C008              +38 
00:000262  F8C007              +38 
00:000263  F8C006              +38 
00:000264  F8C005              +38 
00:000265  F8C004              +38 
00:000266  F8C003              +38 
00:000267  F8C002              +38 
00:000268  F8C001              +38 
00:000269  F8C000              +38 
00:00026A  FD3241              +38 
00:00026B  FD0001              +38 
00:00026C  FCF012              +38 
00:00026D  FF02BF              +38 
00:00026E  38000F              +38 
  :                            39 
00:00026F  60F000              +40 	la	save_bsocket
00:000270  34002F              +41 	sabr	BSOCKET
  :                            42 
00:000271  50F007              +43 	lx	qheadp
00:000272  50A004              +44 	lx	descriptor:dgram, x
00:000273  68A001              +45 	lb	dgram:bytes, x
00:000274  CDFFFF              +46 	ab	-1,,xi
00:000275  AE0277              +47 	jpb	$+2
00:000276  6D0047              +48 	lb	72-1,,xi		. if the length is junk show 2 headings + 32 bytes			
00:000277  E802FE              +49 	mf	(R24)			. 24-octet chunkarettes @ 2 octets per socket word
  :                            50 
00:000278  400004              +51 	lr	a			. chunkarettes - 1
  :                            52 
00:000279  3E0284              +53 get_in	lcal	tae_it			. subroutined out because freehand stack work
00:00027A  60F000              +54 	la	save_bsocket		. does not mix with equated stack offsets
00:00027B  34002F              +55 	sabr	BSOCKET			. get the connections / buffers page back
00:00027C  1E0279              +56 	jdr	get_in
  :                            57 
00:00027D  60F007              +58 	la	qheadp
00:00027E  60C000              +59 	la	descriptor:next, a
00:00027F  20F007              +60 	sa	qheadp
00:000280  D6023F              +61 	jnza	next
  :                            62 
00:000281  380004              +63 quit	pop	a			. return page index[BSOCKET]
00:000282  870000              +64 	qpop	r			. restore caller [ r k x y ] sp 4++
00:000283  350000              +65 	lret	0			.
  :                            66 
00:000284  F80000              +67 tae_it	push	r			. printf will mash r and x both
00:000285  FCA00C              +68 	push	12, x, i		. next pointer = this pointer + 12 socket buffer words
[buy24_bytes][000000000000000000000000000000000000000000000072]
00:000286  64A006              +69 	printf	$3("%Lx":LF:0),,xi	0, x, buy24_bytes
00:000287  FF02FF              +69 
00:000288  8F0004              +69 
00:000289  64A000              +69 
00:00028A  FF02FF              +69 
00:00028B  8F0004              +69 
00:00028C  FD325A              +69 
00:00028D  FD0001              +69 
00:00028E  FCF00A              +69 
00:00028F  FF02BF              +69 
00:000290  38000F              +69 
00:000291  380002              +70 	pop	x			. next pointer -> x
00:000292  380000              +71 	pop	r
00:000293  350000              +72 	lret	0
  :                            73 
  :                            74 		$root
  :                            273 
  :                            274 	$do	$<256,$(0:256)
*EOF*
00:000294+[0001]18:000000
00:000295+00C000
00:000296+[0003]30:000000000000
00:000298+0001CD
00:000299+00019300000000300000B800
00:00029d+00019300000000300200B400
00:0002a1+00019300000000300400B000
00:0002a5+00019300000000300600AC00
00:0002a9+00019300000000300800A800
00:0002ad+00019300000000300A00A400
00:0002b1+00019300000000300C00A000
00:0002b5+00019300000000300E009C00
00:0002b9+000132
00:0002ba+0001A8
00:0002bb+000133
00:0002bc+000137
00:0002bd+000000000000
00:0002bf+0001DB
00:0002c0+0001D6
00:0002c1+0001E4
00:0002c2+0001D8
00:0002c3+72616E676500
00:0002c5+77616C6B0000
00:0002c7+737461746500
00:0002c9+40656F660000
00:0002cb+0002C3
0002C5
0002C7
0002C9
00:0002cf+000112
000145
000164
00016A
00:0002d3+00317F
003181
003183
003185
00:0002d7+010000
00:0002d8+000135
00:0002d9+02F008
00:0002da+000000000000000000000000
00:0002de+000136
00:0002df+800020000032
00:0002e1+BC0040
00:0002e2+BC0002
00:0002e3+0031E3
0031E5
0031E8
0031EB
0031EE
0031F2
0031F6
0031F9
0031FC
003200
003203
003206
003209
00320D
00:0002f1+003217
0031E5
0031E8
0031EB
0031EE
0031F2
0031F6
0031F9
0031FC
003200
003203
003206
003219
00:0002fe+0AAAAB
00:0002ff+000116
03:003148+70726F746F5F727828312900
03:00314c+70726F746F5F727828322900
03:003150+70726F746F5F727828332900
03:003154+70726F746F5F727828342900
03:003158+70726F746F5F727828352900
03:00315c+70726F746F5F727828362900
03:003160+70726F746F5F727828372900
03:003164+70726F746F5F727828382900
03:003168+7278202B20256C64203E20256C6420747820256C64207265
73706F6E7365730A00
03:003173+70726F746F3E000000
03:003176+257320256420256400
03:003179+5B636F6D6D616E645F6E616D65735D000000
03:00317f+72616E676500
03:003181+77616C6B0000
03:003183+737461746500
03:003185+40656F660000
03:003187+202573000000
03:003189+0A0000
03:00318a+77616C6B2046524F4D20544F2077697468696E205B203330
37322E2E3635353335205D0A000000
03:003197+31737420706F7274206E756D626572206D6179206E6F7420
6265203C20333037320A0000
03:0031a3+326E6420706F7274206E756D626572206D6179206E6F7420
6265203C203173740A000000
03:0031af+326E6420706F7274206E756D626572206D6179206E6F7420
6265203E2036353533350A00
03:0031bb+737464696E20706970652062726F6B656E20737461747573
20256420636F6E74726F6C20706C616E6520657869740A00
03:0031cb+554E5452414E534D49545445440000
03:0031d0+6177616974696E67205443505F41434B0000
03:0031d6+0A636F6E6E656374696F6E2025783A257820686173207365
676D656E745B735D2025730A000000
03:0031e3+7A65726F0000
03:0031e5+636C6F736564000000
03:0031e8+6C697374656E000000
03:0031eb+73796E73656E740000
03:0031ee+73796E726563656976656400
03:0031f2+65737461626C697368656400
03:0031f6+66696E776169743100
03:0031f9+66696E776169743200
03:0031fc+636C6F736577616974000000
03:003200+6C61737461636B0000
03:003203+636C6F73696E670000
03:003206+74696D657761697400
03:003209+64656C6574655F7463620000
03:00320d+6F75745F6F665F72616E6765000000
03:003212+25642025730A000000
03:003215+256C640A0000
03:003217+6E6F6E650000
03:003219+64656C657465746362000000
03:00321d+0A7463626C6F632025783A25782073746174652025642025
730A00
03:003226+7463626C6F632025783A25782073746174652025640A0000
03:00322e+254C780A254C780A254C780A000000
03:003233+0A61787720402025783A25780A0000
03:003238+5B25783A25783A25783A25783A25783A25783A25783A2578
5D0A00
03:003241+726F7574696E67206865616465720A257820257820257820
25782025782025782025782025780A257820257820257820
25782025782025782025782025780A646174616772616D0A
000000
03:00325a+254C780A0000
:$(00):000000:000300 :$(01):001000:001000 :$(02):002000:003000 :$(03):003000:00325C :$(42):000000:000005 :$(43):000000:000058 :$(47):000000:00000A 
proto.msm: object code 8182 bytes: 0 errors: 4 undefined labels
