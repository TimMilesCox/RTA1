MASMX 7r3A Build 12
3/tal.msm
*EOF*
  :                            1 
  :                            20 	$list
  :                            21 
  :                            22 __BASE	$equ	TAL_LOADP
  :                            23 
  :                            24 SUMMIT_3(1)     $equ    SUMMIT$3
  :                            25 ITHREAD_HIRAM(1) $equ   ITHREAD_FP
  :                            26 
  :                            27 	$set_option	"z"
  :                            28 
  :                            29 $(3:03000/$3)
  :                            30 what	$res	4
  :                            31 how	$res	72//3
  :                            32 left	$res	72//3
  :                            33 right	$res	72//3
  :                            34 capture	$res	36//3
  :                            35 
03:003058  0000C8 3FFFFF        +36 gate	200, 03FFFFF:d
03:00305A  3FFFFF 0000C8        +37 return	03FFFFF, 200d
03:00305C  000000 000000        +38 relay	0L
03:00305E  000000              +39 fields	0
03:00305F  003034              +40 offset	+	right
  :                            41 
  :                            42 inputd	$res	144/3
  :                            43 
03:003090  000000              +44 ra_thread_id	0
03:003091  000000              +45 xtarget	0
  :                            46 
  :                            47 $(0:0/$0)
  :                            48 
[+0001]18
[+0000]18*/30
00:000040  000050 000000 001000 000000
                              +49 	catalog
00:000044  4D0003              +49 
00:000045  000000              +49 
[+0002]30
00:000046  000000 000000        +49 
[+0000]18
[+0001]18*/48
00:000048  800040 000007 001000 FFFFFF 000000 000000 000050 000000
                              +49 
  :                            50 
00:000050  60207F              +51 start	$base_d	$zenith(3)-03000  0400
00:000051  340003              +51 
00:000052  60059B              +51 
00:000053  75007A              +51 
00:000054  654000              +51 
00:000055  20000E              +51 
  :                            52 
00:000056  054000              +53 	on	see$1
00:000057  401043              +54 	lr	ABT+3
00:000058  0C0041              +55 	inB	65
00:000059  701043              +56 	tz	ABT+3
00:00005A  781043              +57 	tp	ABT+3
00:00005B  75005F              +58 	ii	GUARD$
00:00005C  0D4000              +59 	off	see$1
  :                            60 
00:00005D  9F059C              +61 	c	(seg$load)	0,,xi	(tal_data:d),,long
00:00005E  FD0000              +61 
00:00005F  FCF003              +61 
00:000060  FF059E              +61 
00:000061  38000F              +61 
  :                            62 
00:000062  303001              +63 input	z	what+1
00:000063  303005              +64 	z	how+1
  :                            65 
00:000064  FD0090              +66 	fgets	inputd,,xi	144	stdin
00:000065  FD3060              +66 
00:000066  FD0000              +66 
00:000067  FCF003              +66 
00:000068  FF059F              +66 
00:000069  38000F              +66 
00:00006A  160018              +66 
00:00006B  1D0018              +66 
00:00006C  EE006F              +66 
00:00006D  CE006F              +66 
00:00006E  653060              +66 
00:00006F  FD3034              +67 	sscanf	inputd,,xi	$3("%s %s %s %s":0),,xi	what,,xi how,,xi left,,xi right,,xi
00:000070  FD301C              +67 
00:000071  FD3004              +67 
00:000072  FD3000              +67 
00:000073  FD3174              +67 
00:000074  FD3060              +67 
00:000075  FCF006              +67 
00:000076  FF05A0              +67 
00:000077  38000F              +67 
  :                            68 
00:000078  20305E              +69 	sa	fields
  :                            70 .	jza	leave		. stdin eof
00:000079  E600AE              +71 	jna	leave		. stdin disconnected
00:00007A  D6007D              +72 	jnza	input1
00:00007B  750041              +73 	ii	YIELD$
00:00007C  B60062              +74 	j	input
  :                            75 
00:00007D  C5FFFD              +76 input1	aa	-3,,xi
00:00007E  E60085              +77 	jna	input2
  :                            78 
00:00007F  FD305F              +79 	sscanf	left,,xi	$3("%x":0),,xi	offset,,xi
00:000080  FD3178              +79 
00:000081  FD301C              +79 
00:000082  FCF003              +79 
00:000083  FF05A0              +79 
00:000084  38000F              +79 
  :                            80 
  :                            81 
  :                            82 input2
00:000085  603000              +83 	la	what
00:000086  060010              +84 	sar	$word-$byte
00:000087  4D00FF              +85 	lk	255,,xi
00:000088  AF0001              +86 	mtane	k
00:000089  B6008B              +86 
00:00008A  B600AE              +87 	j	leave		. ctrl-D 
00:00008B  AF05A1              +88 	mtane	('.')
00:00008C  B6008E              +88 
00:00008D  B600AE              +89 	j	leave		. leave command
  :                            90 
                                	lookup	what					;
                                		inform, format, length, catena,		;
00:00008E  55000A              +93 		hw, tw, time, test, formax, d72
00:00008F  85FFFF              +93 
00:000090  60A5B6              +93 
00:000091  CFC000              +93 
00:000092  DF3000              +93 
00:000093  900005              +93 
00:000094  68A5C0              +93 
00:000095  C6D000              +93 
00:000096  700002              +93 
00:000097  B6008F              +93 
  :                            94 
  :                            95 
00:000098  FD3179              +96 	prompt	inform, format, length, catena, hw, tw, time, test, formax, d72
00:000099  FD0001              +96 
00:00009A  FCF002              +96 
00:00009B  FF05CA              +96 
00:00009C  38000F              +96 
00:00009D  45000A              +96 
00:00009E  550000              +96 
00:00009F  F8A5CB              +96 
00:0000A0  FD3196              +96 
00:0000A1  FD0001              +96 
00:0000A2  FCF003              +96 
00:0000A3  FF05CA              +96 
00:0000A4  38000F              +96 
00:0000A5  850001              +96 
00:0000A6  F600A8              +96 
00:0000A7  B6009F              +96 
00:0000A8  FD3198              +96 
00:0000A9  FD0001              +96 
00:0000AA  FCF002              +96 
00:0000AB  FF05CA              +96 
00:0000AC  38000F              +96 
  :                            97 
00:0000AD  B60062              +98 	j	input
  :                            99 
00:0000AE  3D0000              +100 leave	fret	0
  :                            101 
00:0000AF  FD304C              +102 inform	sscanf	left,,xi how,,xi capture,,xi			. input -> [specification] -> capture
00:0000B0  FD3004              +102 
00:0000B1  FD301C              +102 
00:0000B2  FCF003              +102 
00:0000B3  FF05A0              +102 
00:0000B4  38000F              +102 
  :                            103 
00:0000B5  FD3054              +104 	lc	display		capture,,xi	capture+8,,xi
00:0000B6  FD304C              +104 
00:0000B7  FCF002              +104 
00:0000B8  3E0584              +104 
00:0000B9  38000F              +104 
00:0000BA  B60062              +105 	j	input
  :                            106 
  :                            107 
00:0000BB  8F3050              +108 format	printf	how,,xi	capture,,float192			. maximum size display object
00:0000BC  8F304C              +108 
00:0000BD  FD3004              +108 
00:0000BE  FD0001              +108 
00:0000BF  FCF00A              +108 
00:0000C0  FF05CA              +108 
00:0000C1  38000F              +108 
00:0000C2  FD3198              +109 	printf	$3("":10:0),,xi
00:0000C3  FD0001              +109 
00:0000C4  FCF002              +109 
00:0000C5  FF05CA              +109 
00:0000C6  38000F              +109 
00:0000C7  B60062              +110 	j	input
  :                            111 
00:0000C8  9F304C              +112 formax	printf	$3("%lf":10),,xi capture,,floating_packed	. promoted by fpx instruction
00:0000C9  9FF000              +112 
00:0000CA  FF05D5              +112 
00:0000CB  FD3199              +112 
00:0000CC  FD0001              +112 
00:0000CD  FCF006              +112 
00:0000CE  FF05CA              +112 
00:0000CF  38000F              +112 
00:0000D0  B60062              +113         j	input
  :                            114 
00:0000D1  FD301C              +115 catena	c	(strcat)	how,,xi	left,,xi
00:0000D2  FD3004              +115 
00:0000D3  FCF002              +115 
00:0000D4  FF05D6              +115 
00:0000D5  38000F              +115 
00:0000D6  FD301C              +116 	lc	display		how,,xi	how+72//3,,xi		. falls thru and reports new length
00:0000D7  FD3004              +116 
00:0000D8  FCF002              +116 
00:0000D9  3E0584              +116 
00:0000DA  38000F              +116 
  :                            117 
00:0000DB  FD3004              +118 length	c	(strlen)	how,,xi
00:0000DC  FCF001              +118 
00:0000DD  FF05D7              +118 
00:0000DE  38000F              +118 
00:0000DF  F80004              +119 	printf	$3("%d":10:0),,xi	a
00:0000E0  FD319B              +119 
00:0000E1  FD0001              +119 
00:0000E2  FCF003              +119 
00:0000E3  FF05CA              +119 
00:0000E4  38000F              +119 
00:0000E5  B60062              +120 	j	input
  :                            121 
  :                            122 swivel*	$proc
  :                            123 	la	swivel(1, 1),,swivel(1, 3)+?-1
  :                            124 	sa	0, x, 4-?				. show inserted value
  :                            125 	sa	?, x					. show register value
  :                            126 	z	4+?*2-2, x
  :                            127 	z	4+?*2-2+1, x
  :                            128 	n	4+?*2-2+1, x
  :                            129 	sa	4+?*2-2, x, swivel(1, 3)+?-1		. show insert to zero
  :                            130 	sa	4+?*2-2+1, x, swivel(1, 3)+?-1		. show insert to FFFFFF
  :                            131 	$end
  :                            132 
00:0000E6  FD304C              +133 hw	sscanf	how,,xi		$3("%qx":0),,xi	capture,,xi
00:0000E7  FD319D              +133 
00:0000E8  FD3004              +133 
00:0000E9  FCF003              +133 
00:0000EA  FF05A0              +133 
00:0000EB  38000F              +133 
  :                            134 
00:0000EC  050080              +135 	on	half$w
00:0000ED  50305F              +136 	lx	offset
  :                            137 
00:0000EE  62304F              +138 ?	$do	2,	swivel	capture+3,,h1
00:0000EF  23A000              +138 
00:0000F0  20A001              +138 
00:0000F1  30A004              +138 
00:0000F2  30A005              +138 
00:0000F3  0FA005              +138 
00:0000F4  22A004              +138 
00:0000F5  22A005              +138 
00:0000F6  63304F              +138 
00:0000F7  22A000              +138 
00:0000F8  20A002              +138 
00:0000F9  30A006              +138 
00:0000FA  30A007              +138 
00:0000FB  0FA007              +138 
00:0000FC  23A006              +138 
00:0000FD  23A007              +138 
  :                            139 	
00:0000FE  0D0080              +140 	off	half$w
  :                            141 
00:0000FF  FCA003              +142 	lc	display		x	3,x,i
00:000100  F80002              +142 
00:000101  FCF002              +142 
00:000102  3E0584              +142 
00:000103  38000F              +142 
00:000104  50305F              +143 	lx	offset
00:000105  FCA008              +144 	lc	display		4,x,i	4+2*2,x,i
00:000106  FCA004              +144 
00:000107  FCF002              +144 
00:000108  3E0584              +144 
00:000109  38000F              +144 
00:00010A  B60062              +145 	j	input
  :                            146 
00:00010B  FD304C              +147 tw	sscanf	how,,xi		$3("%qx":0),,xi	capture,,xi
00:00010C  FD319D              +147 
00:00010D  FD3004              +147 
00:00010E  FCF003              +147 
00:00010F  FF05A0              +147 
00:000110  38000F              +147 
  :                            148 
00:000111  50305F              +149 	lx	offset
00:000112  61304F              +150 ?	$do	3,	swivel	capture+3,,t1
00:000113  23A000              +150 
00:000114  20A001              +150 
00:000115  30A004              +150 
00:000116  30A005              +150 
00:000117  0FA005              +150 
00:000118  21A004              +150 
00:000119  21A005              +150 
00:00011A  62304F              +150 
00:00011B  22A000              +150 
00:00011C  20A002              +150 
00:00011D  30A006              +150 
00:00011E  30A007              +150 
00:00011F  0FA007              +150 
00:000120  22A006              +150 
00:000121  22A007              +150 
00:000122  63304F              +150 
00:000123  21A000              +150 
00:000124  20A003              +150 
00:000125  30A008              +150 
00:000126  30A009              +150 
00:000127  0FA009              +150 
00:000128  23A008              +150 
00:000129  23A009              +150 
  :                            151 
00:00012A  FCA004              +152 	lc	display		x	4,x,i
00:00012B  F80002              +152 
00:00012C  FCF002              +152 
00:00012D  3E0584              +152 
00:00012E  38000F              +152 
00:00012F  50305F              +153 	lx	offset
00:000130  FCA00A              +154 	lc	display		4,x,i	4+2*3,x,i
00:000131  FCA004              +154 
00:000132  FCF002              +154 
00:000133  3E0584              +154 
00:000134  38000F              +154 
00:000135  B60062              +155 	j	input
  :                            156 
00:000136  FD3004              +157 time	c	(date_timef1)	0,,xi	how,,xi
00:000137  FD0000              +157 
00:000138  FCF002              +157 
00:000139  FF05D8              +157 
00:00013A  38000F              +157 
00:00013B  FD301C              +158 	c	(date_timef2)	0,,xi	left,,xi
00:00013C  FD0000              +158 
00:00013D  FCF002              +158 
00:00013E  FF05D9              +158 
00:00013F  38000F              +158 
00:000140  FD3034              +159 	c	(date_timef3)	0,,xi	right,,xi
00:000141  FD0000              +159 
00:000142  FCF002              +159 
00:000143  FF05DA              +159 
00:000144  38000F              +159 
00:000145  FD3034              +160 	printf	$3("%s":10:"%s":10:"%s":10:0),,xi	how,,xi	left,,xi right,,xi
00:000146  FD301C              +160 
00:000147  FD3004              +160 
00:000148  FD319F              +160 
00:000149  FD0001              +160 
00:00014A  FCF005              +160 
00:00014B  FF05CA              +160 
00:00014C  38000F              +160 
00:00014D  FF05DB              +161 	call	(dayclock_ydsm)
00:00014E  F8000B              +162 	printf	$3("%d.%d:%d.%d":10:0),,xi	8	9	10	11
00:00014F  F8000A              +162 
00:000150  F80009              +162 
00:000151  F80008              +162 
00:000152  FD31A3              +162 
00:000153  FD0001              +162 
00:000154  FCF006              +162 
00:000155  FF05CA              +162 
00:000156  38000F              +162 
00:000157  FF05DC              +163 	call	(dayclock_ydsm_gmt)
00:000158  F8000B              +164 	printf	$3("%d.%d:%d.%d":10:0),,xi	8	9	10	11
00:000159  F8000A              +164 
00:00015A  F80009              +164 
00:00015B  F80008              +164 
00:00015C  FD31A3              +164 
00:00015D  FD0001              +164 
00:00015E  FCF006              +164 
00:00015F  FF05CA              +164 
00:000160  38000F              +164 
00:000161  B60062              +165 	j	input
  :                            166 
00:000162  FD301F              +167 d72	sscanf	inputd,,xi $3("%s %jd %d":10:0),,xi what,,xi left,,xi left+3,,xi
00:000163  FD301C              +167 
00:000164  FD3000              +167 
00:000165  FD31A8              +167 
00:000166  FD3060              +167 
00:000167  FCF005              +167 
00:000168  FF05A0              +167 
00:000169  38000F              +167 
00:00016A  CF301C              +168 	dl	left
00:00016B  F0301F              +169 	d	left+3
00:00016C  78301C              +170 	tp	left
00:00016D  3E017D              +171 	lcal	quicku
00:00016E  400006              +172 	lr	6
00:00016F  200007              +173 	sa	7
00:000170  600005              +174 	la	b
00:000171  68301E              +175 	lb	left+2
00:000172  F0301F              +176 	d	left+3
00:000173  F80005              +177 	printf	$3("%jd %d":10:0),,xi	r 7 a b
00:000174  F80004              +177 
00:000175  F80007              +177 
00:000176  F80000              +177 
00:000177  FD31AC              +177 
00:000178  FD0001              +177 
00:000179  FCF006              +177 
00:00017A  FF05CA              +177 
00:00017B  38000F              +177 
00:00017C  B60062              +178 	j	input
  :                            179 
00:00017D  C5FFFF              +180 quicku	aa	-1,,xi
00:00017E  7E0180              +181 	jc	quickux
00:00017F  1F0006              +182 	dec	6
00:000180  350000              +183 quickux	lret	0
  :                            184 
00:000181  FD305B              +185 test	sscanf	left,,xi	$3("%x:%x":0),,xi	return,,xi return+1,,xi
00:000182  FD305A              +185 
00:000183  FD31AF              +185 
00:000184  FD301C              +185 
00:000185  FCF004              +185 
00:000186  FF05A0              +185 
00:000187  38000F              +185 
00:000188  CF305A              +186 	dl	return
00:000189  560018              +187 	drr	24
00:00018A  C73058              +188 	ds	gate
  :                            189 
                                	lookup	how								;
                                		ref, j, go, call, 		fret, ir, sir, barg,		;
                                		bats, bang, base, load, 	store, push, pop, lcal,		;
                                		lret, lretched, popA, ii,	gii, xint, sim, ireqs,		;
                                		launch, outA, outB, activate,	xerc, on, off, aa,		;
                                		r_mta, dte, r_dte, rex,		range, d__, xor, xtend,		;
                                		clam, r_tz, r_tp, rex_vector,	overlap				;
00:00018B  55002D              +197 		dothat
00:00018C  85FFFF              +197 
00:00018D  60A637              +197 
00:00018E  CFC000              +197 
00:00018F  DF3004              +197 
00:000190  7C01A9              +197 
00:000191  700002              +197 
00:000192  B6018C              +197 
  :                            198 
  :                            199 	$if	1
                                	prompt	test								;
                                		ref, j, go, call,		fret, ir, sir, barg,		;
                                		bats, bang, base, load,		store, push, pop, lcal,		;
                                		lret, lretched, popA, ii,	gii, xint, sim, ireqs,		;
                                		launch,	outA, outB, activate,	xerc, on, off, aa,		;
                                		r_mta, dte, r_dte, urex,	range, d__, xor, xtend,		;
00:000193  FD318F              +206 		clam, r_tz, r_tp, rex_vector,	overlap
00:000194  FD0001              +206 
00:000195  FCF002              +206 
00:000196  FF05CA              +206 
00:000197  38000F              +206 
00:000198  45002D              +206 
00:000199  550000              +206 
00:00019A  F8A664              +206 
00:00019B  FD3196              +206 
00:00019C  FD0001              +206 
00:00019D  FCF003              +206 
00:00019E  FF05CA              +206 
00:00019F  38000F              +206 
00:0001A0  850001              +206 
00:0001A1  F601A3              +206 
00:0001A2  B6019A              +206 
00:0001A3  FD3198              +206 
00:0001A4  FD0001              +206 
00:0001A5  FCF002              +206 
00:0001A6  FF05CA              +206 
00:0001A7  38000F              +206 
  :                            207 	$endif
  :                            208 
00:0001A8  B60062              +209 	j	input
  :                            210 
00:0001A9  97A1AB              +211 dothat	ex	doso, x
00:0001AA  B60062              +212 	j	input
  :                            213 
00:0001AB  608691              +214 doso	la	*(31*/18)
00:0001AC  B68691              +215 	j	*(31*/18)
00:0001AD  F70692              +216 	go	(1*/23++gate:s)
00:0001AE  FF0692              +217 	call	(1*/23++gate:s)
  :                            218 
00:0001AF  3E01D8              +219 	lcal	refret
00:0001B0  3E01DB              +220 	lcal	refire
00:0001B1  3000A0              +221 	z	128+32
00:0001B2  3E01DF              +222 	lcal	barg
  :                            223 
00:0001B3  3E01E2              +224 	lcal	bats
00:0001B4  3E01F0              +225 	lcal	bang
00:0001B5  3E0203              +226 	lcal	base
00:0001B6  3E0206              +227 	lcal	load
  :                            228 
00:0001B7  3E021D              +229 	lcal	store
00:0001B8  3E0234              +230 	lcal	upush
00:0001B9  3E023D              +231 	lcal	upop
00:0001BA  3E0244              +232 	lcal	ulcal
  :                            233 
00:0001BB  3E0249              +234 	lcal	ulret
00:0001BC  3E024B              +235 	lcal	ulretch
00:0001BD  3E024E              +236 	lcal	upopa
00:0001BE  3E0252              +237 	lcal	uii
  :                            238 
00:0001BF  3E025A              +239 	lcal	ugii
00:0001C0  3E025C              +240 	lcal	uxint
00:0001C1  27305A              +241 	sim	return
00:0001C2  3E0270              +242 	lcal	uireqs
  :                            243 
00:0001C3  3E0285              +244 	lcal	ulaunch
00:0001C4  3E0291              +245 	lcal	uoutA
00:0001C5  3E0295              +246 	lcal	uoutB
00:0001C6  3E0299              +247 	lcal	uactivate
  :                            248 
00:0001C7  3E029C              +249 	lcal	uxerc
00:0001C8  050300              +250 	on	000300
00:0001C9  0D0300              +251 	off	000300
00:0001CA  3E04FF              +252 	lcal	uaa
  :                            253 
00:0001CB  3E02BD              +254 	lcal	ur_mta
00:0001CC  3E02C5              +255 	lcal	udte
00:0001CD  3E02CF              +256 	lcal	ur_dte
00:0001CE  3E02D6              +257 	lcal	urex
  :                            258 
00:0001CF  3E02A5              +259 	lcal	urange
00:0001D0  3E0503              +260 	lcal	ud
00:0001D1  3E0514              +261 	lcal	uxor
00:0001D2  3E0518              +262 	lcal	uxtend
00:0001D3  3E0526              +263 	lcal	uclam
00:0001D4  3E052C              +264 	lcal	ur_tz
00:0001D5  3E0534              +265 	lcal	ur_tp
00:0001D6  3E0542              +266 	lcal	urex_vector
00:0001D7  3E053C              +267 	lcal	overlap
  :                            268 
  :                            269 refret
00:0001D8  9F305A              +270 		dpush	return
00:0001D9  3D0000              +271 		fret	0
00:0001DA  350000              +272 	lret	0
  :                            273 
  :                            274 refire
00:0001DB  9F305A              +275 		dpush	return
00:0001DC  9F0693              +276 		dpush	(0:d)
00:0001DD  7D0000              +277 		ir	0
00:0001DE  350000              +278 	lret	0
  :                            279 
00:0001DF  CF0695              +280 barg	dl	(0, 31*/18d)
00:0001E0  750049              +281 	ii	TAG$
00:0001E1  350000              +282 	lret	0
  :                            283 
00:0001E2  60305E              +284 bats	la	fields
00:0001E3  C5FFFD              +285 	aa	-3,,xi
00:0001E4  E601EC              +286 	jna	bats_device1
  :                            287 
00:0001E5  70305F              +288 	tnz	offset
00:0001E6  B601E8              +288 
00:0001E7  350000              +289 	lret	0
  :                            290 
00:0001E8  50305F              +291 	lx	offset
00:0001E9  07A000              +292 	ts	0, x
00:0001EA  350000              +293 	lret	0
00:0001EB  350000              +294 	lret	0
  :                            295 
  :                            296 bats_device1
00:0001EC  600697              +297 	la	(0400001)
00:0001ED  750063              +298 	ii	XBASE$35
00:0001EE  078698              +299 	ts	*(35*/18++03FFFF:s)
00:0001EF  350000              +300 	lret	0
  :                            301 
00:0001F0  CF3058              +302 bang		dl	gate
00:0001F1  CDFFD4              +303 		ab	-32-12,,xi
00:0001F2  7E01F6              +304 		jc	no_bang
00:0001F3  CD000C              +305 		ab	12,,xi
00:0001F4  5E01F6              +306 		jnc	no_bang
00:0001F5  97D1F7              +307 		ex	please_base, b
00:0001F6  350000              +308 no_bang	lret	0
  :                            309 
  :                            310 please_base
00:0001F7  750060              +311 ?	$do	12,	ii	XBASE$32+?-1
00:0001F8  750061              +311 
00:0001F9  750062              +311 
00:0001FA  750063              +311 
00:0001FB  750064              +311 
00:0001FC  750065              +311 
00:0001FD  750066              +311 
00:0001FE  750067              +311 
00:0001FF  750068              +311 
00:000200  750069              +311 
00:000201  75006A              +311 
00:000202  75006B              +311 
  :                            312 
00:000203  CF3058              +313 base		dl	gate
00:000204  34D000              +314 		sabr	0, b
00:000205  350000              +315 	lret	0
  :                            316 
00:000206  60305A              +317 load		la	return
00:000207  50305B              +318 		lx	return+1
00:000208  4D0007              +319 		lk	7,,xi
  :                            320 
00:000209  AF0699              +321 	mta	(8)
00:00020A  B60210              +322 		j	r4?
00:00020B  4FA000              +323 		ql	0, x
00:00020C  47304C              +324 		qs	capture
00:00020D  4FA004              +325 		ql	4, x
00:00020E  473050              +326 		qs	capture+4
00:00020F  350000              +327 	lret	0
  :                            328 
00:000210  AF069A              +329 r4?	mta	(4)
00:000211  B60215              +330 		j	r2?
00:000212  4FA000              +331 		ql	0, x
00:000213  47304C              +332 		qs	capture
00:000214  350000              +333 	lret	0
  :                            334 
00:000215  AF069B              +335 r2?	mta	(2)
00:000216  B6021A              +336 		j	r1
00:000217  CFA000              +337 		dl	0, x
00:000218  C7304C              +338 		ds	capture
00:000219  350000              +339 	lret	0
  :                            340 
00:00021A  60A000              +341 r1		la	0, x
00:00021B  20304C              +342 		sa	capture
00:00021C  350000              +343 	lret	0
  :                            344 		
  :                            345 
00:00021D  60305A              +346 store		la	return
00:00021E  50305B              +347 		lx	return+1
00:00021F  4D0007              +348 		lk	7,,xi
  :                            349 
00:000220  AF0699              +350 	mta	(8)
00:000221  B60227              +351 		j	w4?
  :                            352 
00:000222  4F304C              +353 		ql	capture
00:000223  47A000              +354 		qs	0, x
00:000224  4F3050              +355 		ql	capture+4
00:000225  47A004              +356 		qs	4, x
00:000226  350000              +357 	lret	0
  :                            358 
  :                            359 
00:000227  AF069A              +360 w4?	mta	(4)
00:000228  B6022C              +361 		j	w2?
  :                            362 
00:000229  4F304C              +363 		ql	capture
00:00022A  47A000              +364 		qs	0, x
00:00022B  350000              +365 	lret	0
  :                            366 
00:00022C  AF069B              +367 w2?	mta	(2)
00:00022D  B60231              +368 		j	w1
  :                            369 
00:00022E  CF304C              +370 		dl	capture
00:00022F  C7A000              +371 		ds	0, x
00:000230  350000              +372 	lret	0
  :                            373 
00:000231  60304C              +374 w1		la	capture
00:000232  20A000              +375 		sa	0, x
00:000233  350000              +376 	lret	0
  :                            377 
00:000234  40305A              +378 upush	lr	return
00:000235  55304C              +379 	lx	capture,,xi
00:000236  70305B              +380 	tz	return+1
00:000237  50305B              +381 	lx	return+1
  :                            382 
00:000238  8FA000              +383 upushmo	qpush	0, x
00:000239  1E0238              +384 	jdr	upushmo
  :                            385 
00:00023A  40305B              +386 	lr	return+1
00:00023B  B6023E              +387 	j	upopsum
  :                            388 
00:00023C  350000              +389 	lret	0
  :                            390 
00:00023D  40305A              +391 upop	lr	return
00:00023E  55301C              +392 upopsum	lx	left,,xi
  :                            393 
00:00023F  87A000              +394 upopmor	qpop	0, x
00:000240  850004              +395 	ax	4,,xi
00:000241  1E023F              +396 	jdr	upopmor
00:000242  8F304C              +397 	qpush	capture
00:000243  350000              +398 	lret	0
  :                            399 
00:000244  380018              +400 ulcal	pop	24
00:000245  550018              +401 	lx	24,,xi
00:000246  10000F              +402 	sx	sp
00:000247  3E0248              +403 	lcal	$+1
00:000248  350000              +404 	lret	0
  :                            405 
00:000249  F8069C              +406 ulret	push	(60*/12)
00:00024A  350000              +407 	lret	0
  :                            408 
00:00024B  650081              +409 ulretch	la	129,,xi
00:00024C  20000F              +410 	sa	sp
00:00024D  350000              +411 	lret	0
  :                            412 
00:00024E  50305A              +413 upopa	lx	return
00:00024F  FD0064              +414 	push	100,,xi
00:000250  2FA000              +415 	popA	0, x
00:000251  350000              +416 	lret	0
  :                            417 
00:000252  CF305A              +418 uii	dl	return		. illegal ii from application to restarts page
00:000253  2E0012              +419 	sbl	18
00:000254  16000A              +420 	dsr	10
00:000255  650075              +421 	la	ii*/3++xi,,xi	. ii instruction
00:000256  160008              +422 	dsr	8
00:000257  283091              +423 	sb	xtarget		. can't ex register
00:000258  973091              +424 	ex	xtarget
00:000259  350000              +425 	lret	0		. so it shouldn't come to here
  :                            426 
00:00025A  750040              +427 ugii	ii	64		. to a legal but spare slot
00:00025B  350000              +428 	lret	0		. should just ir
  :                            429 
  :                            430 uxint
  :                            431 take_on* $proc
  :                            432 	la	?,,xi
  :                            433 	ii	XINT$BIND
  :                            434 	$end
  :                            435 
  :                            436 	
00:00025C  75004B              +437 	ii	I$TABLE		. start thread interrupts table
  :                            438 				. for postprocess
  :                            439 
00:00025D  650001              +440 ?	$do	8,	take_on
00:00025E  75004F              +440 
00:00025F  650002              +440 
00:000260  75004F              +440 
00:000261  650003              +440 
00:000262  75004F              +440 
00:000263  650004              +440 
00:000264  75004F              +440 
00:000265  650005              +440 
00:000266  75004F              +440 
00:000267  650006              +440 
00:000268  75004F              +440 
00:000269  650007              +440 
00:00026A  75004F              +440 
00:00026B  650008              +440 
00:00026C  75004F              +440 
  :                            441 
00:00026D  650001              +442 	la	XINT,,xi
00:00026E  75005C              +443 	ii	EVENT_WAIT$
00:00026F  350000              +444 	lret	0
  :                            445 
00:000270  054000              +446 uireqs	on	see$1
00:000271  501181              +447 	lx	XINTT+1		. read cursor
00:000272  401183              +448 	lr	XINTT+3		. limitof
00:000273  CFA000              +449 uirnext	dl	0, x
00:000274  C60283              +450 	jza	uireqx
  :                            451 
00:000275  9F0004              +452 	printf	$3("%lx":10:0),,xi	a,,long
00:000276  FD320B              +452 
00:000277  FD0001              +452 
00:000278  FCF004              +452 
00:000279  FF05CA              +452 
00:00027A  38000F              +452 
  :                            453 
00:00027B  850002              +454 	ax	2,,xi
00:00027C  F60281              +455 	jxge	ufirst
  :                            456 	
00:00027D  600002              +457 ulast?	la	x
00:00027E  B01182              +458 	xor	XINTT+2		. next write
00:00027F  C60283              +459 	jza	uireqx
00:000280  B60273              +460 	j	uirnext
  :                            461 
00:000281  551184              +462 ufirst	lx	XINTT+4,,xi
00:000282  B6027D              +463 	j	ulast?
  :                            464 
00:000283  0D4000              +465 uireqx	off	see$1
00:000284  350000              +466 	lret	0
  :                            467 
00:000285  4F069D              +468 ulaunch	ql	(ra_thread, 1, 0, 0q)
00:000286  750047              +469 	ii	THREAD$
00:000287  203090              +470 	sa	ra_thread_id
00:000288  6D320D              +471 	lb	$3("application space interrupt handler"),,xi
00:000289  750049              +472 	ii	TAG$
00:00028A  F83090              +473 	printf	$3("ra thread %x":10:0),,xi	ra_thread_id
00:00028B  FD3219              +473 
00:00028C  FD0001              +473 
00:00028D  FCF003              +473 
00:00028E  FF05CA              +473 
00:00028F  38000F              +473 
00:000290  350000              +474 	lret	0
  :                            475 
00:000291  60305A              +476 uoutA	la	return
00:000292  68305B              +477 	lb	return+1
00:000293  14D000              +478 	outA	0, b
00:000294  350000              +479 	lret	0
  :                            480 
00:000295  68305A              +481 uoutB	lb	return
00:000296  60305B              +482 	la	return+1
00:000297  1CC000              +483 	outB	0, a
00:000298  350000              +484 	lret	0
  :                            485 
  :                            486 uactivate
00:000299  CF305A              +487 	dl	return
00:00029A  9006A1              +488 	or	(0400000)
  :                            489 .	ii	ALERT$		. dn exist
00:00029B  350000              +490 	lret	0
  :                            491 
00:00029C  68305A              +492 uxerc	lb	return
00:00029D  E8305B              +493 	mf	return+1
00:00029E  9F0004              +494 	printf	$3("%x:%x":10:0),,xi	a,,long
00:00029F  FD321E              +494 
00:0002A0  FD0001              +494 
00:0002A1  FCF004              +494 
00:0002A2  FF05CA              +494 
00:0002A3  38000F              +494 
00:0002A4  350000              +495 	lret	0
  :                            496 
  :                            497 urange
00:0002A5  8F06A2              +498 ?	$do	20,	qpush	(1.0*+?)
00:0002A6  8F06A6              +498 
00:0002A7  8F06AA              +498 
00:0002A8  8F06AE              +498 
00:0002A9  8F06B2              +498 
00:0002AA  8F06B6              +498 
00:0002AB  8F06BA              +498 
00:0002AC  8F06BE              +498 
00:0002AD  8F06C2              +498 
00:0002AE  8F06C6              +498 
00:0002AF  8F06CA              +498 
00:0002B0  8F06CE              +498 
00:0002B1  8F06D2              +498 
00:0002B2  8F06D6              +498 
00:0002B3  8F06DA              +498 
00:0002B4  8F06DE              +498 
00:0002B5  8F06E2              +498 
00:0002B6  8F06E6              +498 
00:0002B7  8F06EA              +498 
00:0002B8  8F06EE              +498 
00:0002B9  8F06F2              +499 	SIMD_CONTROL	(-1, 4, 40, 0q)
00:0002BA  870014              +499 
00:0002BB  7406FA              +500 	rex	(fa	(1.0))
00:0002BC  350000              +501 	lret	0
  :                            502 
  :                            503 ur_mta
00:0002BD  5506FB              +504 	lx	(0333333, 0555555, 0777777, 0AAAAAA, 0CCCCCC, 0EEEEEE, 0111111, 0BBBBBB:o),,xi
00:0002BE  600703              +505 	la	(0EEEEEE:s)
00:0002BF  4DFFFF              +506 	lk	-1,,xi
00:0002C0  8F0704              +507 	SIMD_CONTROL	(-1, 0, 8-1, 1q)
00:0002C1  870014              +507 
00:0002C2  740708              +508 	rex	(mta	0, x)
00:0002C3  B5FFFF              +509 	xor	-1,,xi		. ya got none
00:0002C4  350000              +510 	lret	0		. unless rex skipped to here
  :                            511 
00:0002C5  550709              +512 udte	lx	("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567"),,xi
00:0002C6  CF071D              +513 	dl	("WXYZ01")
00:0002C7  45000A              +514 	lr	60/6,,xi
00:0002C8  B602CD              +515 	j	udte_next?
  :                            516 udte_next!
00:0002C9  57A000              +517 	dte	0, x
00:0002CA  B602CC              +518 	j	$+2
00:0002CB  350000              +519 	lret	0
00:0002CC  850002              +520 	ax	2,,xi
  :                            521 udte_next?
00:0002CD  1E02C9              +522 	jdr	udte_next!
00:0002CE  350000              +523 	lret	0
  :                            524 
  :                            525 ur_dte
00:0002CF  550709              +526 	lx	("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567"),,xi
00:0002D0  CF071D              +527 	dl	("WXYZ01")
00:0002D1  8F071F              +528 	SIMD_CONTROL	(-1, 0, 60/6-1, 2q)
00:0002D2  870014              +528 
00:0002D3  740723              +529 	rex	(dte	0, x)
00:0002D4  350000              +530 	lret	0
00:0002D5  350000              +531 	lret	0
  :                            532 
  :                            533 urex	
00:0002D6  8F0724              +534 ur_fan	qpush	(16384.0)
00:0002D7  74072C              +535 	rex	(fa	(-8192.0))
00:0002D8  870008              +536 	qpop	8
00:0002D9  8F0008              +537 	printf	$3("%f":10:0),,xi	8,,float
00:0002DA  FD3221              +537 
00:0002DB  FD0001              +537 
00:0002DC  FCF006              +537 
00:0002DD  FF05CA              +537 
00:0002DE  38000F              +537 
  :                            538 ur_fa
00:0002DF  8F06A2              +539 ?       $do     20,     qpush   (1.0*+?)
00:0002E0  8F06A6              +539 
00:0002E1  8F06AA              +539 
00:0002E2  8F06AE              +539 
00:0002E3  8F06B2              +539 
00:0002E4  8F06B6              +539 
00:0002E5  8F06BA              +539 
00:0002E6  8F06BE              +539 
00:0002E7  8F06C2              +539 
00:0002E8  8F06C6              +539 
00:0002E9  8F06CA              +539 
00:0002EA  8F06CE              +539 
00:0002EB  8F06D2              +539 
00:0002EC  8F06D6              +539 
00:0002ED  8F06DA              +539 
00:0002EE  8F06DE              +539 
00:0002EF  8F06E2              +539 
00:0002F0  8F06E6              +539 
00:0002F1  8F06EA              +539 
00:0002F2  8F06EE              +539 
00:0002F3  8F072D              +540         SIMD_CONTROL    (-1, 4, 20-1, 0q)
00:0002F4  870014              +540 
00:0002F5  7406FA              +541         rex     (fa     (1.0))
00:0002F6  870008              +542 	$do	20,	qpop	8
00:0002F7  870008              +542 
00:0002F8  870008              +542 
00:0002F9  870008              +542 
00:0002FA  870008              +542 
00:0002FB  870008              +542 
00:0002FC  870008              +542 
00:0002FD  870008              +542 
00:0002FE  870008              +542 
00:0002FF  870008              +542 
00:000300  870008              +542 
00:000301  870008              +542 
00:000302  870008              +542 
00:000303  870008              +542 
00:000304  870008              +542 
00:000305  870008              +542 
00:000306  870008              +542 
00:000307  870008              +542 
00:000308  870008              +542 
00:000309  870008              +542 
00:00030A  8F0008              +543         printf	$3("%f ":10:0),,xi	8,,float
00:00030B  FD3223              +543 
00:00030C  FD0001              +543 
00:00030D  FCF006              +543 
00:00030E  FF05CA              +543 
00:00030F  38000F              +543 
  :                            544 
00:000310  8F0731              +545 ur_fm	SIMD_CONTROL	(-1, 0, 0, 0q)
00:000311  870014              +545 
00:000312  8F0735              +546 	qpush	(12.0)
00:000313  74073D              +547 	rex	(fm	(0.33333333333333333333333333))
00:000314  870008              +548 	qpop	8
00:000315  8F0008              +549 	printf	$3("%f":10:0),,xi	8,,float
00:000316  FD3221              +549 
00:000317  FD0001              +549 
00:000318  FCF006              +549 
00:000319  FF05CA              +549 
00:00031A  38000F              +549 
  :                            550 
00:00031B  8F073E              +551 ur_fd	qpush	(24*+1250000)
00:00031C  740746              +552 	rex	(fd	(3.0))
00:00031D  870008              +553 	qpop	8
00:00031E  8F0008              +554 	printf	$3("%f":10:0),,xi	8,,float
00:00031F  FD3221              +554 
00:000320  FD0001              +554 
00:000321  FCF006              +554 
00:000322  FF05CA              +554 
00:000323  38000F              +554 
  :                            555 
00:000324  9F0747              +556 ur_d	dpush	(1000000000000)
00:000325  740749              +557 	rex	(d	3,,xi)
00:000326  380004              +558 	dpop	a
00:000327  380005              +558 
00:000328  9F0004              +559 	printf	$3("%ld":10:0),,xi	a,,long
00:000329  FD3225              +559 
00:00032A  FD0001              +559 
00:00032B  FCF004              +559 
00:00032C  FF05CA              +559 
00:00032D  38000F              +559 
  :                            560 
00:00032E  FD0000              +561 	push	0,,xi
00:00032F  9F074A              +562 	dpush	(-1000000000000)
00:000330  050008              +563 	on	fp$r
00:000331  74074C              +564 	rex	(d	-3,,xi)
00:000332  0D0008              +565 	off	fp$r
00:000333  380004              +566 	dpop	a
00:000334  380005              +566 
00:000335  380000              +567 	pop	r
00:000336  F80000              +568 	printf	$3("%ld %d":10:0),,xi	a,,long	r
00:000337  9F0004              +568 
00:000338  FD3227              +568 
00:000339  FD0001              +568 
00:00033A  FCF005              +568 
00:00033B  FF05CA              +568 
00:00033C  38000F              +568 
  :                            569 
00:00033D  9F074D              +570 ur_m	dpush	(0033333333333)
00:00033E  74074F              +571 	rex	(m	7,,xi)
00:00033F  380004              +572 	dpop	a
00:000340  380005              +572 
00:000341  9F0004              +573 	printf	$3("%lx":10:0),,xi	a,,long
00:000342  FD320B              +573 
00:000343  FD0001              +573 
00:000344  FCF004              +573 
00:000345  FF05CA              +573 
00:000346  38000F              +573 
  :                            574 
00:000347  FD00A8              +575 ur_sar	push	21*/3,,xi
00:000348  740750              +576 	rex	(sar	3)
00:000349  380004              +577 	pop	a
00:00034A  F80004              +578 	printf	$3("%x":10:0),,xi	a
00:00034B  FD322A              +578 
00:00034C  FD0001              +578 
00:00034D  FCF003              +578 
00:00034E  FF05CA              +578 
00:00034F  38000F              +578 
  :                            579 
00:000350  F80751              +580 ur_sbr	push	(42*/19s)
00:000351  FDFFFF              +581 	push	-1,,xi
00:000352  740753              +582 	rex	(sbr	*(20))
00:000353  380004              +583 	dpop	a
00:000354  380005              +583 
00:000355  F80005              +584 	printf	$3("%x":10:0),,xi	b
00:000356  FD322A              +584 
00:000357  FD0001              +584 
00:000358  FCF003              +584 
00:000359  FF05CA              +584 
00:00035A  38000F              +584 
  :                            585 
00:00035B  9F0754              +586 ur_dsr	dpush	(99*/41d)
00:00035C  740756              +587 	rex	(dsr	41)
00:00035D  380004              +588 	dpop	a
00:00035E  380005              +588 
00:00035F  9F0004              +589 	printf	$3("%lx":10:0),,xi	a,,long
00:000360  FD320B              +589 
00:000361  FD0001              +589 
00:000362  FCF004              +589 
00:000363  FF05CA              +589 
00:000364  38000F              +589 
  :                            590 
00:000365  FD0021              +591 ur_sal	push	33,,xi
00:000366  740757              +592 	rex	(sal	17)
00:000367  380004              +593 	pop	a
00:000368  F80004              +594 	printf	$3("%x":10:0),,xi	a
00:000369  FD322A              +594 
00:00036A  FD0001              +594 
00:00036B  FCF003              +594 
00:00036C  FF05CA              +594 
00:00036D  38000F              +594 
  :                            595 
00:00036E  FD0014              +596 ur_sbl	push	20,,xi
00:00036F  FD0000              +597 	push	0,,xi
00:000370  740758              +598 	rex	(sbl	19)
00:000371  380004              +599 	dpop	a
00:000372  380005              +599 
00:000373  F80005              +600 	printf	$3("%x":10:0),,xi	b
00:000374  FD322A              +600 
00:000375  FD0001              +600 
00:000376  FCF003              +600 
00:000377  FF05CA              +600 
00:000378  38000F              +600 
  :                            601 
00:000379  9F0759              +602 ur_dsl	dpush	(99d)
00:00037A  74075B              +603 	rex	(dsl	18)
00:00037B  380004              +604 	dpop	a
00:00037C  380005              +604 
00:00037D  9F0004              +605 	printf	$3("%lx":10:0),,xi	a,,long
00:00037E  FD320B              +605 
00:00037F  FD0001              +605 
00:000380  FCF004              +605 
00:000381  FF05CA              +605 
00:000382  38000F              +605 
  :                            606 
00:000383  FD0444              +607 ur_rar	push	0444,,xi
00:000384  74075C              +608 	rex	(rar	9)
00:000385  380004              +609 	pop	a
00:000386  F80004              +610 	printf	$3("%x":10:0),,xi	a
00:000387  FD322A              +610 
00:000388  FD0001              +610 
00:000389  FCF003              +610 
00:00038A  FF05CA              +610 
00:00038B  38000F              +610 
  :                            611 
00:00038C  FD0444              +612 ur_rbr	push	0444,,xi
00:00038D  FD0000              +613 	push	0,,xi
00:00038E  74075D              +614 	rex	(rbr	17)
00:00038F  380004              +615 	dpop	a
00:000390  380005              +615 
00:000391  F80005              +616 	printf	$3("%x":10:0),,xi	b
00:000392  FD322A              +616 
00:000393  FD0001              +616 
00:000394  FCF003              +616 
00:000395  FF05CA              +616 
00:000396  38000F              +616 
  :                            617 
00:000397  9F075E              +618 ur_drr	dpush	(000AAAAAA000)
00:000398  740760              +619 	rex	(drr	25)
00:000399  380004              +620 	dpop	a
00:00039A  380005              +620 
00:00039B  9F0004              +621 	printf	$3("%lx":10:0),,xi	a,,long
00:00039C  FD320B              +621 
00:00039D  FD0001              +621 
00:00039E  FCF004              +621 
00:00039F  FF05CA              +621 
00:0003A0  38000F              +621 
  :                            622 
00:0003A1  FD0AAA              +623 ur_ral	push	0AAA,,xi
00:0003A2  740762              +624 	rex	(ral	*(8+11))
00:0003A3  380004              +625 	pop	a
00:0003A4  F80004              +626 	printf	$3("%x":10:0),,xi	a
00:0003A5  FD322A              +626 
00:0003A6  FD0001              +626 
00:0003A7  FCF003              +626 
00:0003A8  FF05CA              +626 
00:0003A9  38000F              +626 
  :                            627 
00:0003AA  FD0AAA              +628 ur_rbl	push	0AAA,,xi
00:0003AB  FD0000              +629 	push	0,,xi
00:0003AC  740763              +630 	rex	(rbl	4+11)
00:0003AD  380004              +631 	dpop	a
00:0003AE  380005              +631 
00:0003AF  F80005              +632 	printf	$3("%x":10:0),,xi	b
00:0003B0  FD322A              +632 
00:0003B1  FD0001              +632 
00:0003B2  FCF003              +632 
00:0003B3  FF05CA              +632 
00:0003B4  38000F              +632 
  :                            633 
00:0003B5  9F075E              +634 ur_drl	dpush	(000AAAAAA000)
00:0003B6  740764              +635 	rex	(drl	23)
00:0003B7  380004              +636 	dpop	a
00:0003B8  380005              +636 
00:0003B9  9F0004              +637 	printf	$3("%lx":10:0),,xi	a,,long
00:0003BA  FD320B              +637 
00:0003BB  FD0001              +637 
00:0003BC  FCF004              +637 
00:0003BD  FF05CA              +637 
00:0003BE  38000F              +637 
  :                            638 
00:0003BF  FDC000              +639 ur_saa	push	-16384,,xi
00:0003C0  740765              +640 	rex	(saa	1)
00:0003C1  380004              +641 	pop	a	sp
00:0003C2  F80004              +642 	printf	$3("%x":10:0),,xi	a
00:0003C3  FD322A              +642 
00:0003C4  FD0001              +642 
00:0003C5  FCF003              +642 
00:0003C6  FF05CA              +642 
00:0003C7  38000F              +642 
  :                            643 
00:0003C8  8F0766              +644 ur_sba	SIMD_CONTROL	(-1, 2, 6-1, 1q)
00:0003C9  870014              +644 
00:0003CA  9F076A              +645 ?	$do	6,	dpush	(-16384+?:d)
00:0003CB  9F076C              +645 
00:0003CC  9F076E              +645 
00:0003CD  9F0770              +645 
00:0003CE  9F0772              +645 
00:0003CF  9F0774              +645 
00:0003D0  5D0000              +646 	ly	0,,xi
00:0003D1  740776              +647 	rex	(sba	3, y)
00:0003D2  870004              +648 	qpop	a
00:0003D3  870008              +649 	qpop	8
00:0003D4  870010              +650 	qpop	d$save
00:0003D5  F80013              +651 	printf	$3("%x %x %x %x %x %x":10:0),,xi	b 7 9 11 d$save1 d$save3
00:0003D6  F80011              +651 
00:0003D7  F8000B              +651 
00:0003D8  F80009              +651 
00:0003D9  F80007              +651 
00:0003DA  F80005              +651 
00:0003DB  FD322C              +651 
00:0003DC  FD0001              +651 
00:0003DD  FCF008              +651 
00:0003DE  FF05CA              +651 
00:0003DF  38000F              +651 
  :                            652 
00:0003E0  8F0731              +653 ur_dsa	SIMD_CONTROL	(-1, 0, 0, 0q)
00:0003E1  870014              +653 
00:0003E2  9F0777              +654 	dpush	(-16384*/24)
00:0003E3  740779              +655 	rex	(dsa	16)
00:0003E4  380004              +656 	dpop	a
00:0003E5  380005              +656 
00:0003E6  9F0004              +657 	printf	$3("%lx":10:0),,xi	a,,long
00:0003E7  FD320B              +657 
00:0003E8  FD0001              +657 
00:0003E9  FCF004              +657 
00:0003EA  FF05CA              +657 
00:0003EB  38000F              +657 
  :                            658 
00:0003EC  FD002F              +659 ur_sa	push	47,,xi
00:0003ED  74077A              +660 	rex	(sa	8)
00:0003EE  17000F              +661 	inc	sp
00:0003EF  F80008              +662 	printf	$3("%x":10:0),,xi	8
00:0003F0  FD322A              +662 
00:0003F1  FD0001              +662 
00:0003F2  FCF003              +662 
00:0003F3  FF05CA              +662 
00:0003F4  38000F              +662 
  :                            663 
00:0003F5  FD0031              +664 ur_sb	push	49,,xi
00:0003F6  FDFFFF              +665 	push	-1,,xi
00:0003F7  74077B              +666 	rex	(sb	9)
00:0003F8  380004              +667 	dpop	a
00:0003F9  380005              +667 
00:0003FA  F80009              +668 	printf	$3("%x":10:0),,xi	9
00:0003FB  FD322A              +668 
00:0003FC  FD0001              +668 
00:0003FD  FCF003              +668 
00:0003FE  FF05CA              +668 
00:0003FF  38000F              +668 
  :                            669 
00:000400  FDFFFF              +670 ur_la	push	-1,,xi
00:000401  68077C              +671 	lb	('inb')
00:000402  74077D              +672 	rex	(la	b)
00:000403  380004              +673 	pop	a
00:000404  F80004              +674 	printf	$3("%x":10:0),,xi	a
00:000405  FD322A              +674 
00:000406  FD0001              +674 
00:000407  FCF003              +674 
00:000408  FF05CA              +674 
00:000409  38000F              +674 
  :                            675 
00:00040A  FDFFFF              +676 ur_lb	push	-1,,xi
00:00040B  FD0000              +677 	push	0,,xi
00:00040C  60077E              +678 	la	('ina')
00:00040D  74077F              +679 	rex	(lb	a)
00:00040E  380004              +680 	dpop	a
00:00040F  380005              +680 
00:000410  F80005              +681 	printf	$3("%x":10:0),,xi	b
00:000411  FD322A              +681 
00:000412  FD0001              +681 
00:000413  FCF003              +681 
00:000414  FF05CA              +681 
00:000415  38000F              +681 
  :                            682 
00:000416  F80780              +683 ur_or	push	(020202)
00:000417  740782              +684 	rex	(or	(050505))
00:000418  380004              +685 	pop	a
00:000419  F80004              +686 	printf	$3("%x":10:0),,xi	a
00:00041A  FD322A              +686 
00:00041B  FD0001              +686 
00:00041C  FCF003              +686 
00:00041D  FF05CA              +686 
00:00041E  38000F              +686 
  :                            687 
00:00041F  9F0783              +688 ur_orB	dpush	(0a0a0a:d)
00:000420  740786              +689 	rex	(orB	(040404))
00:000421  380004              +690 	dpop	a
00:000422  380005              +690 
00:000423  F80005              +691 	printf	$3("%x":10:0),,xi	b
00:000424  FD322A              +691 
00:000425  FD0001              +691 
00:000426  FCF003              +691 
00:000427  FF05CA              +691 
00:000428  38000F              +691 
  :                            692 
00:000429  F80787              +693 ur_and	push	(0e0e0e)
00:00042A  740788              +694 	rex	(and	1++-256,,xi)
00:00042B  380004              +695 	pop	a
00:00042C  F80004              +696 	printf	$3("%x":10:0),,xi	a	
00:00042D  FD322A              +696 
00:00042E  FD0001              +696 
00:00042F  FCF003              +696 
00:000430  FF05CA              +696 
00:000431  38000F              +696 
  :                            697 
00:000432  9F0789              +698 ur_andB	dpush	(0FFFFFF070707:d)
00:000433  74078B              +699 	rex	(andB	3++-256,,xi)
00:000434  380004              +700 	dpop	a
00:000435  380005              +700 
00:000436  F80005              +701 	printf	$3("%x":10:0),,xi	b
00:000437  FD322A              +701 
00:000438  FD0001              +701 
00:000439  FCF003              +701 
00:00043A  FF05CA              +701 
00:00043B  38000F              +701 
  :                            702 
00:00043C  F80787              +703 ur_xor	push	(0e0e0e)
00:00043D  74078D              +704 	rex	(xor	(0c0c0c))
00:00043E  380004              +705 	pop	a
00:00043F  F80004              +706 	printf	$3("%x":10:0),,xi	a
00:000440  FD322A              +706 
00:000441  FD0001              +706 
00:000442  FCF003              +706 
00:000443  FF05CA              +706 
00:000444  38000F              +706 
  :                            707 
00:000445  9F078E              +708 ur_xorB		dpush	(0e0e0e:d)
00:000446  740791              +709 	rex	(xorB	(0443322))
00:000447  380004              +710 	dpop	a	
00:000448  380005              +710 
00:000449  F80005              +711 	printf	$3("%x":10:0),,xi	b
00:00044A  FD322A              +711 
00:00044B  FD0001              +711 
00:00044C  FCF003              +711 
00:00044D  FF05CA              +711 
00:00044E  38000F              +711 
  :                            712 
00:00044F  FD005A              +713 ur_aa	push	90,,xi
00:000450  740792              +714 	rex	(aa	9,,xi)
00:000451  380004              +715 	pop	a
00:000452  F80004              +716 	printf	$3("%x":10:0),,xi	a
00:000453  FD322A              +716 
00:000454  FD0001              +716 
00:000455  FCF003              +716 
00:000456  FF05CA              +716 
00:000457  38000F              +716 
  :                            717 
00:000458  FD005A              +718 ur_ab	push	90,,xi
00:000459  FD0000              +719 	push	0,,xi
00:00045A  740793              +720 	rex	(ab	11,,xi)
00:00045B  380004              +721 	dpop	a
00:00045C  380005              +721 
00:00045D  F80005              +722 	printf	$3("%x":10:0),,xi	b
00:00045E  FD322A              +722 
00:00045F  FD0001              +722 
00:000460  FCF003              +722 
00:000461  FF05CA              +722 
00:000462  38000F              +722 
  :                            723 
00:000463  FD005A              +724 ur_ana	push	90,,xi
00:000464  740794              +725 	rex	(ana	-9,,xi)
00:000465  380004              +726 	pop	a
00:000466  F80004              +727 	printf	$3("%x":10:0),,xi	a
00:000467  FD322A              +727 
00:000468  FD0001              +727 
00:000469  FCF003              +727 
00:00046A  FF05CA              +727 
00:00046B  38000F              +727 
  :                            728 
00:00046C  8F0795              +729 ur_anb	SIMD_CONTROL	(-1, 2, 3-1, 0q)
00:00046D  870014              +729 
00:00046E  9F0799              +730 ?	$do	3,	dpush	(87+?:d)
00:00046F  9F079B              +730 
00:000470  9F079D              +730 
00:000471  74079F              +731 	rex	(anb	-11,,xi)
00:000472  870004              +732 	qpop	a
00:000473  380008              +733 	dpop	8
00:000474  380009              +733 
00:000475  F80009              +734 	printf	$3("%x %x %x":10:0),,xi	b 7 9
00:000476  F80007              +734 
00:000477  F80005              +734 
00:000478  FD3233              +734 
00:000479  FD0001              +734 
00:00047A  FCF005              +734 
00:00047B  FF05CA              +734 
00:00047C  38000F              +734 
  :                            735 
00:00047D  8F07A0              +736 ur_mf	SIMD_CONTROL	(-1, 1, 4-1, 1q)
00:00047E  870014              +736 
00:00047F  8F07A4              +737 	qpush	(-10, -8, -6, -4q)
00:000480  5507A8              +738 	lx	(-3, 4, -5, 6q),,xi
00:000481  7407AC              +739 	rex	(mf	0,x)
00:000482  870004              +740 	qpop	a
00:000483  F80007              +741 	printf	$3("%d %d %d %d":10:0),,xi	a b 6 7
00:000484  F80006              +741 
00:000485  F80005              +741 
00:000486  F80004              +741 
00:000487  FD3237              +741 
00:000488  FD0001              +741 
00:000489  FCF006              +741 
00:00048A  FF05CA              +741 
00:00048B  38000F              +741 
  :                            742 
00:00048C  8F0731              +743 ur_ds	SIMD_CONTROL	(-1, 0, 0, 0q)
00:00048D  870014              +743 
00:00048E  9F07AD              +744 	dpush	("abcdef")
00:00048F  7407AF              +745 	rex	(ds	6)
00:000490  380004              +746 	dpop	a
00:000491  380005              +746 
00:000492  9F0006              +747 	printf	$3("%lx":10:0),,xi	6,,long
00:000493  FD320B              +747 
00:000494  FD0001              +747 
00:000495  FCF004              +747 
00:000496  FF05CA              +747 
00:000497  38000F              +747 
  :                            748 
00:000498  9F07B0              +749 ur_dl	dpush	(-10d)
00:000499  CF07B2              +750 	dl	("ghijkl")
00:00049A  7407B4              +751 	rex	(dl	a)
00:00049B  380006              +752 	dpop	6
00:00049C  380007              +752 
00:00049D  9F0006              +753 	printf	$3("%lx":10:0),,xi	6,,long
00:00049E  FD320B              +753 
00:00049F  FD0001              +753 
00:0004A0  FCF004              +753 
00:0004A1  FF05CA              +753 
00:0004A2  38000F              +753 
  :                            754 
00:0004A3  8F07B5              +755 ur_qs	qpush	(-1*+10)
00:0004A4  7407B9              +756 	rex	(qs	8)
00:0004A5  870004              +757 	qpop	a
00:0004A6  8F0008              +758 	printf	$3("%f":10:0),,xi	8,,float
00:0004A7  FD3221              +758 
00:0004A8  FD0001              +758 
00:0004A9  FCF006              +758 
00:0004AA  FF05CA              +758 
00:0004AB  38000F              +758 
  :                            759 
00:0004AC  8F07BA              +760 ur_ql	qpush	(-1*+1)
00:0004AD  7407C2              +761 	rex	(ql	(10.3))
00:0004AE  870008              +762 	qpop	8
00:0004AF  8F0008              +763 	printf	$3("%f":10:0),,xi	8,,float
00:0004B0  FD3221              +763 
00:0004B1  FD0001              +763 
00:0004B2  FCF006              +763 
00:0004B3  FF05CA              +763 
00:0004B4  38000F              +763 
  :                            764 
00:0004B5  9F07C3              +765 ur_da	dpush	(10d)
00:0004B6  7407C7              +766 	rex	(da	(-5d))
00:0004B7  380004              +767 	dpop	a
00:0004B8  380005              +767 
00:0004B9  9F0004              +768 	printf	 $3("%lx":10:0),,xi	a,,long
00:0004BA  FD320B              +768 
00:0004BB  FD0001              +768 
00:0004BC  FCF004              +768 
00:0004BD  FF05CA              +768 
00:0004BE  38000F              +768 
  :                            769 	
00:0004BF  8F07C8              +770 ur_dan	SIMD_CONTROL	(-1, 2, 4-1, 0q)
00:0004C0  870014              +770 
00:0004C1  9F07B0              +771 ?	$do	4,	dpush	(-10-1+?:d)
00:0004C2  9F07CC              +771 
00:0004C3  9F07CE              +771 
00:0004C4  9F07D0              +771 
00:0004C5  7407D4              +772 	rex	(dan	(-20d))
00:0004C6  870004              +773 	qpop	a
00:0004C7  870008              +774 	qpop	8
00:0004C8  9F000A              +775 	printf  $3("%lx %lx %lx %lx":10:0),,xi	a,,long 6,,long 8,,long 10,,long
00:0004C9  9F0008              +775 
00:0004CA  9F0006              +775 
00:0004CB  9F0004              +775 
00:0004CC  FD323C              +775 
00:0004CD  FD0001              +775 
00:0004CE  FCF00A              +775 
00:0004CF  FF05CA              +775 
00:0004D0  38000F              +775 
  :                            776 
  :                            777 $(3)
  :                            778 masks32
03:003092  FFFFFF              +779 	$do	32,	-1
03:003093  FFFFFF              +779 
03:003094  FFFFFF              +779 
03:003095  FFFFFF              +779 
03:003096  FFFFFF              +779 
03:003097  FFFFFF              +779 
03:003098  FFFFFF              +779 
03:003099  FFFFFF              +779 
03:00309A  FFFFFF              +779 
03:00309B  FFFFFF              +779 
03:00309C  FFFFFF              +779 
03:00309D  FFFFFF              +779 
03:00309E  FFFFFF              +779 
03:00309F  FFFFFF              +779 
03:0030A0  FFFFFF              +779 
03:0030A1  FFFFFF              +779 
03:0030A2  FFFFFF              +779 
03:0030A3  FFFFFF              +779 
03:0030A4  FFFFFF              +779 
03:0030A5  FFFFFF              +779 
03:0030A6  FFFFFF              +779 
03:0030A7  FFFFFF              +779 
03:0030A8  FFFFFF              +779 
03:0030A9  FFFFFF              +779 
03:0030AA  FFFFFF              +779 
03:0030AB  FFFFFF              +779 
03:0030AC  FFFFFF              +779 
03:0030AD  FFFFFF              +779 
03:0030AE  FFFFFF              +779 
03:0030AF  FFFFFF              +779 
03:0030B0  FFFFFF              +779 
03:0030B1  FFFFFF              +779 
  :                            780 $(0)
  :                            781 
00:0004D1  F807D5              +782 ur_z	push	(0123456)
00:0004D2  38000D              +783 	pop	q
00:0004D3  553092              +784 	lx	masks32,,xi
00:0004D4  8F0704              +785 	SIMD_CONTROL	(-1, 0, 8-1, 1q)
00:0004D5  870014              +785 
  :                            786 
00:0004D6  7407D6              +787 	rex	(z	0, x, t3)
00:0004D7  7407D7              +788 	rex	(z	0, x, t1)
00:0004D8  7407D8              +789 	rex	(z	0, x)
00:0004D9  7407D9              +790 	rex	(z	0, x, t2)
  :                            791 
00:0004DA  F8000D              +792 	printf	$3("%x":10:0),,xi	q
00:0004DB  FD322A              +792 
00:0004DC  FD0001              +792 
00:0004DD  FCF003              +792 
00:0004DE  FF05CA              +792 
00:0004DF  38000F              +792 
00:0004E0  8F3096              +793 	printf	$3("%x %x %x %x %x %x %x %x":10:0),,xi	masks32,,float192
00:0004E1  8F3092              +793 
00:0004E2  FD3242              +793 
00:0004E3  FD0001              +793 
00:0004E4  FCF00A              +793 
00:0004E5  FF05CA              +793 
00:0004E6  38000F              +793 
00:0004E7  8F309E              +794 	printf	$3("%x %x %x %x %x %x %x %x":10:0),,xi	masks32+8,,float192
00:0004E8  8F309A              +794 
00:0004E9  FD3242              +794 
00:0004EA  FD0001              +794 
00:0004EB  FCF00A              +794 
00:0004EC  FF05CA              +794 
00:0004ED  38000F              +794 
00:0004EE  8F30A6              +795 	printf	$3("%x %x %x %x %x %x %x %x":10:0),,xi	masks32+16,,float192
00:0004EF  8F30A2              +795 
00:0004F0  FD3242              +795 
00:0004F1  FD0001              +795 
00:0004F2  FCF00A              +795 
00:0004F3  FF05CA              +795 
00:0004F4  38000F              +795 
00:0004F5  8F30AE              +796 	printf	$3("%x %x %x %x %x %x %x %x":10:0),,xi	masks32+24,,float192
00:0004F6  8F30AA              +796 
00:0004F7  FD3242              +796 
00:0004F8  FD0001              +796 
00:0004F9  FCF00A              +796 
00:0004FA  FF05CA              +796 
00:0004FB  38000F              +796 
  :                            797 
00:0004FC  8F0731              +798 	SIMD_CONTROL	(-1, 0, 0, 0q)	. change to default
00:0004FD  870014              +798 
00:0004FE  350000              +799 	lret	0
  :                            800 
00:0004FF  50305B              +801 uaa	lx	return+1
00:000500  60305A              +802 	la	return
00:000501  C0A000              +803 	aa	0, x
00:000502  350000              +804 	lret	0
  :                            805 
00:000503  FD305B              +806 ud	sscanf	$3("%ld:%d":0),,xi	relay,,xi	return+1,,xi
00:000504  FD305C              +806 
00:000505  FD324B              +806 
00:000506  FCF003              +806 
00:000507  FF05A0              +806 
00:000508  38000F              +806 
00:000509  CF0747              +807 	dl	(1000000000000)
00:00050A  F50003              +808 	d	3,,xi
00:00050B  F80005              +809 	printf	$3("%ld %d":10:0),,xi 6 a b
00:00050C  F80004              +809 
00:00050D  F80006              +809 
00:00050E  FD3227              +809 
00:00050F  FD0001              +809 
00:000510  FCF005              +809 
00:000511  FF05CA              +809 
00:000512  38000F              +809 
00:000513  350000              +810 	lret	0
  :                            811 
00:000514  60305A              +812 uxor	la	return
00:000515  50305B              +813 	lx	return+1
00:000516  B0A000              +814 	xor	0, x
00:000517  350000              +815 	lret	0
  :                            816 
00:000518  8F07DA              +817 uxtend	SIMD_CONTROL	(-1, 0, 8000000-1, 0q)
00:000519  870014              +817 
00:00051A  8F07DE              +818 	qpush	(1.0*+1250000)
00:00051B  7407E2              +819 	rex	(fd	(10.0))
00:00051C  870008              +820 	qpop	8
00:00051D  8F0008              +821 	printf	$3("%f":10:0),,xi	8,,float
00:00051E  FD3221              +821 
00:00051F  FD0001              +821 
00:000520  FCF006              +821 
00:000521  FF05CA              +821 
00:000522  38000F              +821 
00:000523  8F0731              +822 	SIMD_CONTROL	(-1, 0, 0, 0q)
00:000524  870014              +822 
00:000525  350000              +823 	lret	0
  :                            824 
00:000526  380002              +825 uclam	pop	x
00:000527  9F0747              +826 	dpush	(1000000000000)
00:000528  050008              +827 	on	fp$r
00:000529  7407E4              +828 	rex	(fd	(3))
00:00052A  0D0008              +829 	off	fp$r
00:00052B  B6A000              +830 	j	0, x
  :                            831 
00:00052C  5507E5              +832 ur_tz	lx	(-6, -5, -4, -3, -2, -1, 0, 1o),,xi
00:00052D  8F0704              +833 	SIMD_CONTROL	(-1, 0, 8-1, 1q)
00:00052E  870014              +833 
00:00052F  7407ED              +834 	rex	(tz	0, x)
00:000530  350000              +835 	lret	0
00:000531  8F0731              +836 	SIMD_CONTROL	(-1, 0, 0, 0q)
00:000532  870014              +836 
00:000533  350000              +837 	lret	0
  :                            838 
00:000534  5507E5              +839 ur_tp	lx	(-6, -5, -4, -3, -2, -1, 0, 1o),,xi
00:000535  8F0704              +840 	SIMD_CONTROL	(-1, 0, 8-1, 1q)
00:000536  870014              +840 
00:000537  7407EE              +841 	rex	(tp	0, x)
00:000538  350000              +842 	lret	0
00:000539  8F0731              +843 	SIMD_CONTROL	(-1, 0, 0, 0q)
00:00053A  870014              +843 
00:00053B  350000              +844 	lret	0
  :                            845 
00:00053C  8F000C              +846 overlap	qpush	p
00:00053D  9F000E              +847 	dpush	fp
00:00053E  38000E              +848 	dpop	fp
00:00053F  38000F              +848 
00:000540  87000C              +849 	qpop	p
00:000541  350000              +850 	lret	0
  :                            851 
  :                            852 zlist*	$proc
  :                            853 ?	$do	zlist(1),	+	zlist(1, ?)
  :                            854 	$end
  :                            855 
  :                            856 urex_vector
  :                            857 
  :                            858 $(3)
  :                            859 count	$res	1
  :                            860 count1	$res	1
  :                            861 outline	$res	24*24/3
  :                            862 
  :                            863 $(0)
00:000542  FDFFA1              +864 	push	-95,,xi				. 96-word frame
00:000543  2F000F              +865 	popA	sp
  :                            866 
00:000544  8F07EF              +867 	SIMD_CONTROL	(-1, 4, 24-1, 4q)	. default vector is frame of 24 floats
00:000545  870014              +867 
  :                            868 
                                	lx	(zlist	1.0, 2.0, 3.0, 4.0, 5.0, 6.0,		;
                                			7.0, 8.0, 9.0, 10.0, 11.0, 12.0,	;
                                			13.0, 14.0, 15.0, 16.0, 17.0, 18.0,	;
00:000546  5507F3              +872 			19.0, 20.0, 21.0, 22.0, 23.0, 24.0),,xi
  :                            873 
00:000547  740853              +874 	rex	(ql	0, x)		. load SIMD Frame 24 * 96-bit float
  :                            875 					. register increment and ea increment are both 1 float
  :                            876 					. 12 floats in storage to add
  :                            877 
00:000548  550854              +878 	lx	(zlist	20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0),,xi
  :                            879 
  :                            880 						. vector is 12 floats (48 words)
00:000549  FCF018              +881 	SIMD_TARGET	6*4,sp	12-1		. @ frame + 6 floats (24 words)
00:00054A  38000D              +881 
00:00054B  FD000B              +881 
00:00054C  380014              +881 
00:00054D  740884              +882 	rex	(fa	0, x)			. 12 floating operations
  :                            883 
00:00054E  5530B4              +884 	lx	outline,,xi			. start print stream
00:00054F  FF0885              +885 	call	(wstream_starta)		. this overwrites SIMD control registers
  :                            886 						. but SIMD default controls are restored after
  :                            887 
00:000550  450003              +888 	lr	4-1,,xi				. 4 lines
  :                            889 
  :                            890 publish_line
00:000551  0030B3              +891 	sr	count1	
00:000552  450005              +892 	lr	6-1,,xi				. * 6 floats
  :                            893 
00:000553  0030B2              +894 publish	sr	count
00:000554  600886              +895 	la	(' '*/16)
00:000555  1D0008              +896 	wsr	$byte
00:000556  170010              +897 	inc	BYTES
00:000557  870004              +898 	qpop	a				. take a float off the internal stack top
00:000558  FF0887              +899 	call	(feditia)			. compose it into the display line
00:000559  4030B2              +900 	lr	count
00:00055A  1E0553              +901 	jdr	publish
  :                            902 
00:00055B  600888              +903 	la	(LF*/16)
00:00055C  1D0008              +904 	wsr	$byte
00:00055D  170010              +905 	inc	BYTES
00:00055E  4030B3              +906 	lr	count1
00:00055F  1E0551              +907 	jdr	publish_line
  :                            908 
00:000560  1D0010              +909 	wsr	$word-$byte			. push out last bytes
  :                            910 
00:000561  F80010              +911 	c	(write)	stdout	outline,,xi	BYTES
00:000562  FD30B4              +911 
00:000563  FD0001              +911 
00:000564  FCF003              +911 
00:000565  FF0889              +911 
00:000566  38000F              +911 
00:000567  FD0001              +912 	c	(fsync)	stdout
00:000568  FCF001              +912 
00:000569  FF088A              +912 
00:00056A  38000F              +912 
  :                            913 
00:00056B  8F0731              +914 	SIMD_CONTROL	(-1, 0, 0, 0q)		. restore SIMD default controls
00:00056C  870014              +914 
00:00056D  350000              +915 	lret	0
  :                            916 
  :                            917 ra_thread
00:00056E  650001              +918 	la	1,,xi
00:00056F  75004C              +919 	ii	AFFINITY$
00:000570  75004B              +920 	ii	I$TABLE
  :                            921 
00:000571  650001              +922 ?	$do	8,	take_on
00:000572  75004F              +922 
00:000573  650002              +922 
00:000574  75004F              +922 
00:000575  650003              +922 
00:000576  75004F              +922 
00:000577  650004              +922 
00:000578  75004F              +922 
00:000579  650005              +922 
00:00057A  75004F              +922 
00:00057B  650006              +922 
00:00057C  75004F              +922 
00:00057D  650007              +922 
00:00057E  75004F              +922 
00:00057F  650008              +922 
00:000580  75004F              +922 
  :                            923 
  :                            924 
  :                            925 ra_thread_onward
00:000581  650001              +926 	la	XINT,,xi
00:000582  75005C              +927 	ii	EVENT_WAIT$
00:000583  B60581              +928 	j	ra_thread_onward
  :                            929 	
  :                            930 	
  :                            931 		
                                display	$head_near	 params(where,		int	;
  :                            933 				how_much,	int	)
  :                            934 
00:000584  40F003              +935 more	lr	how_much
00:000585  50F002              +936 	lx	where
00:000586  17F002              +937 	inc	where
00:000587  F60590              +938 	jxge	curtail
  :                            939 
00:000588  F8A000              +940 	printf	$3(" %x":0),,xi	0, x
00:000589  FD324E              +940 
00:00058A  FD0001              +940 
00:00058B  FCF003              +940 
00:00058C  FF05CA              +940 
00:00058D  38000F              +940 
00:00058E  850001              +941 	ax	1,,xi
00:00058F  B60584              +942 	j	more
  :                            943 
00:000590  FD0001              +944 curtail	c	(write)	stdout	$3("":10),,xi	1,,xi
00:000591  FD3198              +944 
00:000592  FD0001              +944 
00:000593  FCF003              +944 
00:000594  FF0889              +944 
00:000595  38000F              +944 
00:000596  FD0001              +945 	c	(fsync)	stdout
00:000597  FCF001              +945 
00:000598  FF088A              +945 
00:000599  38000F              +945 
00:00059A  350000              +946 	$ret
  :                            947 
  :                            948 	$do	$<256,$(0:256)
  :                            949 
  :                            950 FS_BASE*        $set    $zenith+63**-64
  :                            951 FS_SAFE_LIMIT*  $set    4096			. _NEXTP*/12
  :                            952 
*EOF*
00:00059b+[0001]18:000000
00:00059c+[0003]30:000000000000
00:00059e+0001CD
00:00059f+0001E4
00:0005a0+0001D8
00:0005a1+00002E
00:0005a2+696E666F726D
00:0005a4+666F726D6174
00:0005a6+6C656E677468
00:0005a8+636174656E61
00:0005aa+687700000000
00:0005ac+747700000000
00:0005ae+74696D650000
00:0005b0+746573740000
00:0005b2+666F726D6178
00:0005b4+643732000000
00:0005b6+0005A2
0005A4
0005A6
0005A8
0005AA
0005AC
0005AE
0005B0
0005B2
0005B4
00:0005c0+0000AF
0000BB
0000DB
0000D1
0000E6
00010B
000136
000181
0000C8
000162
00:0005ca+0001DB
00:0005cb+00317F
003182
003185
003188
00318B
00318C
00318D
00318F
003191
003194
00:0005d5+0001A7
00:0005d6+00019C
00:0005d7+000199
00:0005d8+000222
00:0005d9+000223
00:0005da+000224
00:0005db+000197
00:0005dc+000196
00:0005dd+726566000000
00:0005df+6A0000000000
00:0005e1+676F00000000
00:0005e3+63616C6C0000
00:0005e5+667265740000
00:0005e7+697200000000
00:0005e9+736972000000
00:0005eb+626172670000
00:0005ed+626174730000
00:0005ef+62616E670000
00:0005f1+626173650000
00:0005f3+6C6F61640000
00:0005f5+73746F726500
00:0005f7+707573680000
00:0005f9+706F70000000
00:0005fb+6C63616C0000
00:0005fd+6C7265740000
00:0005ff+6C7265746368
00:000601+706F70410000
00:000603+696900000000
00:000605+676969000000
00:000607+78696E740000
00:000609+73696D000000
00:00060b+697265717300
00:00060d+6C61756E6368
00:00060f+6F7574410000
00:000611+6F7574420000
00:000613+616374697661
00:000615+786572630000
00:000617+6F6E00000000
00:000619+6F6666000000
00:00061b+616100000000
00:00061d+725F6D746100
00:00061f+647465000000
00:000621+725F64746500
00:000623+726578000000
00:000625+72616E676500
00:000627+645F5F000000
00:000629+786F72000000
00:00062b+7874656E6400
00:00062d+636C616D0000
00:00062f+725F747A0000
00:000631+725F74700000
00:000633+7265785F7665
00:000635+6F7665726C61
00:000637+0005DD
0005DF
0005E1
0005E3
0005E5
0005E7
0005E9
0005EB
0005ED
0005EF
0005F1
0005F3
0005F5
0005F7
0005F9
0005FB
0005FD
0005FF
000601
000603
000605
000607
000609
00060B
00060D
00060F
000611
000613
000615
000617
000619
00061B
00061D
00061F
000621
000623
000625
000627
000629
00062B
00062D
00062F
000631
000633
000635
00:000664+0031B1
0031B3
0031B4
0031B5
0031B7
0031B9
0031BA
0031BC
0031BE
0031C0
0031C2
0031C4
0031C6
0031C8
0031CA
0031CC
0031CE
0031D0
0031D3
0031D5
0031D6
0031D8
0031DA
0031DC
0031DE
0031E1
0031E3
0031E5
0031E8
0031EA
0031EB
0031ED
0031EE
0031F0
0031F2
0031F4
0031F6
0031F8
0031FA
0031FC
0031FE
003200
003202
003204
003208
00:000691+7C0000
00:000692+803058
00:000693+000000000000
00:000695+0000007C0000
00:000697+400001
00:000698+8FFFFF
00:000699+000008
00:00069a+000004
00:00069b+000002
00:00069c+03C000
00:00069d+00056E000001000000000000
00:0006a1+400000
00:0006a2+400004A00000000000000000
00:0006a6+400007C80000000000000000
00:0006aa+40000AFA0000000000000000
00:0006ae+40000E9C4000000000000000
00:0006b2+400011C35000000000000000
00:0006b6+400014F42400000000000000
00:0006ba+400018989680000000000000
00:0006be+40001BBEBC20000000000000
00:0006c2+40001EEE6B28000000000000
00:0006c6+4000229502F9000000000000
00:0006ca+400025BA43B7400000000000
00:0006ce+400028E8D4A5100000000000
00:0006d2+40002C9184E72A0000000000
00:0006d6+40002FB5E620F48000000000
00:0006da+400032E35FA931A000000000
00:0006de+4000368E1BC9BF0400000000
00:0006e2+400039B1A2BC2EC500000000
00:0006e6+40003CDE0B6B3A7640000000
00:0006ea+4000408AC7230489E8000000
00:0006ee+400043AD78EBC5AC62000000
00:0006f2+FFFFFF000004000028000000
00:0006f6+400001800000000000000000
00:0006fa+6706F6
00:0006fb+333333555555777777AAAAAACCCCCCEEEEEE111111BBBBBB
00:000703+EEEEEE
00:000704+FFFFFF000000000007000001
00:000708+AFA000
00:000709+6162636465666768696A6B6C6D6E6F707172737475767778
797A4142434445464748494A4B4C4D4E4F50515253545556
5758595A3031323334353637
00:00071d+5758595A3031
00:00071f+FFFFFF000000000009000002
00:000723+57A000
00:000724+40000F800000000000000000
00:000728+BFFFF17FFFFFFFFFFFFFFFFF
00:00072c+670728
00:00072d+FFFFFF000004000013000000
00:000731+FFFFFF000000000000000000
00:000735+400004C00000000000000000
00:000739+3FFFFFAAAAAAAAAAAAAAAAAB
00:00073d+770739
00:00073e+7F5C5FD073B91C16D7C6492B
00:000742+400002C00000000000000000
00:000746+7F0742
00:000747+00E8D4A51000
00:000749+F50003
00:00074a+FF172B5AF000
00:00074c+F5FFFD
00:00074d+033333333333
00:00074f+E50007
00:000750+060003
00:000751+500000
00:000752+000014
00:000753+0E8752
00:000754+C60000000000
00:000756+160029
00:000757+260011
00:000758+2E0013
00:000759+000000000063
00:00075b+360012
00:00075c+460009
00:00075d+4E0011
00:00075e+000AAAAAA000
00:000760+560019
00:000761+000013
00:000762+668761
00:000763+6E000F
00:000764+760017
00:000765+860001
00:000766+FFFFFF000002000005000001
00:00076a+FFFFFFFFC001
00:00076c+FFFFFFFFC002
00:00076e+FFFFFFFFC003
00:000770+FFFFFFFFC004
00:000772+FFFFFFFFC005
00:000774+FFFFFFFFC006
00:000776+8EB003
00:000777+FFC000000000
00:000779+960010
00:00077a+200008
00:00077b+280009
00:00077c+696E62
00:00077d+600005
00:00077e+696E61
00:00077f+680004
00:000780+020202
00:000781+050505
00:000782+900781
00:000783+0000000A0A0A
00:000785+040404
00:000786+980785
00:000787+0E0E0E
00:000788+A5FF01
00:000789+FFFFFF070707
00:00078b+ADFF03
00:00078c+0C0C0C
00:00078d+B0078C
00:00078e+0000000E0E0E
00:000790+443322
00:000791+B80790
00:000792+C50009
00:000793+CD000B
00:000794+D5FFF7
00:000795+FFFFFF000002000002000000
00:000799+000000000058
00:00079b+000000000059
00:00079d+00000000005A
00:00079f+DDFFF5
00:0007a0+FFFFFF000001000003000001
00:0007a4+FFFFF6FFFFF8FFFFFAFFFFFC
00:0007a8+FFFFFD000004FFFFFB000006
00:0007ac+E8A000
00:0007ad+616263646566
00:0007af+C70006
00:0007b0+FFFFFFFFFFF6
00:0007b2+6768696A6B6C
00:0007b4+CF0004
00:0007b5+BFFFDD6AFD06FFFFFFFFFFFF
00:0007b9+470008
00:0007ba+BFFFFB5FFFFFFFFFFFFFFFFF
00:0007be+400004A4CCCCCCCCCCCCCCCD
00:0007c2+4F07BE
00:0007c3+00000000000A
00:0007c5+FFFFFFFFFFFB
00:0007c7+D707C5
00:0007c8+FFFFFF000002000003000000
00:0007cc+FFFFFFFFFFF7
00:0007ce+FFFFFFFFFFF8
00:0007d0+FFFFFFFFFFF9
00:0007d2+FFFFFFFFFFEC
00:0007d4+DF07D2
00:0007d5+123456
00:0007d6+33A000
00:0007d7+31A000
00:0007d8+30A000
00:0007d9+32A000
00:0007da+FFFFFF0000007A11FF000000
00:0007de+7F5C5B8AF7D0BD648FD9861D
00:0007e2+7F06A2
00:0007e3+000003
00:0007e4+7F07E3
00:0007e5+FFFFFAFFFFFBFFFFFCFFFFFDFFFFFEFFFFFF000000000001
00:0007ed+70A000
00:0007ee+78A000
00:0007ef+FFFFFF000004000017000004
00:0007f3+400001800000000000000000
400002800000000000000000
400002C00000000000000000
400003800000000000000000
400003A00000000000000000
400003C00000000000000000
400003E00000000000000000
400004800000000000000000
400004900000000000000000
400004A00000000000000000
400004B00000000000000000
400004C00000000000000000
400004D00000000000000000
400004E00000000000000000
400004F00000000000000000
400005800000000000000000
400005880000000000000000
400005900000000000000000
400005980000000000000000
400005A00000000000000000
400005A80000000000000000
400005B00000000000000000
400005B80000000000000000
400005C00000000000000000
00:000853+4FA000
00:000854+400005A00000000000000000
400005A80000000000000000
400005B00000000000000000
400005B80000000000000000
400005C00000000000000000
400005C80000000000000000
400005D00000000000000000
400005D80000000000000000
400005E00000000000000000
400005E80000000000000000
400005F00000000000000000
400005F80000000000000000
00:000884+67A000
00:000885+000203
00:000886+200000
00:000887+00020F
00:000888+0A0000
00:000889+0001D4
00:00088a+0001D6
03:003174+257320257320257320257300
03:003178+257800
03:003179+5B636F6D6D616E645F6E616D65735D000000
03:00317f+696E666F726D000000
03:003182+666F726D6174000000
03:003185+6C656E677468000000
03:003188+636174656E61000000
03:00318b+687700
03:00318c+747700
03:00318d+74696D650000
03:00318f+746573740000
03:003191+666F726D6178000000
03:003194+643732000000
03:003196+202573000000
03:003198+0A0000
03:003199+256C660A0000
03:00319b+25640A000000
03:00319d+257178000000
03:00319f+25730A25730A25730A000000
03:0031a3+25642E25643A25642E25640A000000
03:0031a8+257320256A642025640A0000
03:0031ac+256A642025640A0000
03:0031af+25783A257800
03:0031b1+726566000000
03:0031b3+6A0000
03:0031b4+676F00
03:0031b5+63616C6C0000
03:0031b7+667265740000
03:0031b9+697200
03:0031ba+736972000000
03:0031bc+626172670000
03:0031be+626174730000
03:0031c0+62616E670000
03:0031c2+626173650000
03:0031c4+6C6F61640000
03:0031c6+73746F726500
03:0031c8+707573680000
03:0031ca+706F70000000
03:0031cc+6C63616C0000
03:0031ce+6C7265740000
03:0031d0+6C7265746368656400
03:0031d3+706F70410000
03:0031d5+696900
03:0031d6+676969000000
03:0031d8+78696E740000
03:0031da+73696D000000
03:0031dc+697265717300
03:0031de+6C61756E6368000000
03:0031e1+6F7574410000
03:0031e3+6F7574420000
03:0031e5+616374697661746500
03:0031e8+786572630000
03:0031ea+6F6E00
03:0031eb+6F6666000000
03:0031ed+616100
03:0031ee+725F6D746100
03:0031f0+647465000000
03:0031f2+725F64746500
03:0031f4+757265780000
03:0031f6+72616E676500
03:0031f8+645F5F000000
03:0031fa+786F72000000
03:0031fc+7874656E6400
03:0031fe+636C616D0000
03:003200+725F747A0000
03:003202+725F74700000
03:003204+7265785F766563746F720000
03:003208+6F7665726C61700000
03:00320b+256C780A0000
03:00320d+6170706C69636174696F6E20737061636520696E74657272
7570742068616E646C657200
03:003219+7261207468726561642025780A0000
03:00321e+25783A25780A000000
03:003221+25660A000000
03:003223+2566200A0000
03:003225+256C640A0000
03:003227+256C642025640A0000
03:00322a+25780A000000
03:00322c+25782025782025782025782025782025780A000000
03:003233+25782025782025780A000000
03:003237+25642025642025642025640A000000
03:00323c+256C7820256C7820256C7820256C780A0000
03:003242+25782025782025782025782025782025782025782025780A
000000
03:00324b+256C643A2564000000
03:00324e+202578000000
:$(00):000000:00088B :$(02):002000:003000 :$(03):003000:003250 
tal.msm: object code 17079 bytes: 0 errors: 4 undefined labels
