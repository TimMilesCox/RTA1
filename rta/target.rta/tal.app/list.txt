MASMX 7r3A Build 12
3/tal.msm
*EOF*
  :                            1 
  :                            20 	$list
  :                            21 
  :                            22 __BASE	$equ	TAL_LOADP
  :                            23 
  :                            24 SUMMIT_3(1)     $equ    SUMMIT$3
  :                            25 ITHREAD_HIRAM(1) $equ   ITHREAD_FP
  :                            26 
  :                            27 	$set_option	"z"
  :                            28 
  :                            29 $(3:03000/$3)
  :                            30 what	$res	4
  :                            31 how	$res	72//3
  :                            32 left	$res	72//3
  :                            33 right	$res	72//3
  :                            34 capture	$res	36//3
  :                            35 
03:003058  0000C8 3FFFFF        +36 gate	200, 03FFFFF:d
03:00305A  3FFFFF 0000C8        +37 return	03FFFFF, 200d
03:00305C  000000 000000        +38 relay	0L
03:00305E  000000              +39 fields	0
03:00305F  003034              +40 offset	+	right
  :                            41 
  :                            42 inputd	$res	144/3
  :                            43 
03:003090  000000              +44 ra_thread_id	0
03:003091  000000              +45 xtarget	0
  :                            46 
  :                            47 $(0:0/$0)
  :                            48 
[+0001]18
[+0000]18*/30
00:000040  000050 000000 001000 000000
                              +49 	catalog
00:000044  4D0003              +49 
00:000045  000000              +49 
[+0002]30
00:000046  000000 000000        +49 
[+0000]18
[+0001]18*/48
00:000048  800040 000007 001000 FFFFFF 000000 000000 000050 000000
                              +49 
  :                            50 
00:000050  60207F              +51 start	$base_d	$zenith(3)-03000  0400
00:000051  340003              +51 
00:000052  6005A2              +51 
00:000053  75007A              +51 
00:000054  654000              +51 
00:000055  20000E              +51 
  :                            52 
00:000056  054000              +53 	on	see$1
00:000057  401043              +54 	lr	ABT+3
00:000058  0C0041              +55 	inB	65
00:000059  701043              +56 	tz	ABT+3
00:00005A  781043              +57 	tp	ABT+3
00:00005B  75005F              +58 	ii	GUARD$
00:00005C  0D4000              +59 	off	see$1
  :                            60 
00:00005D  9F05A3              +61 	c	(seg$load)	0,,xi	(tal_data:d),,long
00:00005E  FD0000              +61 
00:00005F  FCF003              +61 
00:000060  FF05A5              +61 
00:000061  38000F              +61 
  :                            62 
00:000062  303001              +63 input	z	what+1
00:000063  303005              +64 	z	how+1
  :                            65 
00:000064  FD0090              +66 	fgets	inputd,,xi	144	stdin
00:000065  FD3060              +66 
00:000066  FD0000              +66 
00:000067  FCF003              +66 
00:000068  FF05A6              +66 
00:000069  38000F              +66 
00:00006A  160018              +66 
00:00006B  1D0018              +66 
00:00006C  EE006F              +66 
00:00006D  CE006F              +66 
00:00006E  653060              +66 
00:00006F  FD3034              +67 	sscanf	inputd,,xi	$3("%s %s %s %s":0),,xi	what,,xi how,,xi left,,xi right,,xi
00:000070  FD301C              +67 
00:000071  FD3004              +67 
00:000072  FD3000              +67 
00:000073  FD3174              +67 
00:000074  FD3060              +67 
00:000075  FCF006              +67 
00:000076  FF05A7              +67 
00:000077  38000F              +67 
  :                            68 
00:000078  20305E              +69 	sa	fields
  :                            70 .	jza	leave		. stdin eof
00:000079  E600AE              +71 	jna	leave		. stdin disconnected
00:00007A  D6007D              +72 	jnza	input1
00:00007B  750041              +73 	ii	YIELD$
00:00007C  B60062              +74 	j	input
  :                            75 
00:00007D  C5FFFD              +76 input1	aa	-3,,xi
00:00007E  E60085              +77 	jna	input2
  :                            78 
00:00007F  FD305F              +79 	sscanf	left,,xi	$3("%x":0),,xi	offset,,xi
00:000080  FD3178              +79 
00:000081  FD301C              +79 
00:000082  FCF003              +79 
00:000083  FF05A7              +79 
00:000084  38000F              +79 
  :                            80 
  :                            81 
  :                            82 input2
00:000085  603000              +83 	la	what
00:000086  060010              +84 	sar	$word-$byte
00:000087  4D00FF              +85 	lk	255,,xi
00:000088  AF0001              +86 	mtane	k
00:000089  B6008B              +86 
00:00008A  B600AE              +87 	j	leave		. ctrl-D 
00:00008B  AF05A8              +88 	mtane	('.')
00:00008C  B6008E              +88 
00:00008D  B600AE              +89 	j	leave		. leave command
  :                            90 
                                	lookup	what					;
                                		inform, format, length, catena,		;
00:00008E  55000A              +93 		hw, tw, time, test, formax, d72
00:00008F  85FFFF              +93 
00:000090  60A5BD              +93 
00:000091  CFC000              +93 
00:000092  DF3000              +93 
00:000093  900005              +93 
00:000094  68A5C7              +93 
00:000095  C6D000              +93 
00:000096  700002              +93 
00:000097  B6008F              +93 
  :                            94 
  :                            95 
00:000098  FD3179              +96 	prompt	inform, format, length, catena, hw, tw, time, test, formax, d72
00:000099  FD0001              +96 
00:00009A  FCF002              +96 
00:00009B  FF05D1              +96 
00:00009C  38000F              +96 
00:00009D  45000A              +96 
00:00009E  550000              +96 
00:00009F  F8A5D2              +96 
00:0000A0  FD3196              +96 
00:0000A1  FD0001              +96 
00:0000A2  FCF003              +96 
00:0000A3  FF05D1              +96 
00:0000A4  38000F              +96 
00:0000A5  850001              +96 
00:0000A6  F600A8              +96 
00:0000A7  B6009F              +96 
00:0000A8  FD3198              +96 
00:0000A9  FD0001              +96 
00:0000AA  FCF002              +96 
00:0000AB  FF05D1              +96 
00:0000AC  38000F              +96 
  :                            97 
00:0000AD  B60062              +98 	j	input
  :                            99 
00:0000AE  3D0000              +100 leave	fret	0
  :                            101 
00:0000AF  FD304C              +102 inform	sscanf	left,,xi how,,xi capture,,xi			. input -> [specification] -> capture
00:0000B0  FD3004              +102 
00:0000B1  FD301C              +102 
00:0000B2  FCF003              +102 
00:0000B3  FF05A7              +102 
00:0000B4  38000F              +102 
  :                            103 
00:0000B5  FD3054              +104 	lc	display		capture,,xi	capture+8,,xi
00:0000B6  FD304C              +104 
00:0000B7  FCF002              +104 
00:0000B8  3E058B              +104 
00:0000B9  38000F              +104 
00:0000BA  B60062              +105 	j	input
  :                            106 
  :                            107 
00:0000BB  8F3050              +108 format	printf	how,,xi	capture,,float192			. maximum size display object
00:0000BC  8F304C              +108 
00:0000BD  FD3004              +108 
00:0000BE  FD0001              +108 
00:0000BF  FCF00A              +108 
00:0000C0  FF05D1              +108 
00:0000C1  38000F              +108 
00:0000C2  FD3198              +109 	printf	$3("":10:0),,xi
00:0000C3  FD0001              +109 
00:0000C4  FCF002              +109 
00:0000C5  FF05D1              +109 
00:0000C6  38000F              +109 
00:0000C7  B60062              +110 	j	input
  :                            111 
00:0000C8  9F304C              +112 formax	printf	$3("%lf":10),,xi capture,,floating_packed	. promoted by fpx instruction
00:0000C9  9FF000              +112 
00:0000CA  FF05DC              +112 
00:0000CB  FD3199              +112 
00:0000CC  FD0001              +112 
00:0000CD  FCF006              +112 
00:0000CE  FF05D1              +112 
00:0000CF  38000F              +112 
00:0000D0  B60062              +113         j	input
  :                            114 
00:0000D1  FD301C              +115 catena	c	(strcat)	how,,xi	left,,xi
00:0000D2  FD3004              +115 
00:0000D3  FCF002              +115 
00:0000D4  FF05DD              +115 
00:0000D5  38000F              +115 
00:0000D6  FD301C              +116 	lc	display		how,,xi	how+72//3,,xi		. falls thru and reports new length
00:0000D7  FD3004              +116 
00:0000D8  FCF002              +116 
00:0000D9  3E058B              +116 
00:0000DA  38000F              +116 
  :                            117 
00:0000DB  FD3004              +118 length	c	(strlen)	how,,xi
00:0000DC  FCF001              +118 
00:0000DD  FF05DE              +118 
00:0000DE  38000F              +118 
00:0000DF  F80004              +119 	printf	$3("%d":10:0),,xi	a
00:0000E0  FD319B              +119 
00:0000E1  FD0001              +119 
00:0000E2  FCF003              +119 
00:0000E3  FF05D1              +119 
00:0000E4  38000F              +119 
00:0000E5  B60062              +120 	j	input
  :                            121 
  :                            122 swivel*	$proc
  :                            123 	la	swivel(1, 1),,swivel(1, 3)+?-1
  :                            124 	sa	0, x, 4-?				. show inserted value
  :                            125 	sa	?, x					. show register value
  :                            126 	z	4+?*2-2, x
  :                            127 	z	4+?*2-2+1, x
  :                            128 	n	4+?*2-2+1, x
  :                            129 	sa	4+?*2-2, x, swivel(1, 3)+?-1		. show insert to zero
  :                            130 	sa	4+?*2-2+1, x, swivel(1, 3)+?-1		. show insert to FFFFFF
  :                            131 	$end
  :                            132 
00:0000E6  FD304C              +133 hw	sscanf	how,,xi		$3("%qx":0),,xi	capture,,xi
00:0000E7  FD319D              +133 
00:0000E8  FD3004              +133 
00:0000E9  FCF003              +133 
00:0000EA  FF05A7              +133 
00:0000EB  38000F              +133 
  :                            134 
00:0000EC  050080              +135 	on	half$w
00:0000ED  50305F              +136 	lx	offset
  :                            137 
00:0000EE  62304F              +138 ?	$do	2,	swivel	capture+3,,h1
00:0000EF  23A000              +138 
00:0000F0  20A001              +138 
00:0000F1  30A004              +138 
00:0000F2  30A005              +138 
00:0000F3  0FA005              +138 
00:0000F4  22A004              +138 
00:0000F5  22A005              +138 
00:0000F6  63304F              +138 
00:0000F7  22A000              +138 
00:0000F8  20A002              +138 
00:0000F9  30A006              +138 
00:0000FA  30A007              +138 
00:0000FB  0FA007              +138 
00:0000FC  23A006              +138 
00:0000FD  23A007              +138 
  :                            139 	
00:0000FE  0D0080              +140 	off	half$w
  :                            141 
00:0000FF  FCA003              +142 	lc	display		x	3,x,i
00:000100  F80002              +142 
00:000101  FCF002              +142 
00:000102  3E058B              +142 
00:000103  38000F              +142 
00:000104  50305F              +143 	lx	offset
00:000105  FCA008              +144 	lc	display		4,x,i	4+2*2,x,i
00:000106  FCA004              +144 
00:000107  FCF002              +144 
00:000108  3E058B              +144 
00:000109  38000F              +144 
00:00010A  B60062              +145 	j	input
  :                            146 
00:00010B  FD304C              +147 tw	sscanf	how,,xi		$3("%qx":0),,xi	capture,,xi
00:00010C  FD319D              +147 
00:00010D  FD3004              +147 
00:00010E  FCF003              +147 
00:00010F  FF05A7              +147 
00:000110  38000F              +147 
  :                            148 
00:000111  50305F              +149 	lx	offset
00:000112  61304F              +150 ?	$do	3,	swivel	capture+3,,t1
00:000113  23A000              +150 
00:000114  20A001              +150 
00:000115  30A004              +150 
00:000116  30A005              +150 
00:000117  0FA005              +150 
00:000118  21A004              +150 
00:000119  21A005              +150 
00:00011A  62304F              +150 
00:00011B  22A000              +150 
00:00011C  20A002              +150 
00:00011D  30A006              +150 
00:00011E  30A007              +150 
00:00011F  0FA007              +150 
00:000120  22A006              +150 
00:000121  22A007              +150 
00:000122  63304F              +150 
00:000123  21A000              +150 
00:000124  20A003              +150 
00:000125  30A008              +150 
00:000126  30A009              +150 
00:000127  0FA009              +150 
00:000128  23A008              +150 
00:000129  23A009              +150 
  :                            151 
00:00012A  FCA004              +152 	lc	display		x	4,x,i
00:00012B  F80002              +152 
00:00012C  FCF002              +152 
00:00012D  3E058B              +152 
00:00012E  38000F              +152 
00:00012F  50305F              +153 	lx	offset
00:000130  FCA00A              +154 	lc	display		4,x,i	4+2*3,x,i
00:000131  FCA004              +154 
00:000132  FCF002              +154 
00:000133  3E058B              +154 
00:000134  38000F              +154 
00:000135  B60062              +155 	j	input
  :                            156 
00:000136  FD3004              +157 time	c	(date_timef1)	0,,xi	how,,xi
00:000137  FD0000              +157 
00:000138  FCF002              +157 
00:000139  FF05DF              +157 
00:00013A  38000F              +157 
00:00013B  FD301C              +158 	c	(date_timef2)	0,,xi	left,,xi
00:00013C  FD0000              +158 
00:00013D  FCF002              +158 
00:00013E  FF05E0              +158 
00:00013F  38000F              +158 
00:000140  FD3034              +159 	c	(date_timef3)	0,,xi	right,,xi
00:000141  FD0000              +159 
00:000142  FCF002              +159 
00:000143  FF05E1              +159 
00:000144  38000F              +159 
00:000145  FD3034              +160 	printf	$3("%s":10:"%s":10:"%s":10:0),,xi	how,,xi	left,,xi right,,xi
00:000146  FD301C              +160 
00:000147  FD3004              +160 
00:000148  FD319F              +160 
00:000149  FD0001              +160 
00:00014A  FCF005              +160 
00:00014B  FF05D1              +160 
00:00014C  38000F              +160 
00:00014D  FF05E2              +161 	call	(dayclock_ydsm)
00:00014E  F8000B              +162 	printf	$3("%d.%d:%d.%d":10:0),,xi	8	9	10	11
00:00014F  F8000A              +162 
00:000150  F80009              +162 
00:000151  F80008              +162 
00:000152  FD31A3              +162 
00:000153  FD0001              +162 
00:000154  FCF006              +162 
00:000155  FF05D1              +162 
00:000156  38000F              +162 
00:000157  FF05E3              +163 	call	(dayclock_ydsm_gmt)
00:000158  F8000B              +164 	printf	$3("%d.%d:%d.%d":10:0),,xi	8	9	10	11
00:000159  F8000A              +164 
00:00015A  F80009              +164 
00:00015B  F80008              +164 
00:00015C  FD31A3              +164 
00:00015D  FD0001              +164 
00:00015E  FCF006              +164 
00:00015F  FF05D1              +164 
00:000160  38000F              +164 
00:000161  B60062              +165 	j	input
  :                            166 
00:000162  FD301F              +167 d72	sscanf	inputd,,xi $3("%s %jd %d":10:0),,xi what,,xi left,,xi left+3,,xi
00:000163  FD301C              +167 
00:000164  FD3000              +167 
00:000165  FD31A8              +167 
00:000166  FD3060              +167 
00:000167  FCF005              +167 
00:000168  FF05A7              +167 
00:000169  38000F              +167 
00:00016A  CF301C              +168 	dl	left
00:00016B  F0301F              +169 	d	left+3
00:00016C  78301C              +170 	tp	left
00:00016D  3E017D              +171 	lcal	quicku
00:00016E  400006              +172 	lr	6
00:00016F  200007              +173 	sa	7
00:000170  600005              +174 	la	b
00:000171  68301E              +175 	lb	left+2
00:000172  F0301F              +176 	d	left+3
00:000173  F80005              +177 	printf	$3("%jd %d":10:0),,xi	r 7 a b
00:000174  F80004              +177 
00:000175  F80007              +177 
00:000176  F80000              +177 
00:000177  FD31AC              +177 
00:000178  FD0001              +177 
00:000179  FCF006              +177 
00:00017A  FF05D1              +177 
00:00017B  38000F              +177 
00:00017C  B60062              +178 	j	input
  :                            179 
00:00017D  C5FFFF              +180 quicku	aa	-1,,xi
00:00017E  7E0180              +181 	jc	quickux
00:00017F  1F0006              +182 	dec	6
00:000180  350000              +183 quickux	lret	0
  :                            184 
00:000181  FD305B              +185 test	sscanf	left,,xi	$3("%x:%x":0),,xi	return,,xi return+1,,xi
00:000182  FD305A              +185 
00:000183  FD31AF              +185 
00:000184  FD301C              +185 
00:000185  FCF004              +185 
00:000186  FF05A7              +185 
00:000187  38000F              +185 
00:000188  CF305A              +186 	dl	return
00:000189  560018              +187 	drr	24
00:00018A  C73058              +188 	ds	gate
  :                            189 
                                	lookup	how								;
                                		ref, j, go, call, 		fret, ir, sir, barg,		;
                                		bats, bang, base, load, 	store, push, pop, lcal,		;
                                		lret, lretched, popA, ii,	gii, xint, sim, ireqs,		;
                                		launch, outA, outB, activate,	xerc, on, off, aa,		;
                                		r_mta, dte, r_dte, rex,		range, d__, xor, xtend,		;
                                		clam, r_tz, r_tp, rex_vector,	overlap,			;
                                		farpopa							;
00:00018B  55002E              +198 		dothat
00:00018C  85FFFF              +198 
00:00018D  60A640              +198 
00:00018E  CFC000              +198 
00:00018F  DF3004              +198 
00:000190  7C01A9              +198 
00:000191  700002              +198 
00:000192  B6018C              +198 
  :                            199 
  :                            200 	$if	1
                                	prompt	test								;
                                		ref, j, go, call,		fret, ir, sir, barg,		;
                                		bats, bang, base, load,		store, push, pop, lcal,		;
                                		lret, lretched, popA, ii,	gii, xint, sim, ireqs,		;
                                		launch,	outA, outB, activate,	xerc, on, off, aa,		;
                                		r_mta, dte, r_dte, urex,	range, d__, xor, xtend,		;
                                		clam, r_tz, r_tp, rex_vector,	overlap,				;
00:000193  FD318F              +208 		farpopa
00:000194  FD0001              +208 
00:000195  FCF002              +208 
00:000196  FF05D1              +208 
00:000197  38000F              +208 
00:000198  45002E              +208 
00:000199  550000              +208 
00:00019A  F8A66E              +208 
00:00019B  FD3196              +208 
00:00019C  FD0001              +208 
00:00019D  FCF003              +208 
00:00019E  FF05D1              +208 
00:00019F  38000F              +208 
00:0001A0  850001              +208 
00:0001A1  F601A3              +208 
00:0001A2  B6019A              +208 
00:0001A3  FD3198              +208 
00:0001A4  FD0001              +208 
00:0001A5  FCF002              +208 
00:0001A6  FF05D1              +208 
00:0001A7  38000F              +208 
  :                            209 	$endif
  :                            210 
00:0001A8  B60062              +211 	j	input
  :                            212 
00:0001A9  97A1AB              +213 dothat	ex	doso, x
00:0001AA  B60062              +214 	j	input
  :                            215 
00:0001AB  60869C              +216 doso	la	*(31*/18)
00:0001AC  B6869C              +217 	j	*(31*/18)
00:0001AD  F7069D              +218 	go	(1*/23++gate:s)
00:0001AE  FF069D              +219 	call	(1*/23++gate:s)
  :                            220 
00:0001AF  3E01D9              +221 	lcal	refret
00:0001B0  3E01DC              +222 	lcal	refire
00:0001B1  3000A0              +223 	z	128+32
00:0001B2  3E01E0              +224 	lcal	barg
  :                            225 
00:0001B3  3E01E3              +226 	lcal	bats
00:0001B4  3E01F1              +227 	lcal	bang
00:0001B5  3E0204              +228 	lcal	base
00:0001B6  3E0207              +229 	lcal	load
  :                            230 
00:0001B7  3E021E              +231 	lcal	store
00:0001B8  3E0235              +232 	lcal	upush
00:0001B9  3E023E              +233 	lcal	upop
00:0001BA  3E0245              +234 	lcal	ulcal
  :                            235 
00:0001BB  3E024A              +236 	lcal	ulret
00:0001BC  3E024C              +237 	lcal	ulretch
00:0001BD  3E0255              +238 	lcal	upopa
00:0001BE  3E0259              +239 	lcal	uii
  :                            240 
00:0001BF  3E0261              +241 	lcal	ugii
00:0001C0  3E0263              +242 	lcal	uxint
00:0001C1  27305A              +243 	sim	return
00:0001C2  3E0277              +244 	lcal	uireqs
  :                            245 
00:0001C3  3E028C              +246 	lcal	ulaunch
00:0001C4  3E0298              +247 	lcal	uoutA
00:0001C5  3E029C              +248 	lcal	uoutB
00:0001C6  3E02A0              +249 	lcal	uactivate
  :                            250 
00:0001C7  3E02A3              +251 	lcal	uxerc
00:0001C8  050300              +252 	on	000300
00:0001C9  0D0300              +253 	off	000300
00:0001CA  3E0506              +254 	lcal	uaa
  :                            255 
00:0001CB  3E02C4              +256 	lcal	ur_mta
00:0001CC  3E02CC              +257 	lcal	udte
00:0001CD  3E02D6              +258 	lcal	ur_dte
00:0001CE  3E02DD              +259 	lcal	urex
  :                            260 
00:0001CF  3E02AC              +261 	lcal	urange
00:0001D0  3E050A              +262 	lcal	ud
00:0001D1  3E051B              +263 	lcal	uxor
00:0001D2  3E051F              +264 	lcal	uxtend
00:0001D3  3E052D              +265 	lcal	uclam
00:0001D4  3E0533              +266 	lcal	ur_tz
00:0001D5  3E053B              +267 	lcal	ur_tp
00:0001D6  3E0549              +268 	lcal	urex_vector
00:0001D7  3E0543              +269 	lcal	overlap
00:0001D8  3E024F              +270 	lcal	farpopa
  :                            271 
  :                            272 refret
00:0001D9  9F305A              +273 		dpush	return
00:0001DA  3D0000              +274 		fret	0
00:0001DB  350000              +275 	lret	0
  :                            276 
  :                            277 refire
00:0001DC  9F305A              +278 		dpush	return
00:0001DD  9F069E              +279 		dpush	(0:d)
00:0001DE  7D0000              +280 		ir	0
00:0001DF  350000              +281 	lret	0
  :                            282 
00:0001E0  CF06A0              +283 barg	dl	(0, 31*/18d)
00:0001E1  750049              +284 	ii	TAG$
00:0001E2  350000              +285 	lret	0
  :                            286 
00:0001E3  60305E              +287 bats	la	fields
00:0001E4  C5FFFD              +288 	aa	-3,,xi
00:0001E5  E601ED              +289 	jna	bats_device1
  :                            290 
00:0001E6  70305F              +291 	tnz	offset
00:0001E7  B601E9              +291 
00:0001E8  350000              +292 	lret	0
  :                            293 
00:0001E9  50305F              +294 	lx	offset
00:0001EA  07A000              +295 	ts	0, x
00:0001EB  350000              +296 	lret	0
00:0001EC  350000              +297 	lret	0
  :                            298 
  :                            299 bats_device1
00:0001ED  6006A2              +300 	la	(0400001)
00:0001EE  750063              +301 	ii	XBASE$35
00:0001EF  0786A3              +302 	ts	*(35*/18++03FFFF:s)
00:0001F0  350000              +303 	lret	0
  :                            304 
00:0001F1  CF3058              +305 bang		dl	gate
00:0001F2  CDFFD4              +306 		ab	-32-12,,xi
00:0001F3  7E01F7              +307 		jc	no_bang
00:0001F4  CD000C              +308 		ab	12,,xi
00:0001F5  5E01F7              +309 		jnc	no_bang
00:0001F6  97D1F8              +310 		ex	please_base, b
00:0001F7  350000              +311 no_bang	lret	0
  :                            312 
  :                            313 please_base
00:0001F8  750060              +314 ?	$do	12,	ii	XBASE$32+?-1
00:0001F9  750061              +314 
00:0001FA  750062              +314 
00:0001FB  750063              +314 
00:0001FC  750064              +314 
00:0001FD  750065              +314 
00:0001FE  750066              +314 
00:0001FF  750067              +314 
00:000200  750068              +314 
00:000201  750069              +314 
00:000202  75006A              +314 
00:000203  75006B              +314 
  :                            315 
00:000204  CF3058              +316 base		dl	gate
00:000205  34D000              +317 		sabr	0, b
00:000206  350000              +318 	lret	0
  :                            319 
00:000207  60305A              +320 load		la	return
00:000208  50305B              +321 		lx	return+1
00:000209  4D0007              +322 		lk	7,,xi
  :                            323 
00:00020A  AF06A4              +324 	mta	(8)
00:00020B  B60211              +325 		j	r4?
00:00020C  4FA000              +326 		ql	0, x
00:00020D  47304C              +327 		qs	capture
00:00020E  4FA004              +328 		ql	4, x
00:00020F  473050              +329 		qs	capture+4
00:000210  350000              +330 	lret	0
  :                            331 
00:000211  AF06A5              +332 r4?	mta	(4)
00:000212  B60216              +333 		j	r2?
00:000213  4FA000              +334 		ql	0, x
00:000214  47304C              +335 		qs	capture
00:000215  350000              +336 	lret	0
  :                            337 
00:000216  AF06A6              +338 r2?	mta	(2)
00:000217  B6021B              +339 		j	r1
00:000218  CFA000              +340 		dl	0, x
00:000219  C7304C              +341 		ds	capture
00:00021A  350000              +342 	lret	0
  :                            343 
00:00021B  60A000              +344 r1		la	0, x
00:00021C  20304C              +345 		sa	capture
00:00021D  350000              +346 	lret	0
  :                            347 		
  :                            348 
00:00021E  60305A              +349 store		la	return
00:00021F  50305B              +350 		lx	return+1
00:000220  4D0007              +351 		lk	7,,xi
  :                            352 
00:000221  AF06A4              +353 	mta	(8)
00:000222  B60228              +354 		j	w4?
  :                            355 
00:000223  4F304C              +356 		ql	capture
00:000224  47A000              +357 		qs	0, x
00:000225  4F3050              +358 		ql	capture+4
00:000226  47A004              +359 		qs	4, x
00:000227  350000              +360 	lret	0
  :                            361 
  :                            362 
00:000228  AF06A5              +363 w4?	mta	(4)
00:000229  B6022D              +364 		j	w2?
  :                            365 
00:00022A  4F304C              +366 		ql	capture
00:00022B  47A000              +367 		qs	0, x
00:00022C  350000              +368 	lret	0
  :                            369 
00:00022D  AF06A6              +370 w2?	mta	(2)
00:00022E  B60232              +371 		j	w1
  :                            372 
00:00022F  CF304C              +373 		dl	capture
00:000230  C7A000              +374 		ds	0, x
00:000231  350000              +375 	lret	0
  :                            376 
00:000232  60304C              +377 w1		la	capture
00:000233  20A000              +378 		sa	0, x
00:000234  350000              +379 	lret	0
  :                            380 
00:000235  40305A              +381 upush	lr	return
00:000236  55304C              +382 	lx	capture,,xi
00:000237  70305B              +383 	tz	return+1
00:000238  50305B              +384 	lx	return+1
  :                            385 
00:000239  8FA000              +386 upushmo	qpush	0, x
00:00023A  1E0239              +387 	jdr	upushmo
  :                            388 
00:00023B  40305B              +389 	lr	return+1
00:00023C  B6023F              +390 	j	upopsum
  :                            391 
00:00023D  350000              +392 	lret	0
  :                            393 
00:00023E  40305A              +394 upop	lr	return
00:00023F  55301C              +395 upopsum	lx	left,,xi
  :                            396 
00:000240  87A000              +397 upopmor	qpop	0, x
00:000241  850004              +398 	ax	4,,xi
00:000242  1E0240              +399 	jdr	upopmor
00:000243  8F304C              +400 	qpush	capture
00:000244  350000              +401 	lret	0
  :                            402 
00:000245  380018              +403 ulcal	pop	24
00:000246  550018              +404 	lx	24,,xi
00:000247  10000F              +405 	sx	sp
00:000248  3E0249              +406 	lcal	$+1
00:000249  350000              +407 	lret	0
  :                            408 
00:00024A  F806A7              +409 ulret	push	(60*/12)
00:00024B  350000              +410 	lret	0
  :                            411 
00:00024C  650081              +412 ulretch	la	129,,xi
00:00024D  20000F              +413 	sa	sp
00:00024E  350000              +414 	lret	0
  :                            415 
00:00024F  6006A8              +416 farpopa	la	(040003F)
00:000250  34001F              +417 	sabr	31
00:000251  5006A9              +418 	lx	(31*/18++262143)
00:000252  65003C              +419 	la	60,,xi
00:000253  20A000              +420 	sa	0, x
00:000254  B60256              +421 	j	upopa1
  :                            422 
00:000255  50305A              +423 upopa	lx	return
00:000256  FD0064              +424 upopa1	push	100,,xi
00:000257  2FA000              +425 	popA	0, x
00:000258  350000              +426 	lret	0
  :                            427 
00:000259  CF305A              +428 uii	dl	return		. illegal ii from application to restarts page
00:00025A  2E0012              +429 	sbl	18
00:00025B  16000A              +430 	dsr	10
00:00025C  650075              +431 	la	ii*/3++xi,,xi	. ii instruction
00:00025D  160008              +432 	dsr	8
00:00025E  283091              +433 	sb	xtarget		. can't ex register
00:00025F  973091              +434 	ex	xtarget
00:000260  350000              +435 	lret	0		. so it shouldn't come to here
  :                            436 
00:000261  750040              +437 ugii	ii	64		. to a legal but spare slot
00:000262  350000              +438 	lret	0		. should just ir
  :                            439 
  :                            440 uxint
  :                            441 take_on* $proc
  :                            442 	la	?,,xi
  :                            443 	ii	XINT$BIND
  :                            444 	$end
  :                            445 
  :                            446 	
00:000263  75004B              +447 	ii	I$TABLE		. start thread interrupts table
  :                            448 				. for postprocess
  :                            449 
00:000264  650001              +450 ?	$do	8,	take_on
00:000265  75004F              +450 
00:000266  650002              +450 
00:000267  75004F              +450 
00:000268  650003              +450 
00:000269  75004F              +450 
00:00026A  650004              +450 
00:00026B  75004F              +450 
00:00026C  650005              +450 
00:00026D  75004F              +450 
00:00026E  650006              +450 
00:00026F  75004F              +450 
00:000270  650007              +450 
00:000271  75004F              +450 
00:000272  650008              +450 
00:000273  75004F              +450 
  :                            451 
00:000274  650001              +452 	la	XINT,,xi
00:000275  75005C              +453 	ii	EVENT_WAIT$
00:000276  350000              +454 	lret	0
  :                            455 
00:000277  054000              +456 uireqs	on	see$1
00:000278  501201              +457 	lx	XINTT+1		. read cursor
00:000279  401203              +458 	lr	XINTT+3		. limitof
00:00027A  CFA000              +459 uirnext	dl	0, x
00:00027B  C6028A              +460 	jza	uireqx
  :                            461 
00:00027C  9F0004              +462 	printf	$3("%lx":10:0),,xi	a,,long
00:00027D  FD320E              +462 
00:00027E  FD0001              +462 
00:00027F  FCF004              +462 
00:000280  FF05D1              +462 
00:000281  38000F              +462 
  :                            463 
00:000282  850002              +464 	ax	2,,xi
00:000283  F60288              +465 	jxge	ufirst
  :                            466 	
00:000284  600002              +467 ulast?	la	x
00:000285  B01202              +468 	xor	XINTT+2		. next write
00:000286  C6028A              +469 	jza	uireqx
00:000287  B6027A              +470 	j	uirnext
  :                            471 
00:000288  551204              +472 ufirst	lx	XINTT+4,,xi
00:000289  B60284              +473 	j	ulast?
  :                            474 
00:00028A  0D4000              +475 uireqx	off	see$1
00:00028B  350000              +476 	lret	0
  :                            477 
00:00028C  4F06AA              +478 ulaunch	ql	(ra_thread, 1, 0, 0q)
00:00028D  750047              +479 	ii	THREAD$
00:00028E  203090              +480 	sa	ra_thread_id
00:00028F  6D3210              +481 	lb	$3("application space interrupt handler"),,xi
00:000290  750049              +482 	ii	TAG$
00:000291  F83090              +483 	printf	$3("ra thread %x":10:0),,xi	ra_thread_id
00:000292  FD321C              +483 
00:000293  FD0001              +483 
00:000294  FCF003              +483 
00:000295  FF05D1              +483 
00:000296  38000F              +483 
00:000297  350000              +484 	lret	0
  :                            485 
00:000298  60305A              +486 uoutA	la	return
00:000299  68305B              +487 	lb	return+1
00:00029A  14D000              +488 	outA	0, b
00:00029B  350000              +489 	lret	0
  :                            490 
00:00029C  68305A              +491 uoutB	lb	return
00:00029D  60305B              +492 	la	return+1
00:00029E  1CC000              +493 	outB	0, a
00:00029F  350000              +494 	lret	0
  :                            495 
  :                            496 uactivate
00:0002A0  CF305A              +497 	dl	return
00:0002A1  9006AE              +498 	or	(0400000)
  :                            499 .	ii	ALERT$		. dn exist
00:0002A2  350000              +500 	lret	0
  :                            501 
00:0002A3  68305A              +502 uxerc	lb	return
00:0002A4  E8305B              +503 	mf	return+1
00:0002A5  9F0004              +504 	printf	$3("%x:%x":10:0),,xi	a,,long
00:0002A6  FD3221              +504 
00:0002A7  FD0001              +504 
00:0002A8  FCF004              +504 
00:0002A9  FF05D1              +504 
00:0002AA  38000F              +504 
00:0002AB  350000              +505 	lret	0
  :                            506 
  :                            507 urange
00:0002AC  8F06AF              +508 ?	$do	20,	qpush	(1.0*+?)
00:0002AD  8F06B3              +508 
00:0002AE  8F06B7              +508 
00:0002AF  8F06BB              +508 
00:0002B0  8F06BF              +508 
00:0002B1  8F06C3              +508 
00:0002B2  8F06C7              +508 
00:0002B3  8F06CB              +508 
00:0002B4  8F06CF              +508 
00:0002B5  8F06D3              +508 
00:0002B6  8F06D7              +508 
00:0002B7  8F06DB              +508 
00:0002B8  8F06DF              +508 
00:0002B9  8F06E3              +508 
00:0002BA  8F06E7              +508 
00:0002BB  8F06EB              +508 
00:0002BC  8F06EF              +508 
00:0002BD  8F06F3              +508 
00:0002BE  8F06F7              +508 
00:0002BF  8F06FB              +508 
00:0002C0  8F06FF              +509 	SIMD_CONTROL	(-1, 4, 40, 0q)
00:0002C1  870014              +509 
00:0002C2  740707              +510 	rex	(fa	(1.0))
00:0002C3  350000              +511 	lret	0
  :                            512 
  :                            513 ur_mta
00:0002C4  550708              +514 	lx	(0333333, 0555555, 0777777, 0AAAAAA, 0CCCCCC, 0EEEEEE, 0111111, 0BBBBBB:o),,xi
00:0002C5  600710              +515 	la	(0EEEEEE:s)
00:0002C6  4DFFFF              +516 	lk	-1,,xi
00:0002C7  8F0711              +517 	SIMD_CONTROL	(-1, 0, 8-1, 1q)
00:0002C8  870014              +517 
00:0002C9  740715              +518 	rex	(mta	0, x)
00:0002CA  B5FFFF              +519 	xor	-1,,xi		. ya got none
00:0002CB  350000              +520 	lret	0		. unless rex skipped to here
  :                            521 
00:0002CC  550716              +522 udte	lx	("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567"),,xi
00:0002CD  CF072A              +523 	dl	("WXYZ01")
00:0002CE  45000A              +524 	lr	60/6,,xi
00:0002CF  B602D4              +525 	j	udte_next?
  :                            526 udte_next!
00:0002D0  57A000              +527 	dte	0, x
00:0002D1  B602D3              +528 	j	$+2
00:0002D2  350000              +529 	lret	0
00:0002D3  850002              +530 	ax	2,,xi
  :                            531 udte_next?
00:0002D4  1E02D0              +532 	jdr	udte_next!
00:0002D5  350000              +533 	lret	0
  :                            534 
  :                            535 ur_dte
00:0002D6  550716              +536 	lx	("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567"),,xi
00:0002D7  CF072A              +537 	dl	("WXYZ01")
00:0002D8  8F072C              +538 	SIMD_CONTROL	(-1, 0, 60/6-1, 2q)
00:0002D9  870014              +538 
00:0002DA  740730              +539 	rex	(dte	0, x)
00:0002DB  350000              +540 	lret	0
00:0002DC  350000              +541 	lret	0
  :                            542 
  :                            543 urex	
00:0002DD  8F0731              +544 ur_fan	qpush	(16384.0)
00:0002DE  740739              +545 	rex	(fa	(-8192.0))
00:0002DF  870008              +546 	qpop	8
00:0002E0  8F0008              +547 	printf	$3("%f":10:0),,xi	8,,float
00:0002E1  FD3224              +547 
00:0002E2  FD0001              +547 
00:0002E3  FCF006              +547 
00:0002E4  FF05D1              +547 
00:0002E5  38000F              +547 
  :                            548 ur_fa
00:0002E6  8F06AF              +549 ?       $do     20,     qpush   (1.0*+?)
00:0002E7  8F06B3              +549 
00:0002E8  8F06B7              +549 
00:0002E9  8F06BB              +549 
00:0002EA  8F06BF              +549 
00:0002EB  8F06C3              +549 
00:0002EC  8F06C7              +549 
00:0002ED  8F06CB              +549 
00:0002EE  8F06CF              +549 
00:0002EF  8F06D3              +549 
00:0002F0  8F06D7              +549 
00:0002F1  8F06DB              +549 
00:0002F2  8F06DF              +549 
00:0002F3  8F06E3              +549 
00:0002F4  8F06E7              +549 
00:0002F5  8F06EB              +549 
00:0002F6  8F06EF              +549 
00:0002F7  8F06F3              +549 
00:0002F8  8F06F7              +549 
00:0002F9  8F06FB              +549 
00:0002FA  8F073A              +550         SIMD_CONTROL    (-1, 4, 20-1, 0q)
00:0002FB  870014              +550 
00:0002FC  740707              +551         rex     (fa     (1.0))
00:0002FD  870008              +552 	$do	20,	qpop	8
00:0002FE  870008              +552 
00:0002FF  870008              +552 
00:000300  870008              +552 
00:000301  870008              +552 
00:000302  870008              +552 
00:000303  870008              +552 
00:000304  870008              +552 
00:000305  870008              +552 
00:000306  870008              +552 
00:000307  870008              +552 
00:000308  870008              +552 
00:000309  870008              +552 
00:00030A  870008              +552 
00:00030B  870008              +552 
00:00030C  870008              +552 
00:00030D  870008              +552 
00:00030E  870008              +552 
00:00030F  870008              +552 
00:000310  870008              +552 
00:000311  8F0008              +553         printf	$3("%f ":10:0),,xi	8,,float
00:000312  FD3226              +553 
00:000313  FD0001              +553 
00:000314  FCF006              +553 
00:000315  FF05D1              +553 
00:000316  38000F              +553 
  :                            554 
00:000317  8F073E              +555 ur_fm	SIMD_CONTROL	(-1, 0, 0, 0q)
00:000318  870014              +555 
00:000319  8F0742              +556 	qpush	(12.0)
00:00031A  74074A              +557 	rex	(fm	(0.33333333333333333333333333))
00:00031B  870008              +558 	qpop	8
00:00031C  8F0008              +559 	printf	$3("%f":10:0),,xi	8,,float
00:00031D  FD3224              +559 
00:00031E  FD0001              +559 
00:00031F  FCF006              +559 
00:000320  FF05D1              +559 
00:000321  38000F              +559 
  :                            560 
00:000322  8F074B              +561 ur_fd	qpush	(24*+1250000)
00:000323  740753              +562 	rex	(fd	(3.0))
00:000324  870008              +563 	qpop	8
00:000325  8F0008              +564 	printf	$3("%f":10:0),,xi	8,,float
00:000326  FD3224              +564 
00:000327  FD0001              +564 
00:000328  FCF006              +564 
00:000329  FF05D1              +564 
00:00032A  38000F              +564 
  :                            565 
00:00032B  9F0754              +566 ur_d	dpush	(1000000000000)
00:00032C  740756              +567 	rex	(d	3,,xi)
00:00032D  380004              +568 	dpop	a
00:00032E  380005              +568 
00:00032F  9F0004              +569 	printf	$3("%ld":10:0),,xi	a,,long
00:000330  FD3228              +569 
00:000331  FD0001              +569 
00:000332  FCF004              +569 
00:000333  FF05D1              +569 
00:000334  38000F              +569 
  :                            570 
00:000335  FD0000              +571 	push	0,,xi
00:000336  9F0757              +572 	dpush	(-1000000000000)
00:000337  050008              +573 	on	fp$r
00:000338  740759              +574 	rex	(d	-3,,xi)
00:000339  0D0008              +575 	off	fp$r
00:00033A  380004              +576 	dpop	a
00:00033B  380005              +576 
00:00033C  380000              +577 	pop	r
00:00033D  F80000              +578 	printf	$3("%ld %d":10:0),,xi	a,,long	r
00:00033E  9F0004              +578 
00:00033F  FD322A              +578 
00:000340  FD0001              +578 
00:000341  FCF005              +578 
00:000342  FF05D1              +578 
00:000343  38000F              +578 
  :                            579 
00:000344  9F075A              +580 ur_m	dpush	(0033333333333)
00:000345  74075C              +581 	rex	(m	7,,xi)
00:000346  380004              +582 	dpop	a
00:000347  380005              +582 
00:000348  9F0004              +583 	printf	$3("%lx":10:0),,xi	a,,long
00:000349  FD320E              +583 
00:00034A  FD0001              +583 
00:00034B  FCF004              +583 
00:00034C  FF05D1              +583 
00:00034D  38000F              +583 
  :                            584 
00:00034E  FD00A8              +585 ur_sar	push	21*/3,,xi
00:00034F  74075D              +586 	rex	(sar	3)
00:000350  380004              +587 	pop	a
00:000351  F80004              +588 	printf	$3("%x":10:0),,xi	a
00:000352  FD322D              +588 
00:000353  FD0001              +588 
00:000354  FCF003              +588 
00:000355  FF05D1              +588 
00:000356  38000F              +588 
  :                            589 
00:000357  F8075E              +590 ur_sbr	push	(42*/19s)
00:000358  FDFFFF              +591 	push	-1,,xi
00:000359  740760              +592 	rex	(sbr	*(20))
00:00035A  380004              +593 	dpop	a
00:00035B  380005              +593 
00:00035C  F80005              +594 	printf	$3("%x":10:0),,xi	b
00:00035D  FD322D              +594 
00:00035E  FD0001              +594 
00:00035F  FCF003              +594 
00:000360  FF05D1              +594 
00:000361  38000F              +594 
  :                            595 
00:000362  9F0761              +596 ur_dsr	dpush	(99*/41d)
00:000363  740763              +597 	rex	(dsr	41)
00:000364  380004              +598 	dpop	a
00:000365  380005              +598 
00:000366  9F0004              +599 	printf	$3("%lx":10:0),,xi	a,,long
00:000367  FD320E              +599 
00:000368  FD0001              +599 
00:000369  FCF004              +599 
00:00036A  FF05D1              +599 
00:00036B  38000F              +599 
  :                            600 
00:00036C  FD0021              +601 ur_sal	push	33,,xi
00:00036D  740764              +602 	rex	(sal	17)
00:00036E  380004              +603 	pop	a
00:00036F  F80004              +604 	printf	$3("%x":10:0),,xi	a
00:000370  FD322D              +604 
00:000371  FD0001              +604 
00:000372  FCF003              +604 
00:000373  FF05D1              +604 
00:000374  38000F              +604 
  :                            605 
00:000375  FD0014              +606 ur_sbl	push	20,,xi
00:000376  FD0000              +607 	push	0,,xi
00:000377  740765              +608 	rex	(sbl	19)
00:000378  380004              +609 	dpop	a
00:000379  380005              +609 
00:00037A  F80005              +610 	printf	$3("%x":10:0),,xi	b
00:00037B  FD322D              +610 
00:00037C  FD0001              +610 
00:00037D  FCF003              +610 
00:00037E  FF05D1              +610 
00:00037F  38000F              +610 
  :                            611 
00:000380  9F0766              +612 ur_dsl	dpush	(99d)
00:000381  740768              +613 	rex	(dsl	18)
00:000382  380004              +614 	dpop	a
00:000383  380005              +614 
00:000384  9F0004              +615 	printf	$3("%lx":10:0),,xi	a,,long
00:000385  FD320E              +615 
00:000386  FD0001              +615 
00:000387  FCF004              +615 
00:000388  FF05D1              +615 
00:000389  38000F              +615 
  :                            616 
00:00038A  FD0444              +617 ur_rar	push	0444,,xi
00:00038B  740769              +618 	rex	(rar	9)
00:00038C  380004              +619 	pop	a
00:00038D  F80004              +620 	printf	$3("%x":10:0),,xi	a
00:00038E  FD322D              +620 
00:00038F  FD0001              +620 
00:000390  FCF003              +620 
00:000391  FF05D1              +620 
00:000392  38000F              +620 
  :                            621 
00:000393  FD0444              +622 ur_rbr	push	0444,,xi
00:000394  FD0000              +623 	push	0,,xi
00:000395  74076A              +624 	rex	(rbr	17)
00:000396  380004              +625 	dpop	a
00:000397  380005              +625 
00:000398  F80005              +626 	printf	$3("%x":10:0),,xi	b
00:000399  FD322D              +626 
00:00039A  FD0001              +626 
00:00039B  FCF003              +626 
00:00039C  FF05D1              +626 
00:00039D  38000F              +626 
  :                            627 
00:00039E  9F076B              +628 ur_drr	dpush	(000AAAAAA000)
00:00039F  74076D              +629 	rex	(drr	25)
00:0003A0  380004              +630 	dpop	a
00:0003A1  380005              +630 
00:0003A2  9F0004              +631 	printf	$3("%lx":10:0),,xi	a,,long
00:0003A3  FD320E              +631 
00:0003A4  FD0001              +631 
00:0003A5  FCF004              +631 
00:0003A6  FF05D1              +631 
00:0003A7  38000F              +631 
  :                            632 
00:0003A8  FD0AAA              +633 ur_ral	push	0AAA,,xi
00:0003A9  74076F              +634 	rex	(ral	*(8+11))
00:0003AA  380004              +635 	pop	a
00:0003AB  F80004              +636 	printf	$3("%x":10:0),,xi	a
00:0003AC  FD322D              +636 
00:0003AD  FD0001              +636 
00:0003AE  FCF003              +636 
00:0003AF  FF05D1              +636 
00:0003B0  38000F              +636 
  :                            637 
00:0003B1  FD0AAA              +638 ur_rbl	push	0AAA,,xi
00:0003B2  FD0000              +639 	push	0,,xi
00:0003B3  740770              +640 	rex	(rbl	4+11)
00:0003B4  380004              +641 	dpop	a
00:0003B5  380005              +641 
00:0003B6  F80005              +642 	printf	$3("%x":10:0),,xi	b
00:0003B7  FD322D              +642 
00:0003B8  FD0001              +642 
00:0003B9  FCF003              +642 
00:0003BA  FF05D1              +642 
00:0003BB  38000F              +642 
  :                            643 
00:0003BC  9F076B              +644 ur_drl	dpush	(000AAAAAA000)
00:0003BD  740771              +645 	rex	(drl	23)
00:0003BE  380004              +646 	dpop	a
00:0003BF  380005              +646 
00:0003C0  9F0004              +647 	printf	$3("%lx":10:0),,xi	a,,long
00:0003C1  FD320E              +647 
00:0003C2  FD0001              +647 
00:0003C3  FCF004              +647 
00:0003C4  FF05D1              +647 
00:0003C5  38000F              +647 
  :                            648 
00:0003C6  FDC000              +649 ur_saa	push	-16384,,xi
00:0003C7  740772              +650 	rex	(saa	1)
00:0003C8  380004              +651 	pop	a	sp
00:0003C9  F80004              +652 	printf	$3("%x":10:0),,xi	a
00:0003CA  FD322D              +652 
00:0003CB  FD0001              +652 
00:0003CC  FCF003              +652 
00:0003CD  FF05D1              +652 
00:0003CE  38000F              +652 
  :                            653 
00:0003CF  8F0773              +654 ur_sba	SIMD_CONTROL	(-1, 2, 6-1, 1q)
00:0003D0  870014              +654 
00:0003D1  9F0777              +655 ?	$do	6,	dpush	(-16384+?:d)
00:0003D2  9F0779              +655 
00:0003D3  9F077B              +655 
00:0003D4  9F077D              +655 
00:0003D5  9F077F              +655 
00:0003D6  9F0781              +655 
00:0003D7  5D0000              +656 	ly	0,,xi
00:0003D8  740783              +657 	rex	(sba	3, y)
00:0003D9  870004              +658 	qpop	a
00:0003DA  870008              +659 	qpop	8
00:0003DB  870010              +660 	qpop	d$save
00:0003DC  F80013              +661 	printf	$3("%x %x %x %x %x %x":10:0),,xi	b 7 9 11 d$save1 d$save3
00:0003DD  F80011              +661 
00:0003DE  F8000B              +661 
00:0003DF  F80009              +661 
00:0003E0  F80007              +661 
00:0003E1  F80005              +661 
00:0003E2  FD322F              +661 
00:0003E3  FD0001              +661 
00:0003E4  FCF008              +661 
00:0003E5  FF05D1              +661 
00:0003E6  38000F              +661 
  :                            662 
00:0003E7  8F073E              +663 ur_dsa	SIMD_CONTROL	(-1, 0, 0, 0q)
00:0003E8  870014              +663 
00:0003E9  9F0784              +664 	dpush	(-16384*/24)
00:0003EA  740786              +665 	rex	(dsa	16)
00:0003EB  380004              +666 	dpop	a
00:0003EC  380005              +666 
00:0003ED  9F0004              +667 	printf	$3("%lx":10:0),,xi	a,,long
00:0003EE  FD320E              +667 
00:0003EF  FD0001              +667 
00:0003F0  FCF004              +667 
00:0003F1  FF05D1              +667 
00:0003F2  38000F              +667 
  :                            668 
00:0003F3  FD002F              +669 ur_sa	push	47,,xi
00:0003F4  740787              +670 	rex	(sa	8)
00:0003F5  17000F              +671 	inc	sp
00:0003F6  F80008              +672 	printf	$3("%x":10:0),,xi	8
00:0003F7  FD322D              +672 
00:0003F8  FD0001              +672 
00:0003F9  FCF003              +672 
00:0003FA  FF05D1              +672 
00:0003FB  38000F              +672 
  :                            673 
00:0003FC  FD0031              +674 ur_sb	push	49,,xi
00:0003FD  FDFFFF              +675 	push	-1,,xi
00:0003FE  740788              +676 	rex	(sb	9)
00:0003FF  380004              +677 	dpop	a
00:000400  380005              +677 
00:000401  F80009              +678 	printf	$3("%x":10:0),,xi	9
00:000402  FD322D              +678 
00:000403  FD0001              +678 
00:000404  FCF003              +678 
00:000405  FF05D1              +678 
00:000406  38000F              +678 
  :                            679 
00:000407  FDFFFF              +680 ur_la	push	-1,,xi
00:000408  680789              +681 	lb	('inb')
00:000409  74078A              +682 	rex	(la	b)
00:00040A  380004              +683 	pop	a
00:00040B  F80004              +684 	printf	$3("%x":10:0),,xi	a
00:00040C  FD322D              +684 
00:00040D  FD0001              +684 
00:00040E  FCF003              +684 
00:00040F  FF05D1              +684 
00:000410  38000F              +684 
  :                            685 
00:000411  FDFFFF              +686 ur_lb	push	-1,,xi
00:000412  FD0000              +687 	push	0,,xi
00:000413  60078B              +688 	la	('ina')
00:000414  74078C              +689 	rex	(lb	a)
00:000415  380004              +690 	dpop	a
00:000416  380005              +690 
00:000417  F80005              +691 	printf	$3("%x":10:0),,xi	b
00:000418  FD322D              +691 
00:000419  FD0001              +691 
00:00041A  FCF003              +691 
00:00041B  FF05D1              +691 
00:00041C  38000F              +691 
  :                            692 
00:00041D  F8078D              +693 ur_or	push	(020202)
00:00041E  74078F              +694 	rex	(or	(050505))
00:00041F  380004              +695 	pop	a
00:000420  F80004              +696 	printf	$3("%x":10:0),,xi	a
00:000421  FD322D              +696 
00:000422  FD0001              +696 
00:000423  FCF003              +696 
00:000424  FF05D1              +696 
00:000425  38000F              +696 
  :                            697 
00:000426  9F0790              +698 ur_orB	dpush	(0a0a0a:d)
00:000427  740793              +699 	rex	(orB	(040404))
00:000428  380004              +700 	dpop	a
00:000429  380005              +700 
00:00042A  F80005              +701 	printf	$3("%x":10:0),,xi	b
00:00042B  FD322D              +701 
00:00042C  FD0001              +701 
00:00042D  FCF003              +701 
00:00042E  FF05D1              +701 
00:00042F  38000F              +701 
  :                            702 
00:000430  F80794              +703 ur_and	push	(0e0e0e)
00:000431  740795              +704 	rex	(and	1++-256,,xi)
00:000432  380004              +705 	pop	a
00:000433  F80004              +706 	printf	$3("%x":10:0),,xi	a	
00:000434  FD322D              +706 
00:000435  FD0001              +706 
00:000436  FCF003              +706 
00:000437  FF05D1              +706 
00:000438  38000F              +706 
  :                            707 
00:000439  9F0796              +708 ur_andB	dpush	(0FFFFFF070707:d)
00:00043A  740798              +709 	rex	(andB	3++-256,,xi)
00:00043B  380004              +710 	dpop	a
00:00043C  380005              +710 
00:00043D  F80005              +711 	printf	$3("%x":10:0),,xi	b
00:00043E  FD322D              +711 
00:00043F  FD0001              +711 
00:000440  FCF003              +711 
00:000441  FF05D1              +711 
00:000442  38000F              +711 
  :                            712 
00:000443  F80794              +713 ur_xor	push	(0e0e0e)
00:000444  74079A              +714 	rex	(xor	(0c0c0c))
00:000445  380004              +715 	pop	a
00:000446  F80004              +716 	printf	$3("%x":10:0),,xi	a
00:000447  FD322D              +716 
00:000448  FD0001              +716 
00:000449  FCF003              +716 
00:00044A  FF05D1              +716 
00:00044B  38000F              +716 
  :                            717 
00:00044C  9F079B              +718 ur_xorB		dpush	(0e0e0e:d)
00:00044D  74079E              +719 	rex	(xorB	(0443322))
00:00044E  380004              +720 	dpop	a	
00:00044F  380005              +720 
00:000450  F80005              +721 	printf	$3("%x":10:0),,xi	b
00:000451  FD322D              +721 
00:000452  FD0001              +721 
00:000453  FCF003              +721 
00:000454  FF05D1              +721 
00:000455  38000F              +721 
  :                            722 
00:000456  FD005A              +723 ur_aa	push	90,,xi
00:000457  74079F              +724 	rex	(aa	9,,xi)
00:000458  380004              +725 	pop	a
00:000459  F80004              +726 	printf	$3("%x":10:0),,xi	a
00:00045A  FD322D              +726 
00:00045B  FD0001              +726 
00:00045C  FCF003              +726 
00:00045D  FF05D1              +726 
00:00045E  38000F              +726 
  :                            727 
00:00045F  FD005A              +728 ur_ab	push	90,,xi
00:000460  FD0000              +729 	push	0,,xi
00:000461  7407A0              +730 	rex	(ab	11,,xi)
00:000462  380004              +731 	dpop	a
00:000463  380005              +731 
00:000464  F80005              +732 	printf	$3("%x":10:0),,xi	b
00:000465  FD322D              +732 
00:000466  FD0001              +732 
00:000467  FCF003              +732 
00:000468  FF05D1              +732 
00:000469  38000F              +732 
  :                            733 
00:00046A  FD005A              +734 ur_ana	push	90,,xi
00:00046B  7407A1              +735 	rex	(ana	-9,,xi)
00:00046C  380004              +736 	pop	a
00:00046D  F80004              +737 	printf	$3("%x":10:0),,xi	a
00:00046E  FD322D              +737 
00:00046F  FD0001              +737 
00:000470  FCF003              +737 
00:000471  FF05D1              +737 
00:000472  38000F              +737 
  :                            738 
00:000473  8F07A2              +739 ur_anb	SIMD_CONTROL	(-1, 2, 3-1, 0q)
00:000474  870014              +739 
00:000475  9F07A6              +740 ?	$do	3,	dpush	(87+?:d)
00:000476  9F07A8              +740 
00:000477  9F07AA              +740 
00:000478  7407AC              +741 	rex	(anb	-11,,xi)
00:000479  870004              +742 	qpop	a
00:00047A  380008              +743 	dpop	8
00:00047B  380009              +743 
00:00047C  F80009              +744 	printf	$3("%x %x %x":10:0),,xi	b 7 9
00:00047D  F80007              +744 
00:00047E  F80005              +744 
00:00047F  FD3236              +744 
00:000480  FD0001              +744 
00:000481  FCF005              +744 
00:000482  FF05D1              +744 
00:000483  38000F              +744 
  :                            745 
00:000484  8F07AD              +746 ur_mf	SIMD_CONTROL	(-1, 1, 4-1, 1q)
00:000485  870014              +746 
00:000486  8F07B1              +747 	qpush	(-10, -8, -6, -4q)
00:000487  5507B5              +748 	lx	(-3, 4, -5, 6q),,xi
00:000488  7407B9              +749 	rex	(mf	0,x)
00:000489  870004              +750 	qpop	a
00:00048A  F80007              +751 	printf	$3("%d %d %d %d":10:0),,xi	a b 6 7
00:00048B  F80006              +751 
00:00048C  F80005              +751 
00:00048D  F80004              +751 
00:00048E  FD323A              +751 
00:00048F  FD0001              +751 
00:000490  FCF006              +751 
00:000491  FF05D1              +751 
00:000492  38000F              +751 
  :                            752 
00:000493  8F073E              +753 ur_ds	SIMD_CONTROL	(-1, 0, 0, 0q)
00:000494  870014              +753 
00:000495  9F07BA              +754 	dpush	("abcdef")
00:000496  7407BC              +755 	rex	(ds	6)
00:000497  380004              +756 	dpop	a
00:000498  380005              +756 
00:000499  9F0006              +757 	printf	$3("%lx":10:0),,xi	6,,long
00:00049A  FD320E              +757 
00:00049B  FD0001              +757 
00:00049C  FCF004              +757 
00:00049D  FF05D1              +757 
00:00049E  38000F              +757 
  :                            758 
00:00049F  9F07BD              +759 ur_dl	dpush	(-10d)
00:0004A0  CF07BF              +760 	dl	("ghijkl")
00:0004A1  7407C1              +761 	rex	(dl	a)
00:0004A2  380006              +762 	dpop	6
00:0004A3  380007              +762 
00:0004A4  9F0006              +763 	printf	$3("%lx":10:0),,xi	6,,long
00:0004A5  FD320E              +763 
00:0004A6  FD0001              +763 
00:0004A7  FCF004              +763 
00:0004A8  FF05D1              +763 
00:0004A9  38000F              +763 
  :                            764 
00:0004AA  8F07C2              +765 ur_qs	qpush	(-1*+10)
00:0004AB  7407C6              +766 	rex	(qs	8)
00:0004AC  870004              +767 	qpop	a
00:0004AD  8F0008              +768 	printf	$3("%f":10:0),,xi	8,,float
00:0004AE  FD3224              +768 
00:0004AF  FD0001              +768 
00:0004B0  FCF006              +768 
00:0004B1  FF05D1              +768 
00:0004B2  38000F              +768 
  :                            769 
00:0004B3  8F07C7              +770 ur_ql	qpush	(-1*+1)
00:0004B4  7407CF              +771 	rex	(ql	(10.3))
00:0004B5  870008              +772 	qpop	8
00:0004B6  8F0008              +773 	printf	$3("%f":10:0),,xi	8,,float
00:0004B7  FD3224              +773 
00:0004B8  FD0001              +773 
00:0004B9  FCF006              +773 
00:0004BA  FF05D1              +773 
00:0004BB  38000F              +773 
  :                            774 
00:0004BC  9F07D0              +775 ur_da	dpush	(10d)
00:0004BD  7407D4              +776 	rex	(da	(-5d))
00:0004BE  380004              +777 	dpop	a
00:0004BF  380005              +777 
00:0004C0  9F0004              +778 	printf	 $3("%lx":10:0),,xi	a,,long
00:0004C1  FD320E              +778 
00:0004C2  FD0001              +778 
00:0004C3  FCF004              +778 
00:0004C4  FF05D1              +778 
00:0004C5  38000F              +778 
  :                            779 	
00:0004C6  8F07D5              +780 ur_dan	SIMD_CONTROL	(-1, 2, 4-1, 0q)
00:0004C7  870014              +780 
00:0004C8  9F07BD              +781 ?	$do	4,	dpush	(-10-1+?:d)
00:0004C9  9F07D9              +781 
00:0004CA  9F07DB              +781 
00:0004CB  9F07DD              +781 
00:0004CC  7407E1              +782 	rex	(dan	(-20d))
00:0004CD  870004              +783 	qpop	a
00:0004CE  870008              +784 	qpop	8
00:0004CF  9F000A              +785 	printf  $3("%lx %lx %lx %lx":10:0),,xi	a,,long 6,,long 8,,long 10,,long
00:0004D0  9F0008              +785 
00:0004D1  9F0006              +785 
00:0004D2  9F0004              +785 
00:0004D3  FD323F              +785 
00:0004D4  FD0001              +785 
00:0004D5  FCF00A              +785 
00:0004D6  FF05D1              +785 
00:0004D7  38000F              +785 
  :                            786 
  :                            787 $(3)
  :                            788 masks32
03:003092  FFFFFF              +789 	$do	32,	-1
03:003093  FFFFFF              +789 
03:003094  FFFFFF              +789 
03:003095  FFFFFF              +789 
03:003096  FFFFFF              +789 
03:003097  FFFFFF              +789 
03:003098  FFFFFF              +789 
03:003099  FFFFFF              +789 
03:00309A  FFFFFF              +789 
03:00309B  FFFFFF              +789 
03:00309C  FFFFFF              +789 
03:00309D  FFFFFF              +789 
03:00309E  FFFFFF              +789 
03:00309F  FFFFFF              +789 
03:0030A0  FFFFFF              +789 
03:0030A1  FFFFFF              +789 
03:0030A2  FFFFFF              +789 
03:0030A3  FFFFFF              +789 
03:0030A4  FFFFFF              +789 
03:0030A5  FFFFFF              +789 
03:0030A6  FFFFFF              +789 
03:0030A7  FFFFFF              +789 
03:0030A8  FFFFFF              +789 
03:0030A9  FFFFFF              +789 
03:0030AA  FFFFFF              +789 
03:0030AB  FFFFFF              +789 
03:0030AC  FFFFFF              +789 
03:0030AD  FFFFFF              +789 
03:0030AE  FFFFFF              +789 
03:0030AF  FFFFFF              +789 
03:0030B0  FFFFFF              +789 
03:0030B1  FFFFFF              +789 
  :                            790 $(0)
  :                            791 
00:0004D8  F807E2              +792 ur_z	push	(0123456)
00:0004D9  38000D              +793 	pop	q
00:0004DA  553092              +794 	lx	masks32,,xi
00:0004DB  8F0711              +795 	SIMD_CONTROL	(-1, 0, 8-1, 1q)
00:0004DC  870014              +795 
  :                            796 
00:0004DD  7407E3              +797 	rex	(z	0, x, t3)
00:0004DE  7407E4              +798 	rex	(z	0, x, t1)
00:0004DF  7407E5              +799 	rex	(z	0, x)
00:0004E0  7407E6              +800 	rex	(z	0, x, t2)
  :                            801 
00:0004E1  F8000D              +802 	printf	$3("%x":10:0),,xi	q
00:0004E2  FD322D              +802 
00:0004E3  FD0001              +802 
00:0004E4  FCF003              +802 
00:0004E5  FF05D1              +802 
00:0004E6  38000F              +802 
00:0004E7  8F3096              +803 	printf	$3("%x %x %x %x %x %x %x %x":10:0),,xi	masks32,,float192
00:0004E8  8F3092              +803 
00:0004E9  FD3245              +803 
00:0004EA  FD0001              +803 
00:0004EB  FCF00A              +803 
00:0004EC  FF05D1              +803 
00:0004ED  38000F              +803 
00:0004EE  8F309E              +804 	printf	$3("%x %x %x %x %x %x %x %x":10:0),,xi	masks32+8,,float192
00:0004EF  8F309A              +804 
00:0004F0  FD3245              +804 
00:0004F1  FD0001              +804 
00:0004F2  FCF00A              +804 
00:0004F3  FF05D1              +804 
00:0004F4  38000F              +804 
00:0004F5  8F30A6              +805 	printf	$3("%x %x %x %x %x %x %x %x":10:0),,xi	masks32+16,,float192
00:0004F6  8F30A2              +805 
00:0004F7  FD3245              +805 
00:0004F8  FD0001              +805 
00:0004F9  FCF00A              +805 
00:0004FA  FF05D1              +805 
00:0004FB  38000F              +805 
00:0004FC  8F30AE              +806 	printf	$3("%x %x %x %x %x %x %x %x":10:0),,xi	masks32+24,,float192
00:0004FD  8F30AA              +806 
00:0004FE  FD3245              +806 
00:0004FF  FD0001              +806 
00:000500  FCF00A              +806 
00:000501  FF05D1              +806 
00:000502  38000F              +806 
  :                            807 
00:000503  8F073E              +808 	SIMD_CONTROL	(-1, 0, 0, 0q)	. change to default
00:000504  870014              +808 
00:000505  350000              +809 	lret	0
  :                            810 
00:000506  50305B              +811 uaa	lx	return+1
00:000507  60305A              +812 	la	return
00:000508  C0A000              +813 	aa	0, x
00:000509  350000              +814 	lret	0
  :                            815 
00:00050A  FD305B              +816 ud	sscanf	$3("%ld:%d":0),,xi	relay,,xi	return+1,,xi
00:00050B  FD305C              +816 
00:00050C  FD324E              +816 
00:00050D  FCF003              +816 
00:00050E  FF05A7              +816 
00:00050F  38000F              +816 
00:000510  CF0754              +817 	dl	(1000000000000)
00:000511  F50003              +818 	d	3,,xi
00:000512  F80005              +819 	printf	$3("%ld %d":10:0),,xi 6 a b
00:000513  F80004              +819 
00:000514  F80006              +819 
00:000515  FD322A              +819 
00:000516  FD0001              +819 
00:000517  FCF005              +819 
00:000518  FF05D1              +819 
00:000519  38000F              +819 
00:00051A  350000              +820 	lret	0
  :                            821 
00:00051B  60305A              +822 uxor	la	return
00:00051C  50305B              +823 	lx	return+1
00:00051D  B0A000              +824 	xor	0, x
00:00051E  350000              +825 	lret	0
  :                            826 
00:00051F  8F07E7              +827 uxtend	SIMD_CONTROL	(-1, 0, 8000000-1, 0q)
00:000520  870014              +827 
00:000521  8F07EB              +828 	qpush	(1.0*+1250000)
00:000522  7407EF              +829 	rex	(fd	(10.0))
00:000523  870008              +830 	qpop	8
00:000524  8F0008              +831 	printf	$3("%f":10:0),,xi	8,,float
00:000525  FD3224              +831 
00:000526  FD0001              +831 
00:000527  FCF006              +831 
00:000528  FF05D1              +831 
00:000529  38000F              +831 
00:00052A  8F073E              +832 	SIMD_CONTROL	(-1, 0, 0, 0q)
00:00052B  870014              +832 
00:00052C  350000              +833 	lret	0
  :                            834 
00:00052D  380002              +835 uclam	pop	x
00:00052E  9F0754              +836 	dpush	(1000000000000)
00:00052F  050008              +837 	on	fp$r
00:000530  7407F1              +838 	rex	(fd	(3))
00:000531  0D0008              +839 	off	fp$r
00:000532  B6A000              +840 	j	0, x
  :                            841 
00:000533  5507F2              +842 ur_tz	lx	(-6, -5, -4, -3, -2, -1, 0, 1o),,xi
00:000534  8F0711              +843 	SIMD_CONTROL	(-1, 0, 8-1, 1q)
00:000535  870014              +843 
00:000536  7407FA              +844 	rex	(tz	0, x)
00:000537  350000              +845 	lret	0
00:000538  8F073E              +846 	SIMD_CONTROL	(-1, 0, 0, 0q)
00:000539  870014              +846 
00:00053A  350000              +847 	lret	0
  :                            848 
00:00053B  5507F2              +849 ur_tp	lx	(-6, -5, -4, -3, -2, -1, 0, 1o),,xi
00:00053C  8F0711              +850 	SIMD_CONTROL	(-1, 0, 8-1, 1q)
00:00053D  870014              +850 
00:00053E  7407FB              +851 	rex	(tp	0, x)
00:00053F  350000              +852 	lret	0
00:000540  8F073E              +853 	SIMD_CONTROL	(-1, 0, 0, 0q)
00:000541  870014              +853 
00:000542  350000              +854 	lret	0
  :                            855 
00:000543  8F000C              +856 overlap	qpush	p
00:000544  9F000E              +857 	dpush	fp
00:000545  38000E              +858 	dpop	fp
00:000546  38000F              +858 
00:000547  87000C              +859 	qpop	p
00:000548  350000              +860 	lret	0
  :                            861 
  :                            862 zlist*	$proc
  :                            863 ?	$do	zlist(1),	+	zlist(1, ?)
  :                            864 	$end
  :                            865 
  :                            866 urex_vector
  :                            867 
  :                            868 $(3)
  :                            869 count	$res	1
  :                            870 count1	$res	1
  :                            871 outline	$res	24*24/3
  :                            872 
  :                            873 $(0)
00:000549  FDFFA1              +874 	push	-95,,xi				. 96-word frame
00:00054A  2F000F              +875 	popA	sp
  :                            876 
00:00054B  8F07FC              +877 	SIMD_CONTROL	(-1, 4, 24-1, 4q)	. default vector is frame of 24 floats
00:00054C  870014              +877 
  :                            878 
                                	lx	(zlist	1.0, 2.0, 3.0, 4.0, 5.0, 6.0,		;
                                			7.0, 8.0, 9.0, 10.0, 11.0, 12.0,	;
                                			13.0, 14.0, 15.0, 16.0, 17.0, 18.0,	;
00:00054D  550800              +882 			19.0, 20.0, 21.0, 22.0, 23.0, 24.0),,xi
  :                            883 
00:00054E  740860              +884 	rex	(ql	0, x)		. load SIMD Frame 24 * 96-bit float
  :                            885 					. register increment and ea increment are both 1 float
  :                            886 					. 12 floats in storage to add
  :                            887 
00:00054F  550861              +888 	lx	(zlist	20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0),,xi
  :                            889 
  :                            890 						. vector is 12 floats (48 words)
00:000550  FCF018              +891 	SIMD_TARGET	6*4,sp	12		. @ frame + 6 floats (24 words)
00:000551  38000D              +891 
00:000552  FD000B              +891 
00:000553  380014              +891 
00:000554  740891              +892 	rex	(fa	0, x)			. 12 floating operations
  :                            893 
00:000555  5530B4              +894 	lx	outline,,xi			. start print stream
00:000556  FF0892              +895 	call	(wstream_starta)		. this overwrites SIMD control registers
  :                            896 						. but SIMD default controls are restored after
  :                            897 
00:000557  450003              +898 	lr	4-1,,xi				. 4 lines
  :                            899 
  :                            900 publish_line
00:000558  0030B3              +901 	sr	count1	
00:000559  450005              +902 	lr	6-1,,xi				. * 6 floats
  :                            903 
00:00055A  0030B2              +904 publish	sr	count
00:00055B  600893              +905 	la	(' '*/16)
00:00055C  1D0008              +906 	wsr	$byte
00:00055D  170010              +907 	inc	BYTES
00:00055E  870004              +908 	qpop	a				. take a float off the internal stack top
00:00055F  FF0894              +909 	call	(feditia)			. compose it into the display line
00:000560  4030B2              +910 	lr	count
00:000561  1E055A              +911 	jdr	publish
  :                            912 
00:000562  600895              +913 	la	(LF*/16)
00:000563  1D0008              +914 	wsr	$byte
00:000564  170010              +915 	inc	BYTES
00:000565  4030B3              +916 	lr	count1
00:000566  1E0558              +917 	jdr	publish_line
  :                            918 
00:000567  1D0010              +919 	wsr	$word-$byte			. push out last bytes
  :                            920 
00:000568  F80010              +921 	c	(write)	stdout	outline,,xi	BYTES
00:000569  FD30B4              +921 
00:00056A  FD0001              +921 
00:00056B  FCF003              +921 
00:00056C  FF0896              +921 
00:00056D  38000F              +921 
00:00056E  FD0001              +922 	c	(fsync)	stdout
00:00056F  FCF001              +922 
00:000570  FF0897              +922 
00:000571  38000F              +922 
  :                            923 
00:000572  8F073E              +924 	SIMD_CONTROL	(-1, 0, 0, 0q)		. restore SIMD default controls
00:000573  870014              +924 
00:000574  350000              +925 	lret	0
  :                            926 
  :                            927 ra_thread
00:000575  650001              +928 	la	1,,xi
00:000576  75004C              +929 	ii	AFFINITY$
00:000577  75004B              +930 	ii	I$TABLE
  :                            931 
00:000578  650001              +932 ?	$do	8,	take_on
00:000579  75004F              +932 
00:00057A  650002              +932 
00:00057B  75004F              +932 
00:00057C  650003              +932 
00:00057D  75004F              +932 
00:00057E  650004              +932 
00:00057F  75004F              +932 
00:000580  650005              +932 
00:000581  75004F              +932 
00:000582  650006              +932 
00:000583  75004F              +932 
00:000584  650007              +932 
00:000585  75004F              +932 
00:000586  650008              +932 
00:000587  75004F              +932 
  :                            933 
  :                            934 
  :                            935 ra_thread_onward
00:000588  650001              +936 	la	XINT,,xi
00:000589  75005C              +937 	ii	EVENT_WAIT$
00:00058A  B60588              +938 	j	ra_thread_onward
  :                            939 	
  :                            940 	
  :                            941 		
                                display	$head_near	 params(where,		int	;
  :                            943 				how_much,	int	)
  :                            944 
00:00058B  40F003              +945 more	lr	how_much
00:00058C  50F002              +946 	lx	where
00:00058D  17F002              +947 	inc	where
00:00058E  F60597              +948 	jxge	curtail
  :                            949 
00:00058F  F8A000              +950 	printf	$3(" %x":0),,xi	0, x
00:000590  FD3251              +950 
00:000591  FD0001              +950 
00:000592  FCF003              +950 
00:000593  FF05D1              +950 
00:000594  38000F              +950 
00:000595  850001              +951 	ax	1,,xi
00:000596  B6058B              +952 	j	more
  :                            953 
00:000597  FD0001              +954 curtail	c	(write)	stdout	$3("":10),,xi	1,,xi
00:000598  FD3198              +954 
00:000599  FD0001              +954 
00:00059A  FCF003              +954 
00:00059B  FF0896              +954 
00:00059C  38000F              +954 
00:00059D  FD0001              +955 	c	(fsync)	stdout
00:00059E  FCF001              +955 
00:00059F  FF0897              +955 
00:0005A0  38000F              +955 
00:0005A1  350000              +956 	$ret
  :                            957 
  :                            958 	$do	$<256,$(0:256)
  :                            959 
  :                            960 FS_BASE*        $set    $zenith+63**-64
  :                            961 FS_SAFE_LIMIT*  $set    4096			. _NEXTP*/12
  :                            962 
*EOF*
00:0005a2+[0001]18:000000
00:0005a3+[0003]30:000000000000
00:0005a5+0001CD
00:0005a6+0001E4
00:0005a7+0001D8
00:0005a8+00002E
00:0005a9+696E666F726D
00:0005ab+666F726D6174
00:0005ad+6C656E677468
00:0005af+636174656E61
00:0005b1+687700000000
00:0005b3+747700000000
00:0005b5+74696D650000
00:0005b7+746573740000
00:0005b9+666F726D6178
00:0005bb+643732000000
00:0005bd+0005A9
0005AB
0005AD
0005AF
0005B1
0005B3
0005B5
0005B7
0005B9
0005BB
00:0005c7+0000AF
0000BB
0000DB
0000D1
0000E6
00010B
000136
000181
0000C8
000162
00:0005d1+0001DB
00:0005d2+00317F
003182
003185
003188
00318B
00318C
00318D
00318F
003191
003194
00:0005dc+0001A7
00:0005dd+00019C
00:0005de+000199
00:0005df+000222
00:0005e0+000223
00:0005e1+000224
00:0005e2+000197
00:0005e3+000196
00:0005e4+726566000000
00:0005e6+6A0000000000
00:0005e8+676F00000000
00:0005ea+63616C6C0000
00:0005ec+667265740000
00:0005ee+697200000000
00:0005f0+736972000000
00:0005f2+626172670000
00:0005f4+626174730000
00:0005f6+62616E670000
00:0005f8+626173650000
00:0005fa+6C6F61640000
00:0005fc+73746F726500
00:0005fe+707573680000
00:000600+706F70000000
00:000602+6C63616C0000
00:000604+6C7265740000
00:000606+6C7265746368
00:000608+706F70410000
00:00060a+696900000000
00:00060c+676969000000
00:00060e+78696E740000
00:000610+73696D000000
00:000612+697265717300
00:000614+6C61756E6368
00:000616+6F7574410000
00:000618+6F7574420000
00:00061a+616374697661
00:00061c+786572630000
00:00061e+6F6E00000000
00:000620+6F6666000000
00:000622+616100000000
00:000624+725F6D746100
00:000626+647465000000
00:000628+725F64746500
00:00062a+726578000000
00:00062c+72616E676500
00:00062e+645F5F000000
00:000630+786F72000000
00:000632+7874656E6400
00:000634+636C616D0000
00:000636+725F747A0000
00:000638+725F74700000
00:00063a+7265785F7665
00:00063c+6F7665726C61
00:00063e+666172706F70
00:000640+0005E4
0005E6
0005E8
0005EA
0005EC
0005EE
0005F0
0005F2
0005F4
0005F6
0005F8
0005FA
0005FC
0005FE
000600
000602
000604
000606
000608
00060A
00060C
00060E
000610
000612
000614
000616
000618
00061A
00061C
00061E
000620
000622
000624
000626
000628
00062A
00062C
00062E
000630
000632
000634
000636
000638
00063A
00063C
00063E
00:00066e+0031B1
0031B3
0031B4
0031B5
0031B7
0031B9
0031BA
0031BC
0031BE
0031C0
0031C2
0031C4
0031C6
0031C8
0031CA
0031CC
0031CE
0031D0
0031D3
0031D5
0031D6
0031D8
0031DA
0031DC
0031DE
0031E1
0031E3
0031E5
0031E8
0031EA
0031EB
0031ED
0031EE
0031F0
0031F2
0031F4
0031F6
0031F8
0031FA
0031FC
0031FE
003200
003202
003204
003208
00320B
00:00069c+7C0000
00:00069d+803058
00:00069e+000000000000
00:0006a0+0000007C0000
00:0006a2+400001
00:0006a3+8FFFFF
00:0006a4+000008
00:0006a5+000004
00:0006a6+000002
00:0006a7+03C000
00:0006a8+40003F
00:0006a9+7FFFFF
00:0006aa+000575000001000000000000
00:0006ae+400000
00:0006af+400004A00000000000000000
00:0006b3+400007C80000000000000000
00:0006b7+40000AFA0000000000000000
00:0006bb+40000E9C4000000000000000
00:0006bf+400011C35000000000000000
00:0006c3+400014F42400000000000000
00:0006c7+400018989680000000000000
00:0006cb+40001BBEBC20000000000000
00:0006cf+40001EEE6B28000000000000
00:0006d3+4000229502F9000000000000
00:0006d7+400025BA43B7400000000000
00:0006db+400028E8D4A5100000000000
00:0006df+40002C9184E72A0000000000
00:0006e3+40002FB5E620F48000000000
00:0006e7+400032E35FA931A000000000
00:0006eb+4000368E1BC9BF0400000000
00:0006ef+400039B1A2BC2EC500000000
00:0006f3+40003CDE0B6B3A7640000000
00:0006f7+4000408AC7230489E8000000
00:0006fb+400043AD78EBC5AC62000000
00:0006ff+FFFFFF000004000028000000
00:000703+400001800000000000000000
00:000707+670703
00:000708+333333555555777777AAAAAACCCCCCEEEEEE111111BBBBBB
00:000710+EEEEEE
00:000711+FFFFFF000000000007000001
00:000715+AFA000
00:000716+6162636465666768696A6B6C6D6E6F707172737475767778
797A4142434445464748494A4B4C4D4E4F50515253545556
5758595A3031323334353637
00:00072a+5758595A3031
00:00072c+FFFFFF000000000009000002
00:000730+57A000
00:000731+40000F800000000000000000
00:000735+BFFFF17FFFFFFFFFFFFFFFFF
00:000739+670735
00:00073a+FFFFFF000004000013000000
00:00073e+FFFFFF000000000000000000
00:000742+400004C00000000000000000
00:000746+3FFFFFAAAAAAAAAAAAAAAAAB
00:00074a+770746
00:00074b+7F5C5FD073B91C16D7C6492B
00:00074f+400002C00000000000000000
00:000753+7F074F
00:000754+00E8D4A51000
00:000756+F50003
00:000757+FF172B5AF000
00:000759+F5FFFD
00:00075a+033333333333
00:00075c+E50007
00:00075d+060003
00:00075e+500000
00:00075f+000014
00:000760+0E875F
00:000761+C60000000000
00:000763+160029
00:000764+260011
00:000765+2E0013
00:000766+000000000063
00:000768+360012
00:000769+460009
00:00076a+4E0011
00:00076b+000AAAAAA000
00:00076d+560019
00:00076e+000013
00:00076f+66876E
00:000770+6E000F
00:000771+760017
00:000772+860001
00:000773+FFFFFF000002000005000001
00:000777+FFFFFFFFC001
00:000779+FFFFFFFFC002
00:00077b+FFFFFFFFC003
00:00077d+FFFFFFFFC004
00:00077f+FFFFFFFFC005
00:000781+FFFFFFFFC006
00:000783+8EB003
00:000784+FFC000000000
00:000786+960010
00:000787+200008
00:000788+280009
00:000789+696E62
00:00078a+600005
00:00078b+696E61
00:00078c+680004
00:00078d+020202
00:00078e+050505
00:00078f+90078E
00:000790+0000000A0A0A
00:000792+040404
00:000793+980792
00:000794+0E0E0E
00:000795+A5FF01
00:000796+FFFFFF070707
00:000798+ADFF03
00:000799+0C0C0C
00:00079a+B00799
00:00079b+0000000E0E0E
00:00079d+443322
00:00079e+B8079D
00:00079f+C50009
00:0007a0+CD000B
00:0007a1+D5FFF7
00:0007a2+FFFFFF000002000002000000
00:0007a6+000000000058
00:0007a8+000000000059
00:0007aa+00000000005A
00:0007ac+DDFFF5
00:0007ad+FFFFFF000001000003000001
00:0007b1+FFFFF6FFFFF8FFFFFAFFFFFC
00:0007b5+FFFFFD000004FFFFFB000006
00:0007b9+E8A000
00:0007ba+616263646566
00:0007bc+C70006
00:0007bd+FFFFFFFFFFF6
00:0007bf+6768696A6B6C
00:0007c1+CF0004
00:0007c2+BFFFDD6AFD06FFFFFFFFFFFF
00:0007c6+470008
00:0007c7+BFFFFB5FFFFFFFFFFFFFFFFF
00:0007cb+400004A4CCCCCCCCCCCCCCCD
00:0007cf+4F07CB
00:0007d0+00000000000A
00:0007d2+FFFFFFFFFFFB
00:0007d4+D707D2
00:0007d5+FFFFFF000002000003000000
00:0007d9+FFFFFFFFFFF7
00:0007db+FFFFFFFFFFF8
00:0007dd+FFFFFFFFFFF9
00:0007df+FFFFFFFFFFEC
00:0007e1+DF07DF
00:0007e2+123456
00:0007e3+33A000
00:0007e4+31A000
00:0007e5+30A000
00:0007e6+32A000
00:0007e7+FFFFFF0000007A11FF000000
00:0007eb+7F5C5B8AF7D0BD648FD9861D
00:0007ef+7F06AF
00:0007f0+000003
00:0007f1+7F07F0
00:0007f2+FFFFFAFFFFFBFFFFFCFFFFFDFFFFFEFFFFFF000000000001
00:0007fa+70A000
00:0007fb+78A000
00:0007fc+FFFFFF000004000017000004
00:000800+400001800000000000000000
400002800000000000000000
400002C00000000000000000
400003800000000000000000
400003A00000000000000000
400003C00000000000000000
400003E00000000000000000
400004800000000000000000
400004900000000000000000
400004A00000000000000000
400004B00000000000000000
400004C00000000000000000
400004D00000000000000000
400004E00000000000000000
400004F00000000000000000
400005800000000000000000
400005880000000000000000
400005900000000000000000
400005980000000000000000
400005A00000000000000000
400005A80000000000000000
400005B00000000000000000
400005B80000000000000000
400005C00000000000000000
00:000860+4FA000
00:000861+400005A00000000000000000
400005A80000000000000000
400005B00000000000000000
400005B80000000000000000
400005C00000000000000000
400005C80000000000000000
400005D00000000000000000
400005D80000000000000000
400005E00000000000000000
400005E80000000000000000
400005F00000000000000000
400005F80000000000000000
00:000891+67A000
00:000892+000203
00:000893+200000
00:000894+00020F
00:000895+0A0000
00:000896+0001D4
00:000897+0001D6
03:003174+257320257320257320257300
03:003178+257800
03:003179+5B636F6D6D616E645F6E616D65735D000000
03:00317f+696E666F726D000000
03:003182+666F726D6174000000
03:003185+6C656E677468000000
03:003188+636174656E61000000
03:00318b+687700
03:00318c+747700
03:00318d+74696D650000
03:00318f+746573740000
03:003191+666F726D6178000000
03:003194+643732000000
03:003196+202573000000
03:003198+0A0000
03:003199+256C660A0000
03:00319b+25640A000000
03:00319d+257178000000
03:00319f+25730A25730A25730A000000
03:0031a3+25642E25643A25642E25640A000000
03:0031a8+257320256A642025640A0000
03:0031ac+256A642025640A0000
03:0031af+25783A257800
03:0031b1+726566000000
03:0031b3+6A0000
03:0031b4+676F00
03:0031b5+63616C6C0000
03:0031b7+667265740000
03:0031b9+697200
03:0031ba+736972000000
03:0031bc+626172670000
03:0031be+626174730000
03:0031c0+62616E670000
03:0031c2+626173650000
03:0031c4+6C6F61640000
03:0031c6+73746F726500
03:0031c8+707573680000
03:0031ca+706F70000000
03:0031cc+6C63616C0000
03:0031ce+6C7265740000
03:0031d0+6C7265746368656400
03:0031d3+706F70410000
03:0031d5+696900
03:0031d6+676969000000
03:0031d8+78696E740000
03:0031da+73696D000000
03:0031dc+697265717300
03:0031de+6C61756E6368000000
03:0031e1+6F7574410000
03:0031e3+6F7574420000
03:0031e5+616374697661746500
03:0031e8+786572630000
03:0031ea+6F6E00
03:0031eb+6F6666000000
03:0031ed+616100
03:0031ee+725F6D746100
03:0031f0+647465000000
03:0031f2+725F64746500
03:0031f4+757265780000
03:0031f6+72616E676500
03:0031f8+645F5F000000
03:0031fa+786F72000000
03:0031fc+7874656E6400
03:0031fe+636C616D0000
03:003200+725F747A0000
03:003202+725F74700000
03:003204+7265785F766563746F720000
03:003208+6F7665726C61700000
03:00320b+666172706F70610000
03:00320e+256C780A0000
03:003210+6170706C69636174696F6E20737061636520696E74657272
7570742068616E646C657200
03:00321c+7261207468726561642025780A0000
03:003221+25783A25780A000000
03:003224+25660A000000
03:003226+2566200A0000
03:003228+256C640A0000
03:00322a+256C642025640A0000
03:00322d+25780A000000
03:00322f+25782025782025782025782025782025780A000000
03:003236+25782025782025780A000000
03:00323a+25642025642025642025640A000000
03:00323f+256C7820256C7820256C7820256C780A0000
03:003245+25782025782025782025782025782025782025782025780A
000000
03:00324e+256C643A2564000000
03:003251+202578000000
:$(00):000000:000898 :$(02):002000:003000 :$(03):003000:003253 
tal.msm: object code 17200 bytes: 0 errors: 4 undefined labels
