.       
.    Copyright Tim Cox, 2012
.    TimMilesCox@gmx.ch
.
.    This file is instruction code for the freeware processor architecture
.
.                RTA1
.
.    RTA1 is a free processor architecture specification.
.
.    The executable emulation of RTA1 is free software.
.
.    This instruction code for the target RTA1 architecture is free software
.
.    Software programs delivered with this software to connect the
.    emulated RTA1 with real network interfaces in the emulator host
.    are free software
.
.    Scripts and programs delivered with this software for running
.    on other computers and interacting with the RTA1 are free software
.
.    Scripts and utility programs for constructing RTA1 target
.    executable software are free software      
.
.    You can redistribute it and/or modify RTA1
.    under the terms of the GNU General Public License as published by
.    the Free Software Foundation, either version 3 of the License, or
.    (at your option) any later version.
.
.    RTA1 is distributed in the hope that it will be useful,
.    but WITHOUT ANY WARRANTY; without even the implied warranty of
.    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.    GNU General Public License for more details.
.
.    You should have received a copy of the GNU General Public License
.    along with RTA1.  If not, see <http://www.gnu.org/licenses/>.
.
.

.	system control I/O port numbers and mask values



CHILLDOWN	$equ	8	. indication write value instruction pause
LOCKSTEP	$equ	2	. sub-architectural inspection i/f if any

time$zone	$equ	101	. seconds difference from GMT
INDICATION$	$equ	102	. control and console signals port
chill$down	$equ	103	. instruction pause microseconds
TRIP$W		$equ	100	. 

sys$switch	$equ	126	. board settings input port
sys$leds	$equ	127	. board LEDS output port

device$flags	$equ	128	. 1st of 64 device array type / size ports

ram$threshold	$equ	124	. 1st RAM page index after initial NVRAM
iframe$u	$equ	64	. index last page in current instruction frame
application$L	$equ	72	. lowest call / go page index from applications

XI_PENDING$	$equ	74	. 8 external interrupt pending pins
XI_ACK$		$equ	75	. 8 acknowledge signals for external interrupt pending pins
INC$START	$equ	76	. writeable incrementer start value port

CORE_SOCKET$	$equ	77	. index # this core
CORE_PIN$	$equ	73	. 1 << CORE_SOCKET$
CORE_MASK$	$equ	75	. 1 << CORE_SOCKET$ of all instruction processors present

MCAST_PENDING$	$equ	78	. bit pattern which core->core lines are interrupting
MCAST_TO$	$equ	79	. bit pattern start  multicast alert interrupt core -> cores

I$DATA		$equ	80	. data input 1st of 8 external interrupt + data sources
O$DATA		$equ	88	. data output 1st of 8 external data targets

SMP_ACTIVATE$	$equ	2*/22	. 22 bits kernel vector table
THREAD$HALT	$equ	3*/22	. 22 bits thread identity

DAYCLOCK_MCAST$	$equ	0
SMP_PEND$	$equ	1
RESTART$1	$equ	2
CHILL$		$equ	3	. broadcast energy save

APPLICATION_L	$equ	2	. start page index application code

DEVICE_PRESENT  $equ    0800000
SYSM		$equ	DEVICE_PRESENT
IF16		$equ	0400000
FS24    	$equ    DEVICE_PRESENT++0400000

I_F_16BIT_FLAGS	$equ	DEVICE_PRESENT++0080000

ATTACHED_DEVICE_WRITE $equ 1
