	$list		0
	$path		../
	$include	def/rta.def
	$include	def/vector.def
	$include	language/stack.def
	$include	stream/stream.def
	$include	lib/ascii.def
	$include	image.app/imports.def
	$path
	$list

COLUMNS	$equ	120

$(1:01000/$1)
$(3:03000/$3)
operator $res	1
count	$res	1
right	$res	8
request	$res	COLUMNS//3

$(4:*1/$4)
	$lit
$(0:*1)
	$base_d	$zenith(3)-03000	1024
	c	(seg$load)	0,,xi	(raffin_d:L),,long

	$head_far	 scalars(left,	float192)

marche	fgets	request,,xi	COLUMNS,,xi	stdin
	jna	@eof
	jza	marche
	tp	request
	j	@eof

	z	count
	sscanf	request,,xi	$3("%Lf %s %Lf,%d":0),,xi		;
				left,,i	operator,,xi	right,,i	count,,xi
	aa	-3,,xi
	jnc	marche

	lr	count
	tz	r		. default or input count
	dec	r		. nonzero -= 1
				. because jdr stops on -1
	la	operator
	sar	$word-$byte

	on	fp$r

	aa	-'+',,xi
	jza	add
	aa	'+'-'-',,xi
	jza	add_negative
	aa	'-'-'*',,xi
	jza	multiply
	aa	'*'-'/',,xi
	jza	divide

	j	marche

add	rex	(fa	right)
	jdr	add
	j	edit

add_negative
	rex	(fan	right)
	jdr	add_negative
	j	edit

multiply
	rex	(fm	right)
	jdr	multiply
	j	edit

divide	rex	(fd	right)
	jdr	divide

edit
	off	fp$r			. edit routines need to do that

	printf	$3("%Lf":LF:0),,xi	left,,float192
	j	marche

@eof	qpop	0, sp
	qpop	0, sp
	fret	0

