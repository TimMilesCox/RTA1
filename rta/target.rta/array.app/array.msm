	$list		0
	$path		../
	$include	def/rta.def
	$include	def/vector.def
	$include	language/stack.def
	$include	stream/stream.def
	$path
	$include	./array.def
	$list

$(3:03000/$3)

LANES	$equ	5

?	$do	LANES,input(?)	1*+?
?	$do	LANES,addend(?)	1*?*+0
?	$do	LANES,sum(?)	0.0

	$lit	4

$(4:*1/$4)
$(0:*1)

	$base_d	$zenith(3)-003000 1024
	c	(seg$load)	0,,xi	(array_data:L),,long

	SIMD_CONTROL	(-1, 4, LANES-1, 4q)	. dest and source-2 both at 4-word intervals here
	lx	addend(1),,xi			. [source-1 source-2 may be at any intervals]

?	$do	LANES,	qpush	input(LANES+1-?) . 5 source-1 values -> 5 dest registers
	rex	(fa	0, x)			. operate
?	$do	LANES,	qpop	sum(?)		. 5 results -> store

	printf	$3("%f %f %f %f %f":10:0),,xi	sum(1),,float  sum(2),,float  sum(3),,float  sum(4),,float  sum(5),,float

	fret	0

