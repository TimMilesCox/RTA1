stdin	$equf	0,,xi
stdout	$equf	1,,xi
stderr	$equf	2,,xi

p	$proc
scanf*	$name
	fscanf	stdin	p()
	$end

p	$proc
fscanf*	$name
	c	(__fscanf) p()
	$end

p	$proc
fprintf* $name
	c	(__fprintf)	p()
	$end

p	$proc
printf*	$name
	fprintf	stdout	p()
	$end

p	$proc
sscanf*	$name
	c	(__sscanf) p()
	$end

p	$proc
sprintf* $name
	c	(__sprintf) p()
	$end

p	$proc
fread*	$name
_LDES1	$set	0
_LDES2	$set	0
	$do	$t(p(2, 1))=0,	$do	p(2)<3,_LDES1,	$set	xi
	$do	$t(p(3, 1))=0,	$do	p(3)<3,_LDES2,	$set	xi
	c	(readll)	p(4)	p(1)	p(2),,_LDES1	p(3),,_LDES2
	$end

p	$proc
fwrite*	$name
_LDES1	$set	0
_LDES2	$set	0
	$do	$t(p(2, 1))=0,	$do	p(2)<3,_LDES1	$set	xi
	$do	$t(p(3, 1))=0,	$do	p(3)<3,_LDES2	$set	xi
	c	(writell)	p(4)	p(1)	p(2),,_LDES1	p(3),,_LDES2
	$end

p	$proc
fgets*	$name
gets*	$name


	$if	p()<2
_LEN	$equf	99,,xi
	$note	maximum bytes arbitrarily 99 columns. Add 2nd argument HOW_MANY,,xi|i or [*]INTEGER_VARIABLE{,,w0|t1|t2|t3} for <> 33 words
	$else
	$if	p(2)<2
_LEN	$equf	p(2, 1),,xi
	$do	p(2, *1), $note length interpreted as  *LOCATION,,xi = LOCATION,,w0. For *pointer->variable type *POINTER{,,w0|t1|t2|t3}
	$elseif	p(2)<3
_LEN	$equf	p(2),,i
	$do	p(2, 2)^=0,	$note	length interpreted as  VALUE,INDEX,i. For variable type VALUE,INDEX{,w0|t1|t2|t3} 
	$else
_LEN	$equf	p(2)
	$endif
	$endif

	c	(__fgets)	p(3)	p(1)	_LEN

	dsr	24		. result in a whatever sort of file it was
	wsr	24		. zero->end of buffer and result in a again

	jnb	$+3		. bad status treated as nothing received
	jzb	$+2		. nothing received translates to no pointer handed back
	la	p(1)		. nonzero result is the pointer the caller already knows
				. but the real answer is in register b
	$end

p	$proc
fflush* $name
	c	(fsync)	p(1, 1)
	$end

