#
#    Copyright Tim Cox, 2012
#    TimMilesCox@gmx.ch
#
#    This file is part of the software emulation of the freeware
#    processor architecture
#
#                RTA1
#
#    RTA1 is a free processor architecture design.
#
#    The executable emulation of RTA1 is free software.
#
#    Instruction code for the target RTA1 architecture is free software
#    if it is delivered with this software
#
#    Software programs delivered with this software to connect the
#    emulated RTA1 with real network interfaces in the emulator host
#    are free software
#
#    Scripts and programs delivered with this software for running
#    on other computers and interacting with the RTA1 are free software
#
#    Scripts and utility programs for constructing RTA1 target
#    executable software are free software
#
#    You can redistribute it and/or modify RTA1
#    under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    RTA1 is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with RTA1.  If not, see <http://www.gnu.org/licenses/>.
#
#
#


	This document is a few notes about the directories in rta/

	similar notes called README.txt and READHOW.txt are withdrawn
	because newer information is on https://TimMilesCox.github.io

	all the newest information is also on the webhost
	running in the emulated machine itself http://172.29.7.7 

	ask for help	masmx@gmx.ch
	or		masmx@gmx.net


		Directories
		__________

		rta.run

contains build and scripts for RTA1 emulator on 32-bit plaforms
	
	build x86 machine code		build all-gcc
	_____________________		_____________

	tgena				tgen

	run the emulator> ra -O[R]	run the emulator> r -O[R]

	the machine code ones demand less of the platform and go faster
	available Intel Mac 32-bit, Intel Linux 32-bit

	currrently OSX PowerPC only gets gcc version

		tgen.x64

	necessary for OSX Catalina+, doesn't make much difference
	to anything else

		about half the speed of x86 machine code versions

		currently only gcc builds
		_________________________

		tgen

		run the emulator> r -O[R]

	No MAC silicon versions yet

	
	_________________________________________________________
	|	NETWORK TRUNK					|
	|	must be running before an emulator can run	|
	|_______________________________________________________|


		OSX				Linux
		___				_____


		portal				linux.net
		portal64			linuxnet.x64


				> runL

		configure your network by copying

		{ portal | linux.net | portal64 | linuxnet.x64 }/.rta_net

		to $HOME

		update that

		See manual connect.html, Running and Talking to RTA1 



		netifx/

netifx contains some parts of the network interface trunk
plus scripts for compilation


		engine.rta/

contains gcc source code for RTA1 emulation instruction part

		assembly/x86/syntax.i

contains the alternative x86 assembly source
for RTA1 emulation instruction part
for machine code written emulators

syntax for 3rd party assembler nasm
syntax macro-front ended for Visual Studio assembler

		engine.rel/

contains the relocatable code for emulating RTA1 instructions


		util.rta/

contains formatting programs for RTA1 instruction binaries
and for RTA1 file systems


		fsimages/

contains RTA1 file systems mainly so that emulated RTA1
can webhost its own documents


		rta.doc/

contains RTA1 web documents

		client/

Contains some routines for talking to the emulated RTA1
over a real network


		target.rta/

All RTA1 target instruction code and scripts to build any of it are in here
see manuals	scripts.html masmx7r3.html rta.html kernel.html
		intro page and getting started page...

