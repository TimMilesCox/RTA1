     1                                  ;		edi -> value	-144(ebp) -> rax 16(rax) -> edi : int
     2                                  ;		esi -> ea	-60(rbp)  -> esi		: int
     3                                  ;		rdx -> base	-48(rbp)  -> rax + 1248  -> rdx	: pointer
     4                                  ;		ecx <- psr
     5                                  ;		r8  -> platform address tcp page = &devices[0].pages[base[65]]
     6                                  
     7                                  
     8                                  %define	ptr
     9                                  
    10                                  	global	_sabr
    11                                  
    12 00000000 53                      _sabr:	push	rbx
    13                                  
    14 00000001 89F0                    	mov	eax, esi		; EA
    15 00000003 89FB                    	mov	ebx, edi		; value
    16 00000005 4889D7                  	mov	rdi, rdx		; base[]
    17                                  
    18 00000008 A93E000000              	test	eax, 0000003Eh		; target window must be 2..63
    19 0000000D 0F84A8000000            	jz	_sabr_guard_authority
    20 00000013 A9C0FFFF00              	test	eax, 00FFFFC0h
    21 00000018 0F859D000000            	jnz	_sabr_guard_authority
    22                                  
    23 0000001E 89D8                    	mov	eax, ebx		; cache final copy. EA remains in esi
    24                                  
    25 00000020 8B9700020000            	mov	edx, dword ptr [rdi+128*4]	; device attribute system memory
    26                                  					; device zero = executable space
    27                                  					; flags ++ size in pages
    28 00000026 A900004000              	test	eax, 00400000h		; big and maybe not system memory?
    29 0000002B 7433                    	jz	_sabr_executable_space	; yes executable space
    30                                  
    31 0000002D F7C33F000000            	test	ebx, 63
    32 00000033 742B                    	jz	_sabr_executable_space	; yes executable space
    33                                  					; no some other space
    34                                  
    35 00000035 4881E33F000000          	and	rbx, 63			; extend device index -> 64 bits
    36                                  
    37 0000003C 8B949F00020000          	mov	edx, dword ptr [rdi+128*4+rbx*4]
    38 00000043 F7C200004000            	test	edx, 00400000h		; DATA16_FLAG     %equ    00400000h
    39 00000049 7532                    	jnz	 _sabr_device_array	; other than system memory type 0800000
    40 0000004B F7C200008000            	test	edx, 00800000h		; but is it any type at all?
    41 00000051 7447                    	jz	_sabr_guard		; range issue. The device is void
    42                                  
    43 00000053 89C3                    	mov	ebx, eax
    44 00000055 81E3C0FF3F00            	and	ebx, 003FFFC0h		; blocks of 64 pages if not device zero
    45 0000005B E90E000000              	jmp	_sabr_executable_type	; devices usable as system memory
    46                                  	
    47                                  _sabr_executable_space:			; is the target page @+ application space?
    48 00000060 81E3FFFF3F00            	and	ebx, 003FFFFFh		; just the page, not any flags
    49 00000066 3B9F20010000            	cmp	ebx, dword ptr [rdi+72*4]
    50 0000006C 782C                    	js	_sabr_guard		; neither ISrs nor applications may base ISR space
    51                                  
    52                                  _sabr_executable_type:			; has the device this much memory?
    53 0000006E 81E2FFFF3F00            	and	edx, 003FFFFFh		; 4K-word page high index of device
    54                                  					; has the device this many pages?
    55 00000074 29DA                    	sub	edx, ebx
    56                                  
    57 00000076 7927                    	jns	_sabr_thru		; yes
    58 00000078 E91D000000              	jmp	_sabr_guard		; no
    59                                  
    60                                  _sabr_device_array:
    61 0000007D F7C100008000            	test	ecx, 00800000h		; psr
    62 00000083 7436                    	jz	_sabr_guard_authority	; only be here if you are an ISR
    63 00000085 89C3                    	mov	ebx, eax		; refresh the requested block index
    64 00000087 81E3FFFF3F00            	and	ebx, 003FFFFFh
    65 0000008D C1EB06                  	shr	ebx, 6			; align it with high index from device port
    66 00000090 81E2FFFF3F00            	and	edx, 003FFFFFh		; has the device array this many blocks?
    67                                  
    68 00000096 29DA                    	sub	edx, ebx
    69 00000098 7905                    	jns	_sabr_thru		; yes
    70                                  					; no
    71                                  _sabr_guard:
    72 0000009A B80100C000              	mov	eax, 00C00001h		; no-access value
    73                                  					; will trip on reference in target window
    74                                  _sabr_thru:
    75 0000009F 4881E63F000000          	and	rsi, 63			; zero extend rsi
    76 000000A6 8904B7                  	mov	dword ptr [rdi+rsi*4], eax
    77                                  
    78 000000A9 0FC8                    	bswap	eax
    79 000000AB 418984B000010000        	mov	dword ptr [r8+rsi*4+64*4], eax	; TCB + ABT
    80                                  
    81 000000B3 4831C0                  	xor	rax, rax
    82 000000B6 E905000000              	jmp	_sabrx			; -> TCB + ABT + window index
    83                                  
    84                                  _sabr_guard_authority:
    85 000000BB B8FFFFFFFF              	mov	eax, -1
    86                                  
    87 000000C0 5B                      _sabrx:	pop	rbx
    88 000000C1 C3                      	ret
