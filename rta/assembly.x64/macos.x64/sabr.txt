     1                                  ;		edi -> value	-144(ebp) -> rax 16(rax) -> edi : int
     2                                  ;		esi -> ea	-60(rbp)  -> esi		: int
     3                                  ;		rdx -> base	-48(rbp)  -> rax + 1248  -> rdx	: pointer
     4                                  ;		ecx <- psr
     5                                  ;		r8  -> platform address tcp page = &devices[0].pages[base[65]]
     6                                  
     7                                  
     8                                  %define	ptr
     9                                  
    10                                  	global	_sabr
    11                                  	extern	_ultra
    12                                  
    13 00000000 53                      _sabr:	push	rbx
    14                                  
    15 00000001 89F0                    	mov	eax, esi		; EA
    16 00000003 89FB                    	mov	ebx, edi		; value
    17 00000005 4889D7                  	mov	rdi, rdx		; base[]
    18                                  
    19 00000008 A93E000000              	test	eax, 0000003Eh		; target window must be 2..63
    20 0000000D 0F84C6000000            	jz	_sabr_guard_authority
    21 00000013 A9C0FFFF00              	test	eax, 00FFFFC0h
    22 00000018 0F85BB000000            	jnz	_sabr_guard_authority
    23                                  
    24 0000001E 89D8                    	mov	eax, ebx		; cache final copy. EA remains in esi
    25                                  
    26 00000020 8B9700020000            	mov	edx, dword ptr [rdi+128*4]	; device attribute system memory
    27                                  					; device zero = executable space
    28                                  					; flags ++ size in pages
    29 00000026 A900004000              	test	eax, 00400000h		; big and maybe not system memory?
    30 0000002B 7433                    	jz	_sabr_executable_space	; yes executable space
    31                                  
    32 0000002D F7C33F000000            	test	ebx, 63
    33 00000033 742B                    	jz	_sabr_executable_space	; yes executable space
    34                                  					; no some other space
    35                                  
    36 00000035 4881E33F000000          	and	rbx, 63			; extend device index -> 64 bits
    37                                  
    38 0000003C 8B949F00020000          	mov	edx, dword ptr [rdi+128*4+rbx*4]
    39 00000043 F7C200004000            	test	edx, 00400000h		; DATA16_FLAG     %equ    00400000h
    40 00000049 7532                    	jnz	 _sabr_device_array	; other than system memory type 0800000
    41 0000004B F7C200008000            	test	edx, 00800000h		; but is it any type at all?
    42 00000051 7447                    	jz	_sabr_guard		; range issue. The device is void
    43                                  
    44 00000053 89C3                    	mov	ebx, eax
    45 00000055 81E3C0FF3F00            	and	ebx, 003FFFC0h		; blocks of 64 pages if not device zero
    46 0000005B E90E000000              	jmp	_sabr_executable_type	; devices usable as system memory
    47                                  	
    48                                  _sabr_executable_space:			; is the target page @+ application space?
    49 00000060 81E3FFFF3F00            	and	ebx, 003FFFFFh		; just the page, not any flags
    50 00000066 3B9F20010000            	cmp	ebx, dword ptr [rdi+72*4]
    51 0000006C 782C                    	js	_sabr_guard		; neither ISrs nor applications may base ISR space
    52                                  
    53                                  _sabr_executable_type:			; has the device this much memory?
    54 0000006E 81E2FFFF3F00            	and	edx, 003FFFFFh		; 4K-word page high index of device
    55                                  					; has the device this many pages?
    56 00000074 29DA                    	sub	edx, ebx
    57                                  
    58 00000076 7927                    	jns	_sabr_thru		; yes
    59 00000078 E91D000000              	jmp	_sabr_guard		; no
    60                                  
    61                                  _sabr_device_array:
    62 0000007D F7C100008000            	test	ecx, 00800000h		; psr
    63 00000083 7454                    	jz	_sabr_guard_authority	; only be here if you are an ISR
    64 00000085 89C3                    	mov	ebx, eax		; refresh the requested block index
    65 00000087 81E3FFFF3F00            	and	ebx, 003FFFFFh
    66 0000008D C1EB06                  	shr	ebx, 6			; align it with high index from device port
    67 00000090 81E2FFFF3F00            	and	edx, 003FFFFFh		; has the device array this many blocks?
    68                                  
    69 00000096 29DA                    	sub	edx, ebx
    70 00000098 7905                    	jns	_sabr_thru		; yes
    71                                  					; no
    72                                  _sabr_guard:
    73 0000009A B80100C000              	mov	eax, 00C00001h		; no-access value
    74                                  					; will trip on reference in target window
    75                                  _sabr_thru:
    76 0000009F 4881E63F000000          	and	rsi, 63			; zero extend rsi
    77 000000A6 8904B7                  	mov	dword ptr [rdi+rsi*4], eax
    78                                  
    79 000000A9 8B9704010000            	mov	edx, dword ptr [rdi+65*4]	; base[65]
    80 000000AF 48C1E22A                	shl	rdx, 64-22
    81 000000B3 48C1EA1C                	shr	rdx, 64-22-12-2		; * 4096 * 4
    82 000000B7 4C01C2                  	add	rdx, r8			; + memory
    83                                  
    84 000000BA 0FC8                    	bswap	eax
    85                                  
    86 000000BC 4D898670040000          	mov	qword ptr [r14+284*4], r8
    87 000000C3 49899678040000          	mov	qword ptr [r14+286*4], rdx
    88                                  
    89 000000CA 8984B200010000          	mov	dword ptr [rdx+rsi*4+64*4], eax	; TCB + ABT
    90                                  
    91 000000D1 4831C0                  	xor	rax, rax
    92 000000D4 E905000000              	jmp	_sabrx			; -> TCB + ABT + window index
    93                                  
    94                                  _sabr_guard_authority:
    95 000000D9 B8FFFFFFFF              	mov	eax, -1
    96                                  
    97 000000DE 5B                      _sabrx:	pop	rbx
    98 000000DF C3                      	ret
