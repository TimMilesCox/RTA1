export	PLATFORM=`uname`
if	[ $PLATFORM = Linux ]
then
	RAMFS=/dynamic/rta
else
	RAMFS=/Volumes/rta
fi

if	[ ! -e "$RAMFS/fponline" ]
then
	export	OS_FAMILY=`uname -s`
	export	OS_TARGET=`uname -p`

	echo	OS family "$OS_FAMILY" target "$OS_TARGET"

	if	[ "$OS_TARGET" = "powerpc" ] && [ "$OS_FAMILY" = "Darwin" ]
	then

	#	criteria might be inexact
	#	and should be based Darwin + `uname -r` = [ 10.4.x 10.5.x ]
	#	but `uname -r` returns those as 8.11.x which is alphanumeric > 10.6.xx

	sudo	./ramdev	# old OSX does not like -E in sudo ./ramdev and fails it
	else
	sudo -E	./ramdev	# -E passes the environment thru sudo except in old OSX
	fi
fi

if      [ ! -e $RAMFS/fponline/$USER ]
then
        mkdir   $RAMFS/fponline/$USER
        chmod   0777 $RAMFS/fponline/$USER
	echo	"	\$path	"$RTA_BINARY/../../target.rta/ > $RAMFS/fponline/$USER/target.def
	echo	"	\$path	"$HOME/dynamic.rta/ > $RAMFS/fponline/$USER/target2.def
fi

if	[ ! -e $HOME/dynamic.rta ]
then
	mkdir	$HOME/dynamic.rta
	cp	$RTA_BINARY/../../target.rta/fponline/dynamic.def $HOME/dynamic.rta
fi

if	[ ! -e $HOME/dynamic.rta/my_names.def ]
then
	touch	$HOME/dynamic.rta/my_names.def
fi

COME_FROM=$PWD			# pushd / popd are noisy
cd	$RAMFS/fponline/$USER/
masmx	-wk	$RTA_BINARY/../../target.rta/fponline/fixed.def fixed.txo
masmx	-wk	$HOME/dynamic.rta/my_names.def my_names
cd	$COME_FROM

