#
#    Copyright Tim Cox, 2012
#    TimMilesCox@gmx.ch
#
#    This file is part of the software emulation of the freeware
#    processor architecture
#
#                RTA1
#
#    RTA1 is a free processor architecture design.
#
#    The executable emulation of RTA1 is free software.
#
#    Instruction code for the target RTA1 architecture is free software
#    if it is delivered with this software
#
#    Software programs delivered with this software to connect the
#    emulated RTA1 with real network interfaces in the emulator host
#    are free software
#
#    Scripts and programs delivered with this software for running
#    on other computers and interacting with the RTA1 are free software
#
#    Scripts and utility programs for constructing RTA1 target
#    executable software are free software
#
#    You can redistribute it and/or modify RTA1
#    under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    RTA1 is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with RTA1.  If not, see <http://www.gnu.org/licenses/>.
#
#
#

#	construct a file system image for RTA1 with the fsformat
#	utility using the text rules in loadfs

#	in the prototype and emulation stage
#	this step is typically carried out to construct a read-only
#	file-system containing web pages which the emulated RTA1
#	can transmit in its rÃ´le as a web host

#	a command to load the file system is keyed at emulator start
#	before the g (go) command

#		l	../fsimages/rand7
#		g


if	[ -z $1 ]
then
	FS_BANKS=3
else
	FS_BANKS=$1
fi

if	[ ! -e $HOME/enterprise.rta ]
then
	mkdir	$HOME/enterprise.rta
	echo	"file enterprise.html rta.doc/sample.txt" > $HOME/enterprise.rta/web
fi

cat	fsimages/baseload > loadfs
echo	"tree web2" >> loadfs
cat	$HOME/enterprise.rta/web >> loadfs
echo	"." >> loadfs
echo	"." >> loadfs

$RTA_BINARY/fsformat fsimages/rand7 -b $FS_BANKS < loadfs
echo	file system $FS_BANKS blocks of 768K octets
