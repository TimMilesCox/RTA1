#
#    Copyright Tim Cox, 2012
#    TimMilesCox@gmx.ch
#
#    This file is part of the software emulation of the freeware
#    processor architecture
#
#                RTA1
#
#    RTA1 is a free processor architecture design.
#
#    The executable emulation of RTA1 is free software.
#
#    Instruction code for the target RTA1 architecture is free software
#    if it is delivered with this software
#
#    Software programs delivered with this software to connect the
#    emulated RTA1 with real network interfaces in the emulator host
#    are free software
#
#    Scripts and programs delivered with this software for running
#    on other computers and interacting with the RTA1 are free software
#
#    Scripts and utility programs for constructing RTA1 target
#    executable software are free software
#
#    You can redistribute and/or modify RTA1 and its materials
#    under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    RTA1 is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with RTA1.  If not, see <http://www.gnu.org/licenses/>.
#
#

if	[ -z "$RTA_BIN_64" ]
then
echo	export RTA_BIN_64=directory-for-new-binaries \
	in your shell profile
echo	and add \$RTA_BIN_64 to \$PATH
exit	0
fi

if      [ ! -d "$RTA_BIN_64" ]
then
mkdir   "$RTA_BIN_64"
fi

pushd ../netifx
gcc -m64 -c -funsigned-char -o ../emulator.x64/argue.o argue.c
popd

gcc -m64 -funsigned-char -D_FILE_OFFSET_BITS=64 -o $RTA_BIN_64/fds24 ../emulator.x64/argue.o fds24.c
gcc -m64 -funsigned-char -D_FILE_OFFSET_BITS=64 -o $RTA_BIN_64/fsformat ../emulator.x64/argue.o fsformat.c
gcc -m64 -funsigned-char -D_FILE_OFFSET_BITS=64 -o $RTA_BIN_64/fxformat ../emulator.x64/argue.o fxformat.c
gcc -m64 -funsigned-char -D_FILE_OFFSET_BITS=64 -o $RTA_BIN_64/lstring ../emulator.x64/argue.o lstring.c
gcc -m64 -funsigned-char -D_FILE_OFFSET_BITS=64 -o $RTA_BIN_64/slab ../emulator.x64/argue.o slab.c
gcc -m64 -funsigned-char -D_FILE_OFFSET_BITS=64 -o $RTA_BIN_64/4kformat ../emulator.x64/argue.o 4kformat.c
gcc -m64 -funsigned-char -D_FILE_OFFSET_BITS=64 -o $RTA_BIN_64/1gformat ../emulator.x64/argue.o 1gformat.c
gcc -m64 -funsigned-char -D_FILE_OFFSET_BITS=64 -o $RTA_BIN_64/2gformat ../emulator.x64/argue.o 2gformat.c
gcc -m64 -funsigned-char -D_FILE_OFFSET_BITS=64 -o $RTA_BIN_64/4gformat ../emulator.x64/argue.o 4gformat.c
gcc -m64 -funsigned-char -D_FILE_OFFSET_BITS=64 -o $RTA_BIN_64/8gformat ../emulator.x64/argue.o 8gformat.c

echo	$RTA_BIN_64
ls -l	$RTA_BIN_64

